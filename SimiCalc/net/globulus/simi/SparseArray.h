//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/SparseArray.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiSparseArray")
#ifdef RESTRICT_NetGlobulusSimiSparseArray
#define INCLUDE_ALL_NetGlobulusSimiSparseArray 0
#else
#define INCLUDE_ALL_NetGlobulusSimiSparseArray 1
#endif
#undef RESTRICT_NetGlobulusSimiSparseArray

#if !defined (NetGlobulusSimiSparseArray_) && (INCLUDE_ALL_NetGlobulusSimiSparseArray || defined(INCLUDE_NetGlobulusSimiSparseArray))
#define NetGlobulusSimiSparseArray_

@interface NetGlobulusSimiSparseArray : NSObject < NSCopying >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (void)appendWithInt:(jint)key
               withId:(id)value;

- (void)clear;

- (NetGlobulusSimiSparseArray *)java_clone;

- (void)delete__WithInt:(jint)key;

- (id)getWithInt:(jint)key;

- (id)getWithInt:(jint)key
          withId:(id)valueIfKeyNotFound;

+ (jint)idealByteArraySizeWithInt:(jint)need;

+ (jint)idealIntArraySizeWithInt:(jint)need;

- (jint)indexOfKeyWithInt:(jint)key;

- (jint)indexOfValueWithId:(id)value;

- (jint)keyAtWithInt:(jint)index;

- (void)putWithInt:(jint)key
            withId:(id)value;

- (void)removeWithInt:(jint)key;

- (void)removeAtWithInt:(jint)index;

- (void)setValueAtWithInt:(jint)index
                   withId:(id)value;

- (jint)size;

- (id)valueAtWithInt:(jint)index;

@end

J2OBJC_STATIC_INIT(NetGlobulusSimiSparseArray)

FOUNDATION_EXPORT void NetGlobulusSimiSparseArray_init(NetGlobulusSimiSparseArray *self);

FOUNDATION_EXPORT NetGlobulusSimiSparseArray *new_NetGlobulusSimiSparseArray_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetGlobulusSimiSparseArray *create_NetGlobulusSimiSparseArray_init(void);

FOUNDATION_EXPORT void NetGlobulusSimiSparseArray_initWithInt_(NetGlobulusSimiSparseArray *self, jint initialCapacity);

FOUNDATION_EXPORT NetGlobulusSimiSparseArray *new_NetGlobulusSimiSparseArray_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetGlobulusSimiSparseArray *create_NetGlobulusSimiSparseArray_initWithInt_(jint initialCapacity);

FOUNDATION_EXPORT jint NetGlobulusSimiSparseArray_idealByteArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint NetGlobulusSimiSparseArray_idealIntArraySizeWithInt_(jint need);

J2OBJC_TYPE_LITERAL_HEADER(NetGlobulusSimiSparseArray)

#endif

#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiSparseArray")
