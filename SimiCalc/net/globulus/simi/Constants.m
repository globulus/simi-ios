//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Constants.java
//

#include "J2ObjC_source.h"
#include "Constants.h"

@interface NetGlobulusSimiConstants ()

- (instancetype)init;

@end

__attribute__((unused)) static void NetGlobulusSimiConstants_init(NetGlobulusSimiConstants *self);

__attribute__((unused)) static NetGlobulusSimiConstants *new_NetGlobulusSimiConstants_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetGlobulusSimiConstants *create_NetGlobulusSimiConstants_init(void);

NSString *NetGlobulusSimiConstants_MUTABLE = @"$";
NSString *NetGlobulusSimiConstants_PRIVATE = @"_";
NSString *NetGlobulusSimiConstants_IMPLICIT = @"#";
NSString *NetGlobulusSimiConstants_INIT = @"init";
NSString *NetGlobulusSimiConstants_SELF = @"self";
NSString *NetGlobulusSimiConstants_SUPER = @"super";
NSString *NetGlobulusSimiConstants_KEY = @"key";
NSString *NetGlobulusSimiConstants_VALUE = @"value";
NSString *NetGlobulusSimiConstants_ITERATE = @"iterate";
NSString *NetGlobulusSimiConstants_NEXT = @"next";
NSString *NetGlobulusSimiConstants_HAS = @"has";
NSString *NetGlobulusSimiConstants_EQUALS = @"equals";
NSString *NetGlobulusSimiConstants_COMPARE_TO = @"compareTo";
NSString *NetGlobulusSimiConstants_TO_STRING = @"toString";
NSString *NetGlobulusSimiConstants_RAISE = @"raise";
NSString *NetGlobulusSimiConstants_CLASS_OBJECT = @"$Object";
NSString *NetGlobulusSimiConstants_CLASS_STRING = @"$String";
NSString *NetGlobulusSimiConstants_CLASS_NUMBER = @"$Number";
NSString *NetGlobulusSimiConstants_CLASS_CLASS = @"Class";
NSString *NetGlobulusSimiConstants_CLASS_EXCEPTION = @"Exception";
NSString *NetGlobulusSimiConstants_CLASS_GLOBALS = @"Globals";
NSString *NetGlobulusSimiConstants_EXCEPTION_NUMBER_FORMAT = @"NumberFormatException";

@implementation NetGlobulusSimiConstants

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetGlobulusSimiConstants_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MUTABLE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "PRIVATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "IMPLICIT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "INIT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "SELF", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "SUPER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "VALUE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "ITERATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "NEXT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "HAS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "EQUALS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "COMPARE_TO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "TO_STRING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "RAISE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "CLASS_OBJECT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "CLASS_STRING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "CLASS_NUMBER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "CLASS_CLASS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "CLASS_EXCEPTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "CLASS_GLOBALS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "EXCEPTION_NUMBER_FORMAT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
  };
  static const void *ptrTable[] = { &NetGlobulusSimiConstants_MUTABLE, &NetGlobulusSimiConstants_PRIVATE, &NetGlobulusSimiConstants_IMPLICIT, &NetGlobulusSimiConstants_INIT, &NetGlobulusSimiConstants_SELF, &NetGlobulusSimiConstants_SUPER, &NetGlobulusSimiConstants_KEY, &NetGlobulusSimiConstants_VALUE, &NetGlobulusSimiConstants_ITERATE, &NetGlobulusSimiConstants_NEXT, &NetGlobulusSimiConstants_HAS, &NetGlobulusSimiConstants_EQUALS, &NetGlobulusSimiConstants_COMPARE_TO, &NetGlobulusSimiConstants_TO_STRING, &NetGlobulusSimiConstants_RAISE, &NetGlobulusSimiConstants_CLASS_OBJECT, &NetGlobulusSimiConstants_CLASS_STRING, &NetGlobulusSimiConstants_CLASS_NUMBER, &NetGlobulusSimiConstants_CLASS_CLASS, &NetGlobulusSimiConstants_CLASS_EXCEPTION, &NetGlobulusSimiConstants_CLASS_GLOBALS, &NetGlobulusSimiConstants_EXCEPTION_NUMBER_FORMAT };
  static const J2ObjcClassInfo _NetGlobulusSimiConstants = { "Constants", "net.globulus.simi", ptrTable, methods, fields, 7, 0x10, 1, 22, -1, -1, -1, -1, -1 };
  return &_NetGlobulusSimiConstants;
}

@end

void NetGlobulusSimiConstants_init(NetGlobulusSimiConstants *self) {
  NSObject_init(self);
}

NetGlobulusSimiConstants *new_NetGlobulusSimiConstants_init() {
  J2OBJC_NEW_IMPL(NetGlobulusSimiConstants, init)
}

NetGlobulusSimiConstants *create_NetGlobulusSimiConstants_init() {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiConstants, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiConstants)
