//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Resolver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiResolver")
#ifdef RESTRICT_NetGlobulusSimiResolver
#define INCLUDE_ALL_NetGlobulusSimiResolver 0
#else
#define INCLUDE_ALL_NetGlobulusSimiResolver 1
#endif
#undef RESTRICT_NetGlobulusSimiResolver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetGlobulusSimiResolver_) && (INCLUDE_ALL_NetGlobulusSimiResolver || defined(INCLUDE_NetGlobulusSimiResolver))
#define NetGlobulusSimiResolver_

#define RESTRICT_NetGlobulusSimiExpr 1
#define INCLUDE_NetGlobulusSimiExpr_Visitor 1
#include "Expr.h"

#define RESTRICT_NetGlobulusSimiStmt 1
#define INCLUDE_NetGlobulusSimiStmt_Visitor 1
#include "Stmt.h"

@class JavaLangVoid;
@class NetGlobulusSimiExpr_Annotations;
@class NetGlobulusSimiExpr_Assign;
@class NetGlobulusSimiExpr_Binary;
@class NetGlobulusSimiExpr_Block;
@class NetGlobulusSimiExpr_Call;
@class NetGlobulusSimiExpr_Get;
@class NetGlobulusSimiExpr_Grouping;
@class NetGlobulusSimiExpr_Gu;
@class NetGlobulusSimiExpr_Literal;
@class NetGlobulusSimiExpr_Logical;
@class NetGlobulusSimiExpr_ObjectLiteral;
@class NetGlobulusSimiExpr_Self;
@class NetGlobulusSimiExpr_Set;
@class NetGlobulusSimiExpr_Super;
@class NetGlobulusSimiExpr_Unary;
@class NetGlobulusSimiExpr_Variable;
@class NetGlobulusSimiInterpreter;
@class NetGlobulusSimiStmt_Annotation;
@class NetGlobulusSimiStmt_Break;
@class NetGlobulusSimiStmt_Class;
@class NetGlobulusSimiStmt_Continue;
@class NetGlobulusSimiStmt_Elsif;
@class NetGlobulusSimiStmt_Expression;
@class NetGlobulusSimiStmt_For;
@class NetGlobulusSimiStmt_Function;
@class NetGlobulusSimiStmt_If;
@class NetGlobulusSimiStmt_Print;
@class NetGlobulusSimiStmt_Rescue;
@class NetGlobulusSimiStmt_Return;
@class NetGlobulusSimiStmt_While;
@class NetGlobulusSimiStmt_Yield;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface NetGlobulusSimiResolver : NSObject < NetGlobulusSimiExpr_Visitor, NetGlobulusSimiStmt_Visitor > {
 @public
  id<JavaUtilSet> globalScope_;
}

#pragma mark Public

- (JavaLangVoid *)visitAnnotationsExprWithNetGlobulusSimiExpr_Annotations:(NetGlobulusSimiExpr_Annotations *)expr;

- (JavaLangVoid *)visitAnnotationStmtWithNetGlobulusSimiStmt_Annotation:(NetGlobulusSimiStmt_Annotation *)stmt;

- (JavaLangVoid *)visitAssignExprWithNetGlobulusSimiExpr_Assign:(NetGlobulusSimiExpr_Assign *)expr;

- (JavaLangVoid *)visitBinaryExprWithNetGlobulusSimiExpr_Binary:(NetGlobulusSimiExpr_Binary *)expr;

- (JavaLangVoid *)visitBlockExprWithNetGlobulusSimiExpr_Block:(NetGlobulusSimiExpr_Block *)stmt
                                                  withBoolean:(jboolean)newScope
                                                  withBoolean:(jboolean)execute;

- (JavaLangVoid *)visitBreakStmtWithNetGlobulusSimiStmt_Break:(NetGlobulusSimiStmt_Break *)stmt;

- (JavaLangVoid *)visitCallExprWithNetGlobulusSimiExpr_Call:(NetGlobulusSimiExpr_Call *)expr;

- (JavaLangVoid *)visitClassStmtWithNetGlobulusSimiStmt_Class:(NetGlobulusSimiStmt_Class *)stmt
                                                  withBoolean:(jboolean)addToEnv;

- (JavaLangVoid *)visitContinueStmtWithNetGlobulusSimiStmt_Continue:(NetGlobulusSimiStmt_Continue *)stmt;

- (JavaLangVoid *)visitElsifStmtWithNetGlobulusSimiStmt_Elsif:(NetGlobulusSimiStmt_Elsif *)stmt;

- (JavaLangVoid *)visitExpressionStmtWithNetGlobulusSimiStmt_Expression:(NetGlobulusSimiStmt_Expression *)stmt;

- (JavaLangVoid *)visitForStmtWithNetGlobulusSimiStmt_For:(NetGlobulusSimiStmt_For *)stmt;

- (JavaLangVoid *)visitFunctionStmtWithNetGlobulusSimiStmt_Function:(NetGlobulusSimiStmt_Function *)stmt;

- (JavaLangVoid *)visitGetExprWithNetGlobulusSimiExpr_Get:(NetGlobulusSimiExpr_Get *)expr;

- (JavaLangVoid *)visitGroupingExprWithNetGlobulusSimiExpr_Grouping:(NetGlobulusSimiExpr_Grouping *)expr;

- (JavaLangVoid *)visitGuExprWithNetGlobulusSimiExpr_Gu:(NetGlobulusSimiExpr_Gu *)expr;

- (JavaLangVoid *)visitIfStmtWithNetGlobulusSimiStmt_If:(NetGlobulusSimiStmt_If *)stmt;

- (JavaLangVoid *)visitLiteralExprWithNetGlobulusSimiExpr_Literal:(NetGlobulusSimiExpr_Literal *)expr;

- (JavaLangVoid *)visitLogicalExprWithNetGlobulusSimiExpr_Logical:(NetGlobulusSimiExpr_Logical *)expr;

- (JavaLangVoid *)visitObjectLiteralExprWithNetGlobulusSimiExpr_ObjectLiteral:(NetGlobulusSimiExpr_ObjectLiteral *)expr;

- (JavaLangVoid *)visitPrintStmtWithNetGlobulusSimiStmt_Print:(NetGlobulusSimiStmt_Print *)stmt;

- (JavaLangVoid *)visitRescueStmtWithNetGlobulusSimiStmt_Rescue:(NetGlobulusSimiStmt_Rescue *)stmt;

- (JavaLangVoid *)visitReturnStmtWithNetGlobulusSimiStmt_Return:(NetGlobulusSimiStmt_Return *)stmt;

- (JavaLangVoid *)visitSelfExprWithNetGlobulusSimiExpr_Self:(NetGlobulusSimiExpr_Self *)expr;

- (JavaLangVoid *)visitSetExprWithNetGlobulusSimiExpr_Set:(NetGlobulusSimiExpr_Set *)expr;

- (JavaLangVoid *)visitSuperExprWithNetGlobulusSimiExpr_Super:(NetGlobulusSimiExpr_Super *)expr;

- (JavaLangVoid *)visitUnaryExprWithNetGlobulusSimiExpr_Unary:(NetGlobulusSimiExpr_Unary *)expr;

- (JavaLangVoid *)visitVariableExprWithNetGlobulusSimiExpr_Variable:(NetGlobulusSimiExpr_Variable *)expr;

- (JavaLangVoid *)visitWhileStmtWithNetGlobulusSimiStmt_While:(NetGlobulusSimiStmt_While *)stmt;

- (JavaLangVoid *)visitYieldStmtWithNetGlobulusSimiStmt_Yield:(NetGlobulusSimiStmt_Yield *)stmt;

#pragma mark Package-Private

- (instancetype)initWithNetGlobulusSimiInterpreter:(NetGlobulusSimiInterpreter *)interpreter;

- (void)resolveWithJavaUtilList:(id<JavaUtilList>)statements;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetGlobulusSimiResolver)

J2OBJC_FIELD_SETTER(NetGlobulusSimiResolver, globalScope_, id<JavaUtilSet>)

FOUNDATION_EXPORT void NetGlobulusSimiResolver_initWithNetGlobulusSimiInterpreter_(NetGlobulusSimiResolver *self, NetGlobulusSimiInterpreter *interpreter);

FOUNDATION_EXPORT NetGlobulusSimiResolver *new_NetGlobulusSimiResolver_initWithNetGlobulusSimiInterpreter_(NetGlobulusSimiInterpreter *interpreter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetGlobulusSimiResolver *create_NetGlobulusSimiResolver_initWithNetGlobulusSimiInterpreter_(NetGlobulusSimiInterpreter *interpreter);

J2OBJC_TYPE_LITERAL_HEADER(NetGlobulusSimiResolver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiResolver")
