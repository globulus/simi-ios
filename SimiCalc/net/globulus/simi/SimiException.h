//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/SimiException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiSimiException")
#ifdef RESTRICT_NetGlobulusSimiSimiException
#define INCLUDE_ALL_NetGlobulusSimiSimiException 0
#else
#define INCLUDE_ALL_NetGlobulusSimiSimiException 1
#endif
#undef RESTRICT_NetGlobulusSimiSimiException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMSimiException_) && (INCLUDE_ALL_NetGlobulusSimiSimiException || defined(INCLUDE_SMSimiException))
#define SMSimiException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

#define RESTRICT_NetGlobulusSimiSimiObject 1
#define INCLUDE_SMSimiObject 1
#include "SimiObject.h"

@class JavaLangThrowable;
@protocol JavaUtilList;
@protocol SMSimiClass;
@protocol SMSimiEnvironment;
@protocol SMSimiProperty;

@interface SMSimiException : JavaLangRuntimeException < SMSimiObject >

#pragma mark Public

- (instancetype __nonnull)initWithSMSimiClass:(id<SMSimiClass>)clazz
                                 withNSString:(NSString *)message;

- (id<SMSimiObject>)cloneWithBoolean:(jboolean)mutable_;

- (id<SMSimiProperty>)getWithNSString:(NSString *)key
                withSMSimiEnvironment:(id<SMSimiEnvironment>)environment;

- (id<SMSimiClass>)getSimiClass;

- (void)setWithNSString:(NSString *)key
     withSMSimiProperty:(id<SMSimiProperty>)value
  withSMSimiEnvironment:(id<SMSimiEnvironment>)environment;

- (id<JavaUtilList>)values;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiException)

FOUNDATION_EXPORT void SMSimiException_initWithSMSimiClass_withNSString_(SMSimiException *self, id<SMSimiClass> clazz, NSString *message);

FOUNDATION_EXPORT SMSimiException *new_SMSimiException_initWithSMSimiClass_withNSString_(id<SMSimiClass> clazz, NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiException *create_SMSimiException_initWithSMSimiClass_withNSString_(id<SMSimiClass> clazz, NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiException)

@compatibility_alias NetGlobulusSimiSimiException SMSimiException;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiSimiException")
