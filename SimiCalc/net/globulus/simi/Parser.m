//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Parser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"
#include "java/util/stream/Collector.h"
#include "java/util/stream/Collectors.h"
#include "java/util/stream/Stream.h"
#include "Constants.h"
#include "ErrorHub.h"
#include "Expr.h"
#include "Parser.h"
#include "Pass.h"
#include "SimiValue.h"
#include "Stmt.h"
#include "Token.h"
#include "TokenType.h"

@class NetGlobulusSimiParser_ParseError;

#pragma clang diagnostic ignored "-Wprotocol"

@interface NetGlobulusSimiParser () {
 @public
  id<JavaUtilList> tokens_;
  jint current_;
  id<JavaUtilList> annotations_;
}

- (NetGlobulusSimiExpr *)expression;

- (NetGlobulusSimiStmt *)declaration;

- (NetGlobulusSimiStmt_Class *)classDeclaration;

- (NetGlobulusSimiStmt_Annotation *)annotation;

- (NetGlobulusSimiStmt *)statementWithBoolean:(jboolean)lambda;

- (NetGlobulusSimiStmt *)forStatement;

- (NetGlobulusSimiStmt *)ifStatement;

- (NetGlobulusSimiStmt *)whenStatement;

- (NetGlobulusSimiStmt *)printStatementWithBoolean:(jboolean)lambda;

- (NetGlobulusSimiStmt *)returnStatementWithBoolean:(jboolean)lambda;

- (NetGlobulusSimiStmt *)yieldStatementWithBoolean:(jboolean)lambda;

- (NetGlobulusSimiStmt *)whileStatement;

- (NetGlobulusSimiStmt *)breakStatement;

- (NetGlobulusSimiStmt *)continueStatement;

- (NetGlobulusSimiStmt *)rescueStatement;

- (NetGlobulusSimiStmt_Expression *)expressionStatementWithBoolean:(jboolean)lambda;

- (void)checkStatementEndWithBoolean:(jboolean)lambda;

- (NetGlobulusSimiStmt_Function *)functionWithNSString:(NSString *)kind;

- (NetGlobulusSimiExpr_Block *)blockWithNSString:(NSString *)kind
                                     withBoolean:(jboolean)lambda;

- (NetGlobulusSimiExpr_Block *)blockWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)declaration
                                                withNSString:(NSString *)kind
                                                 withBoolean:(jboolean)lambda;

- (id<JavaUtilList>)paramsWithNSString:(NSString *)kind
                           withBoolean:(jboolean)lambda;

- (JavaLangInteger *)peekParams;

- (NetGlobulusSimiExpr *)assignment;

- (NetGlobulusSimiExpr *)or__;

- (NetGlobulusSimiExpr *)and__;

- (NetGlobulusSimiExpr *)equality;

- (NetGlobulusSimiExpr *)comparison;

- (NetGlobulusSimiExpr *)addition;

- (NetGlobulusSimiExpr *)multiplication;

- (NetGlobulusSimiExpr *)nilCoalescence;

- (NetGlobulusSimiExpr *)unary;

- (NetGlobulusSimiExpr *)call;

- (NetGlobulusSimiExpr *)finishCallWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)callee;

- (NetGlobulusSimiExpr *)primary;

- (NetGlobulusSimiExpr *)objectLiteral;

- (void)matchAllNewlines;

- (jboolean)matchSequenceWithNetGlobulusSimiTokenTypeArray:(IOSObjectArray *)types;

- (jboolean)matchWithNetGlobulusSimiTokenTypeArray:(IOSObjectArray *)types;

- (NetGlobulusSimiToken *)consumeWithNetGlobulusSimiTokenType:(NetGlobulusSimiTokenType *)type
                                                 withNSString:(NSString *)message;

- (jboolean)checkWithNetGlobulusSimiTokenType:(NetGlobulusSimiTokenType *)tokenType;

- (NetGlobulusSimiToken *)advance;

- (jboolean)isAtEnd;

- (NetGlobulusSimiToken *)peek;

- (jboolean)peekSequenceWithNetGlobulusSimiTokenTypeArray:(IOSObjectArray *)tokenTypes;

- (NetGlobulusSimiToken *)previous;

- (NetGlobulusSimiToken *)operatorFromAssignWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)assignOp;

- (NetGlobulusSimiParser_ParseError *)errorWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)token
                                                       withNSString:(NSString *)message;

- (void)synchronize;

- (id<JavaUtilList>)getAnnotations;

@end

J2OBJC_FIELD_SETTER(NetGlobulusSimiParser, tokens_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetGlobulusSimiParser, annotations_, id<JavaUtilList>)

inline NSString *NetGlobulusSimiParser_get_LAMBDA(void);
static NSString *NetGlobulusSimiParser_LAMBDA = @"lambda";
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetGlobulusSimiParser, LAMBDA, NSString *)

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_expression(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_declaration(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt_Class *NetGlobulusSimiParser_classDeclaration(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt_Annotation *NetGlobulusSimiParser_annotation(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_statementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_forStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_ifStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_whenStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_printStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_returnStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_yieldStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_whileStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_breakStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_continueStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt *NetGlobulusSimiParser_rescueStatement(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiStmt_Expression *NetGlobulusSimiParser_expressionStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda);

__attribute__((unused)) static void NetGlobulusSimiParser_checkStatementEndWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda);

__attribute__((unused)) static NetGlobulusSimiStmt_Function *NetGlobulusSimiParser_functionWithNSString_(NetGlobulusSimiParser *self, NSString *kind);

__attribute__((unused)) static NetGlobulusSimiExpr_Block *NetGlobulusSimiParser_blockWithNSString_withBoolean_(NetGlobulusSimiParser *self, NSString *kind, jboolean lambda);

__attribute__((unused)) static NetGlobulusSimiExpr_Block *NetGlobulusSimiParser_blockWithNetGlobulusSimiToken_withNSString_withBoolean_(NetGlobulusSimiParser *self, NetGlobulusSimiToken *declaration, NSString *kind, jboolean lambda);

__attribute__((unused)) static id<JavaUtilList> NetGlobulusSimiParser_paramsWithNSString_withBoolean_(NetGlobulusSimiParser *self, NSString *kind, jboolean lambda);

__attribute__((unused)) static JavaLangInteger *NetGlobulusSimiParser_peekParams(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_assignment(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_or__(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_and__(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_equality(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_comparison(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_addition(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_multiplication(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_nilCoalescence(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_unary(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_call(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_finishCallWithNetGlobulusSimiExpr_(NetGlobulusSimiParser *self, NetGlobulusSimiExpr *callee);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_primary(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiExpr *NetGlobulusSimiParser_objectLiteral(NetGlobulusSimiParser *self);

__attribute__((unused)) static void NetGlobulusSimiParser_matchAllNewlines(NetGlobulusSimiParser *self);

__attribute__((unused)) static jboolean NetGlobulusSimiParser_matchSequenceWithNetGlobulusSimiTokenTypeArray_(NetGlobulusSimiParser *self, IOSObjectArray *types);

__attribute__((unused)) static jboolean NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(NetGlobulusSimiParser *self, IOSObjectArray *types);

__attribute__((unused)) static NetGlobulusSimiToken *NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(NetGlobulusSimiParser *self, NetGlobulusSimiTokenType *type, NSString *message);

__attribute__((unused)) static jboolean NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(NetGlobulusSimiParser *self, NetGlobulusSimiTokenType *tokenType);

__attribute__((unused)) static NetGlobulusSimiToken *NetGlobulusSimiParser_advance(NetGlobulusSimiParser *self);

__attribute__((unused)) static jboolean NetGlobulusSimiParser_isAtEnd(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiToken *NetGlobulusSimiParser_peek(NetGlobulusSimiParser *self);

__attribute__((unused)) static jboolean NetGlobulusSimiParser_peekSequenceWithNetGlobulusSimiTokenTypeArray_(NetGlobulusSimiParser *self, IOSObjectArray *tokenTypes);

__attribute__((unused)) static NetGlobulusSimiToken *NetGlobulusSimiParser_previous(NetGlobulusSimiParser *self);

__attribute__((unused)) static NetGlobulusSimiToken *NetGlobulusSimiParser_operatorFromAssignWithNetGlobulusSimiToken_(NetGlobulusSimiParser *self, NetGlobulusSimiToken *assignOp);

__attribute__((unused)) static NetGlobulusSimiParser_ParseError *NetGlobulusSimiParser_errorWithNetGlobulusSimiToken_withNSString_(NetGlobulusSimiParser *self, NetGlobulusSimiToken *token, NSString *message);

__attribute__((unused)) static void NetGlobulusSimiParser_synchronize(NetGlobulusSimiParser *self);

__attribute__((unused)) static id<JavaUtilList> NetGlobulusSimiParser_getAnnotations(NetGlobulusSimiParser *self);

@interface NetGlobulusSimiParser_ParseError : JavaLangRuntimeException

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetGlobulusSimiParser_ParseError)

__attribute__((unused)) static void NetGlobulusSimiParser_ParseError_init(NetGlobulusSimiParser_ParseError *self);

__attribute__((unused)) static NetGlobulusSimiParser_ParseError *new_NetGlobulusSimiParser_ParseError_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetGlobulusSimiParser_ParseError *create_NetGlobulusSimiParser_ParseError_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetGlobulusSimiParser_ParseError)

@interface NetGlobulusSimiParser_$Lambda$1 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(NetGlobulusSimiToken *)a;

@end

J2OBJC_STATIC_INIT(NetGlobulusSimiParser_$Lambda$1)

inline NetGlobulusSimiParser_$Lambda$1 *NetGlobulusSimiParser_$Lambda$1_get_instance(void);
static NetGlobulusSimiParser_$Lambda$1 *NetGlobulusSimiParser_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetGlobulusSimiParser_$Lambda$1, instance, NetGlobulusSimiParser_$Lambda$1 *)

__attribute__((unused)) static void NetGlobulusSimiParser_$Lambda$1_init(NetGlobulusSimiParser_$Lambda$1 *self);

__attribute__((unused)) static NetGlobulusSimiParser_$Lambda$1 *new_NetGlobulusSimiParser_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetGlobulusSimiParser_$Lambda$1 *create_NetGlobulusSimiParser_$Lambda$1_init(void);

@implementation NetGlobulusSimiParser

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)tokens {
  NetGlobulusSimiParser_initWithJavaUtilList_(self, tokens);
  return self;
}

- (id<JavaUtilList>)parse {
  id<JavaUtilList> statements = new_JavaUtilArrayList_init();
  while (!NetGlobulusSimiParser_isAtEnd(self)) {
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IMPORT) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      (void) NetGlobulusSimiParser_advance(self);
      continue;
    }
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE), JreLoadEnum(NetGlobulusSimiTokenType, PASS) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
      continue;
    }
    [statements addWithId:NetGlobulusSimiParser_declaration(self)];
  }
  return statements;
}

- (NetGlobulusSimiExpr *)expression {
  return NetGlobulusSimiParser_expression(self);
}

- (NetGlobulusSimiStmt *)declaration {
  return NetGlobulusSimiParser_declaration(self);
}

- (NetGlobulusSimiStmt_Class *)classDeclaration {
  return NetGlobulusSimiParser_classDeclaration(self);
}

- (NetGlobulusSimiStmt_Annotation *)annotation {
  return NetGlobulusSimiParser_annotation(self);
}

- (NetGlobulusSimiStmt *)statementWithBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_statementWithBoolean_(self, lambda);
}

- (NetGlobulusSimiStmt *)forStatement {
  return NetGlobulusSimiParser_forStatement(self);
}

- (NetGlobulusSimiStmt *)ifStatement {
  return NetGlobulusSimiParser_ifStatement(self);
}

- (NetGlobulusSimiStmt *)whenStatement {
  return NetGlobulusSimiParser_whenStatement(self);
}

- (NetGlobulusSimiStmt *)printStatementWithBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_printStatementWithBoolean_(self, lambda);
}

- (NetGlobulusSimiStmt *)returnStatementWithBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_returnStatementWithBoolean_(self, lambda);
}

- (NetGlobulusSimiStmt *)yieldStatementWithBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_yieldStatementWithBoolean_(self, lambda);
}

- (NetGlobulusSimiStmt *)whileStatement {
  return NetGlobulusSimiParser_whileStatement(self);
}

- (NetGlobulusSimiStmt *)breakStatement {
  return NetGlobulusSimiParser_breakStatement(self);
}

- (NetGlobulusSimiStmt *)continueStatement {
  return NetGlobulusSimiParser_continueStatement(self);
}

- (NetGlobulusSimiStmt *)rescueStatement {
  return NetGlobulusSimiParser_rescueStatement(self);
}

- (NetGlobulusSimiStmt_Expression *)expressionStatementWithBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_expressionStatementWithBoolean_(self, lambda);
}

- (void)checkStatementEndWithBoolean:(jboolean)lambda {
  NetGlobulusSimiParser_checkStatementEndWithBoolean_(self, lambda);
}

- (NetGlobulusSimiStmt_Function *)functionWithNSString:(NSString *)kind {
  return NetGlobulusSimiParser_functionWithNSString_(self, kind);
}

- (NetGlobulusSimiExpr_Block *)blockWithNSString:(NSString *)kind
                                     withBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, kind, lambda);
}

- (NetGlobulusSimiExpr_Block *)blockWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)declaration
                                                withNSString:(NSString *)kind
                                                 withBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_blockWithNetGlobulusSimiToken_withNSString_withBoolean_(self, declaration, kind, lambda);
}

- (id<JavaUtilList>)paramsWithNSString:(NSString *)kind
                           withBoolean:(jboolean)lambda {
  return NetGlobulusSimiParser_paramsWithNSString_withBoolean_(self, kind, lambda);
}

- (JavaLangInteger *)peekParams {
  return NetGlobulusSimiParser_peekParams(self);
}

- (NetGlobulusSimiExpr *)assignment {
  return NetGlobulusSimiParser_assignment(self);
}

- (NetGlobulusSimiExpr *)or__ {
  return NetGlobulusSimiParser_or__(self);
}

- (NetGlobulusSimiExpr *)and__ {
  return NetGlobulusSimiParser_and__(self);
}

- (NetGlobulusSimiExpr *)equality {
  return NetGlobulusSimiParser_equality(self);
}

- (NetGlobulusSimiExpr *)comparison {
  return NetGlobulusSimiParser_comparison(self);
}

- (NetGlobulusSimiExpr *)addition {
  return NetGlobulusSimiParser_addition(self);
}

- (NetGlobulusSimiExpr *)multiplication {
  return NetGlobulusSimiParser_multiplication(self);
}

- (NetGlobulusSimiExpr *)nilCoalescence {
  return NetGlobulusSimiParser_nilCoalescence(self);
}

- (NetGlobulusSimiExpr *)unary {
  return NetGlobulusSimiParser_unary(self);
}

- (NetGlobulusSimiExpr *)call {
  return NetGlobulusSimiParser_call(self);
}

- (NetGlobulusSimiExpr *)finishCallWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)callee {
  return NetGlobulusSimiParser_finishCallWithNetGlobulusSimiExpr_(self, callee);
}

- (NetGlobulusSimiExpr *)primary {
  return NetGlobulusSimiParser_primary(self);
}

- (NetGlobulusSimiExpr *)objectLiteral {
  return NetGlobulusSimiParser_objectLiteral(self);
}

- (void)matchAllNewlines {
  NetGlobulusSimiParser_matchAllNewlines(self);
}

- (jboolean)matchSequenceWithNetGlobulusSimiTokenTypeArray:(IOSObjectArray *)types {
  return NetGlobulusSimiParser_matchSequenceWithNetGlobulusSimiTokenTypeArray_(self, types);
}

- (jboolean)matchWithNetGlobulusSimiTokenTypeArray:(IOSObjectArray *)types {
  return NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, types);
}

- (NetGlobulusSimiToken *)consumeWithNetGlobulusSimiTokenType:(NetGlobulusSimiTokenType *)type
                                                 withNSString:(NSString *)message {
  return NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, type, message);
}

- (jboolean)checkWithNetGlobulusSimiTokenType:(NetGlobulusSimiTokenType *)tokenType {
  return NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, tokenType);
}

- (NetGlobulusSimiToken *)advance {
  return NetGlobulusSimiParser_advance(self);
}

- (jboolean)isAtEnd {
  return NetGlobulusSimiParser_isAtEnd(self);
}

- (NetGlobulusSimiToken *)peek {
  return NetGlobulusSimiParser_peek(self);
}

- (jboolean)peekSequenceWithNetGlobulusSimiTokenTypeArray:(IOSObjectArray *)tokenTypes {
  return NetGlobulusSimiParser_peekSequenceWithNetGlobulusSimiTokenTypeArray_(self, tokenTypes);
}

- (NetGlobulusSimiToken *)previous {
  return NetGlobulusSimiParser_previous(self);
}

- (NetGlobulusSimiToken *)operatorFromAssignWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)assignOp {
  return NetGlobulusSimiParser_operatorFromAssignWithNetGlobulusSimiToken_(self, assignOp);
}

- (NetGlobulusSimiParser_ParseError *)errorWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)token
                                                       withNSString:(NSString *)message {
  return NetGlobulusSimiParser_errorWithNetGlobulusSimiToken_withNSString_(self, token, message);
}

- (void)synchronize {
  NetGlobulusSimiParser_synchronize(self);
}

- (id<JavaUtilList>)getAnnotations {
  return NetGlobulusSimiParser_getAnnotations(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt_Class;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt_Annotation;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, 6, 4, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, 7, 4, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt_Expression;", 0x2, 8, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 4, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiStmt_Function;", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr_Block;", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr_Block;", 0x2, 12, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 15, 13, -1, 16, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, 17, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, 18, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiExpr;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x82, 21, 22, -1, -1, -1, -1 },
    { NULL, "Z", 0x82, 23, 22, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiToken;", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 26, 27, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiToken;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiToken;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x82, 28, 22, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiToken;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiToken;", 0x2, 29, 30, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiParser_ParseError;", 0x2, 31, 32, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, -1, -1, -1, 33, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(parse);
  methods[2].selector = @selector(expression);
  methods[3].selector = @selector(declaration);
  methods[4].selector = @selector(classDeclaration);
  methods[5].selector = @selector(annotation);
  methods[6].selector = @selector(statementWithBoolean:);
  methods[7].selector = @selector(forStatement);
  methods[8].selector = @selector(ifStatement);
  methods[9].selector = @selector(whenStatement);
  methods[10].selector = @selector(printStatementWithBoolean:);
  methods[11].selector = @selector(returnStatementWithBoolean:);
  methods[12].selector = @selector(yieldStatementWithBoolean:);
  methods[13].selector = @selector(whileStatement);
  methods[14].selector = @selector(breakStatement);
  methods[15].selector = @selector(continueStatement);
  methods[16].selector = @selector(rescueStatement);
  methods[17].selector = @selector(expressionStatementWithBoolean:);
  methods[18].selector = @selector(checkStatementEndWithBoolean:);
  methods[19].selector = @selector(functionWithNSString:);
  methods[20].selector = @selector(blockWithNSString:withBoolean:);
  methods[21].selector = @selector(blockWithNetGlobulusSimiToken:withNSString:withBoolean:);
  methods[22].selector = @selector(paramsWithNSString:withBoolean:);
  methods[23].selector = @selector(peekParams);
  methods[24].selector = @selector(assignment);
  methods[25].selector = @selector(or__);
  methods[26].selector = @selector(and__);
  methods[27].selector = @selector(equality);
  methods[28].selector = @selector(comparison);
  methods[29].selector = @selector(addition);
  methods[30].selector = @selector(multiplication);
  methods[31].selector = @selector(nilCoalescence);
  methods[32].selector = @selector(unary);
  methods[33].selector = @selector(call);
  methods[34].selector = @selector(finishCallWithNetGlobulusSimiExpr:);
  methods[35].selector = @selector(primary);
  methods[36].selector = @selector(objectLiteral);
  methods[37].selector = @selector(matchAllNewlines);
  methods[38].selector = @selector(matchSequenceWithNetGlobulusSimiTokenTypeArray:);
  methods[39].selector = @selector(matchWithNetGlobulusSimiTokenTypeArray:);
  methods[40].selector = @selector(consumeWithNetGlobulusSimiTokenType:withNSString:);
  methods[41].selector = @selector(checkWithNetGlobulusSimiTokenType:);
  methods[42].selector = @selector(advance);
  methods[43].selector = @selector(isAtEnd);
  methods[44].selector = @selector(peek);
  methods[45].selector = @selector(peekSequenceWithNetGlobulusSimiTokenTypeArray:);
  methods[46].selector = @selector(previous);
  methods[47].selector = @selector(operatorFromAssignWithNetGlobulusSimiToken:);
  methods[48].selector = @selector(errorWithNetGlobulusSimiToken:withNSString:);
  methods[49].selector = @selector(synchronize);
  methods[50].selector = @selector(getAnnotations);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LAMBDA", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "tokens_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 35, -1 },
    { "current_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "annotations_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 36, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<LToken;>;)V", "()Ljava/util/List<LStmt;>;", "statement", "Z", "printStatement", "returnStatement", "yieldStatement", "expressionStatement", "checkStatementEnd", "function", "LNSString;", "block", "LNSString;Z", "LNetGlobulusSimiToken;LNSString;Z", "params", "(Ljava/lang/String;Z)Ljava/util/List<LToken;>;", "or", "and", "finishCall", "LNetGlobulusSimiExpr;", "matchSequence", "[LNetGlobulusSimiTokenType;", "match", "consume", "LNetGlobulusSimiTokenType;LNSString;", "check", "LNetGlobulusSimiTokenType;", "peekSequence", "operatorFromAssign", "LNetGlobulusSimiToken;", "error", "LNetGlobulusSimiToken;LNSString;", "()Ljava/util/List<LStmt$Annotation;>;", &NetGlobulusSimiParser_LAMBDA, "Ljava/util/List<LToken;>;", "Ljava/util/List<LStmt$Annotation;>;", "LNetGlobulusSimiParser_ParseError;" };
  static const J2ObjcClassInfo _NetGlobulusSimiParser = { "Parser", "net.globulus.simi", ptrTable, methods, fields, 7, 0x0, 51, 4, -1, 37, -1, -1, -1 };
  return &_NetGlobulusSimiParser;
}

@end

void NetGlobulusSimiParser_initWithJavaUtilList_(NetGlobulusSimiParser *self, id<JavaUtilList> tokens) {
  NSObject_init(self);
  self->current_ = 0;
  self->annotations_ = new_JavaUtilArrayList_init();
  self->tokens_ = tokens;
}

NetGlobulusSimiParser *new_NetGlobulusSimiParser_initWithJavaUtilList_(id<JavaUtilList> tokens) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiParser, initWithJavaUtilList_, tokens)
}

NetGlobulusSimiParser *create_NetGlobulusSimiParser_initWithJavaUtilList_(id<JavaUtilList> tokens) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiParser, initWithJavaUtilList_, tokens)
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_expression(NetGlobulusSimiParser *self) {
  return NetGlobulusSimiParser_assignment(self);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_declaration(NetGlobulusSimiParser *self) {
  @try {
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, CLASS) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      return NetGlobulusSimiParser_classDeclaration(self);
    }
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, DEF), JreLoadEnum(NetGlobulusSimiTokenType, NATIVE) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
      return NetGlobulusSimiParser_functionWithNSString_(self, @"function");
    }
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, BANG) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      return NetGlobulusSimiParser_annotation(self);
    }
    return NetGlobulusSimiParser_statementWithBoolean_(self, false);
  }
  @catch (NetGlobulusSimiParser_ParseError *error) {
    NetGlobulusSimiParser_synchronize(self);
    return nil;
  }
}

NetGlobulusSimiStmt_Class *NetGlobulusSimiParser_classDeclaration(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *name = NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expect class name.");
  id<JavaUtilList> superclasses = nil;
  if (NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN))) {
    superclasses = [((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilList>) nil_chk(NetGlobulusSimiParser_paramsWithNSString_withBoolean_(self, @"class", false))) stream])) mapWithJavaUtilFunctionFunction:JreLoadStatic(NetGlobulusSimiParser_$Lambda$1, instance)])) collectWithJavaUtilStreamCollector:JavaUtilStreamCollectors_toList()];
  }
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, COLON), @"Expect ':' before class body.");
  id<JavaUtilList> constants = new_JavaUtilArrayList_init();
  id<JavaUtilList> innerClasses = new_JavaUtilArrayList_init();
  id<JavaUtilList> methods = new_JavaUtilArrayList_init();
  while (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, END)) && !NetGlobulusSimiParser_isAtEnd(self)) {
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      continue;
    }
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, DEF), JreLoadEnum(NetGlobulusSimiTokenType, NATIVE) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
      [methods addWithId:NetGlobulusSimiParser_functionWithNSString_(self, @"method")];
    }
    else if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, CLASS) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      [innerClasses addWithId:NetGlobulusSimiParser_classDeclaration(self)];
    }
    else if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, BANG) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      [((id<JavaUtilList>) nil_chk(self->annotations_)) addWithId:NetGlobulusSimiParser_annotation(self)];
    }
    else {
      NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_assignment(self);
      if ([expr isKindOfClass:[NetGlobulusSimiExpr_Assign class]]) {
        [constants addWithId:(NetGlobulusSimiExpr_Assign *) cast_chk(expr, [NetGlobulusSimiExpr_Assign class])];
      }
    }
  }
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, END), @"Expect 'end' after class body.");
  return new_NetGlobulusSimiStmt_Class_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(name, superclasses, constants, innerClasses, methods, NetGlobulusSimiParser_getAnnotations(self));
}

NetGlobulusSimiStmt_Annotation *NetGlobulusSimiParser_annotation(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = nil;
  if (((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, LEFT_BRACKET)) {
    (void) NetGlobulusSimiParser_advance(self);
    expr = NetGlobulusSimiParser_objectLiteral(self);
  }
  else if (((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER)) {
    expr = NetGlobulusSimiParser_call(self);
  }
  else {
    [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithNetGlobulusSimiToken:NetGlobulusSimiParser_peek(self) withNSString:@"Annotation expect either an object literal or a constructor invocation!"];
  }
  NetGlobulusSimiParser_checkStatementEndWithBoolean_(self, false);
  return new_NetGlobulusSimiStmt_Annotation_initWithNetGlobulusSimiExpr_(expr);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_statementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda) {
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, FOR) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_forStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IF) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_ifStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, WHEN) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_whenStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, PRINT) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_printStatementWithBoolean_(self, lambda);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, RETURN) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_returnStatementWithBoolean_(self, lambda);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, WHILE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_whileStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, BREAK) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_breakStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, CONTINUE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_continueStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, RESCUE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_rescueStatement(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, YIELD) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_yieldStatementWithBoolean_(self, lambda);
  }
  return NetGlobulusSimiParser_expressionStatementWithBoolean_(self, lambda);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_forStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *var = NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expected identifier.");
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IN), @"Expected 'in'.");
  NetGlobulusSimiExpr *iterable = NetGlobulusSimiParser_expression(self);
  NetGlobulusSimiExpr_Block *body = NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"for", true);
  return new_NetGlobulusSimiStmt_For_initWithNetGlobulusSimiExpr_Variable_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_Block_(new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(var), iterable, body);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_ifStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *condition = NetGlobulusSimiParser_expression(self);
  NetGlobulusSimiExpr_Block *thenBranch = NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"if", true);
  NetGlobulusSimiExpr_Block *elseBranch = nil;
  id<JavaUtilList> elsifs = new_JavaUtilArrayList_init();
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, ELSIF), JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    if (((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_previous(self)))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, ELSIF)) {
      [elsifs addWithId:new_NetGlobulusSimiStmt_Elsif_initWithNetGlobulusSimiExpr_withNetGlobulusSimiExpr_Block_(NetGlobulusSimiParser_expression(self), NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"elsif", true))];
    }
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, ELSE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    elseBranch = NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"else", true);
  }
  return new_NetGlobulusSimiStmt_If_initWithNetGlobulusSimiStmt_Elsif_withJavaUtilList_withNetGlobulusSimiExpr_Block_(new_NetGlobulusSimiStmt_Elsif_initWithNetGlobulusSimiExpr_withNetGlobulusSimiExpr_Block_(condition, thenBranch), elsifs, elseBranch);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_whenStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *when = NetGlobulusSimiParser_previous(self);
  NetGlobulusSimiExpr *left = NetGlobulusSimiParser_call(self);
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, COLON), @"Expect a ':' after when.");
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE), @"Expect a newline after when ':.");
  NetGlobulusSimiStmt_Elsif *firstElsif = nil;
  id<JavaUtilList> elsifs = new_JavaUtilArrayList_init();
  NetGlobulusSimiExpr_Block *elseBranch = nil;
  while (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, END)) && !NetGlobulusSimiParser_isAtEnd(self)) {
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      continue;
    }
    id<JavaUtilList> conditions = new_JavaUtilArrayList_init();
    do {
      NetGlobulusSimiToken *op;
      if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IS), JreLoadEnum(NetGlobulusSimiTokenType, ISNOT), JreLoadEnum(NetGlobulusSimiTokenType, IN), JreLoadEnum(NetGlobulusSimiTokenType, NOTIN) } count:4 type:NetGlobulusSimiTokenType_class_()])) {
        op = NetGlobulusSimiParser_previous(self);
      }
      else if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, ELSE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
        elseBranch = NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"else", true);
        break;
      }
      else {
        op = new_NetGlobulusSimiToken_initWithNetGlobulusSimiTokenType_withNSString_withNetGlobulusSimiSimiValue_withInt_(JreLoadEnum(NetGlobulusSimiTokenType, EQUAL_EQUAL), nil, nil, ((NetGlobulusSimiToken *) nil_chk(when))->line_);
      }
      NetGlobulusSimiExpr *right = NetGlobulusSimiParser_call(self);
      [conditions addWithId:new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(left, op, right)];
      NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, OR) } count:1 type:NetGlobulusSimiTokenType_class_()]);
    }
    while (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, COLON)));
    if ([conditions isEmpty]) {
      continue;
    }
    NetGlobulusSimiExpr *condition = [conditions getWithInt:0];
    NetGlobulusSimiToken *or_ = new_NetGlobulusSimiToken_initWithNetGlobulusSimiTokenType_withNSString_withNetGlobulusSimiSimiValue_withInt_(JreLoadEnum(NetGlobulusSimiTokenType, OR), nil, nil, ((NetGlobulusSimiToken *) nil_chk(when))->line_);
    for (jint i = 1; i < [conditions size]; i++) {
      condition = new_NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(condition, or_, [conditions getWithInt:i]);
    }
    NetGlobulusSimiStmt_Elsif *elsif = new_NetGlobulusSimiStmt_Elsif_initWithNetGlobulusSimiExpr_withNetGlobulusSimiExpr_Block_(condition, NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"when", true));
    if (firstElsif == nil) {
      firstElsif = elsif;
    }
    else {
      [elsifs addWithId:elsif];
    }
  }
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, END), @"Expect end at the end of when.");
  return new_NetGlobulusSimiStmt_If_initWithNetGlobulusSimiStmt_Elsif_withJavaUtilList_withNetGlobulusSimiExpr_Block_(firstElsif, elsifs, elseBranch);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_printStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda) {
  NetGlobulusSimiExpr *value = ((NetGlobulusSimiStmt_Expression *) nil_chk(NetGlobulusSimiParser_expressionStatementWithBoolean_(self, lambda)))->expression_;
  return new_NetGlobulusSimiStmt_Print_initWithNetGlobulusSimiExpr_(value);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_returnStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda) {
  NetGlobulusSimiToken *keyword = NetGlobulusSimiParser_previous(self);
  NetGlobulusSimiExpr *value = nil;
  if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE))) {
    value = NetGlobulusSimiParser_expression(self);
  }
  NetGlobulusSimiParser_checkStatementEndWithBoolean_(self, lambda);
  return new_NetGlobulusSimiStmt_Return_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(keyword, value);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_yieldStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda) {
  NetGlobulusSimiToken *keyword = NetGlobulusSimiParser_previous(self);
  NetGlobulusSimiExpr *value = nil;
  if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE))) {
    value = NetGlobulusSimiParser_expression(self);
  }
  NetGlobulusSimiParser_checkStatementEndWithBoolean_(self, lambda);
  return new_NetGlobulusSimiStmt_Yield_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(keyword, value);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_whileStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *condition = NetGlobulusSimiParser_expression(self);
  NetGlobulusSimiExpr_Block *block = NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"while", true);
  return new_NetGlobulusSimiStmt_While_initWithNetGlobulusSimiExpr_withNetGlobulusSimiExpr_Block_(condition, block);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_breakStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *name = NetGlobulusSimiParser_previous(self);
  return new_NetGlobulusSimiStmt_Break_initWithNetGlobulusSimiToken_(name);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_continueStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *name = NetGlobulusSimiParser_previous(self);
  return new_NetGlobulusSimiStmt_Continue_initWithNetGlobulusSimiToken_(name);
}

NetGlobulusSimiStmt *NetGlobulusSimiParser_rescueStatement(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *keyword = NetGlobulusSimiParser_previous(self);
  NetGlobulusSimiExpr_Block *block = NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, @"rescue", true);
  if ([((id<JavaUtilList>) nil_chk(((NetGlobulusSimiExpr_Block *) nil_chk(block))->params_)) size] != 1) {
    [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithNetGlobulusSimiToken:keyword withNSString:@"Rescue block expects exactly 1 parameter!"];
  }
  return new_NetGlobulusSimiStmt_Rescue_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_Block_(keyword, block);
}

NetGlobulusSimiStmt_Expression *NetGlobulusSimiParser_expressionStatementWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_expression(self);
  if (!([expr isKindOfClass:[NetGlobulusSimiExpr_Assign class]]) || !([((NetGlobulusSimiExpr_Assign *) nil_chk(((NetGlobulusSimiExpr_Assign *) cast_chk(expr, [NetGlobulusSimiExpr_Assign class]))))->value_ isKindOfClass:[NetGlobulusSimiExpr_Block class]])) {
    NetGlobulusSimiParser_checkStatementEndWithBoolean_(self, lambda);
  }
  return new_NetGlobulusSimiStmt_Expression_initWithNetGlobulusSimiExpr_(expr);
}

void NetGlobulusSimiParser_checkStatementEndWithBoolean_(NetGlobulusSimiParser *self, jboolean lambda) {
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return;
  }
  if (lambda) {
    NetGlobulusSimiToken *token = NetGlobulusSimiParser_peek(self);
    if (((NetGlobulusSimiToken *) nil_chk(token))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, COMMA) || token->type_ == JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN) || token->type_ == JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_BRACKET)) {
      return;
    }
  }
  (void) NetGlobulusSimiParser_errorWithNetGlobulusSimiToken_withNSString_(self, NetGlobulusSimiParser_peek(self), @"Unterminated lambda expression!");
}

NetGlobulusSimiStmt_Function *NetGlobulusSimiParser_functionWithNSString_(NetGlobulusSimiParser *self, NSString *kind) {
  NetGlobulusSimiToken *declaration = NetGlobulusSimiParser_previous(self);
  NetGlobulusSimiToken *name = NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), JreStrcat("$$$", @"Expect ", kind, @" name."));
  NSString *blockKind = [((NSString *) nil_chk(((NetGlobulusSimiToken *) nil_chk(name))->lexeme_)) isEqual:NetGlobulusSimiConstants_INIT] ? NetGlobulusSimiConstants_INIT : kind;
  NetGlobulusSimiExpr_Block *block = NetGlobulusSimiParser_blockWithNetGlobulusSimiToken_withNSString_withBoolean_(self, declaration, blockKind, false);
  if ([name->lexeme_ isEqual:NetGlobulusSimiConstants_INIT] && [((NetGlobulusSimiExpr_Block *) nil_chk(block)) isEmpty]) {
    id<JavaUtilList> statements = new_JavaUtilArrayList_init();
    for (NetGlobulusSimiToken * __strong param in nil_chk(((NetGlobulusSimiExpr_Block *) nil_chk(block))->params_)) {
      [statements addWithId:new_NetGlobulusSimiStmt_Expression_initWithNetGlobulusSimiExpr_(new_NetGlobulusSimiExpr_Set_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_(name, new_NetGlobulusSimiExpr_Self_initWithNetGlobulusSimiToken_(NetGlobulusSimiToken_self__()), new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(param), new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(param)))];
    }
    block = new_NetGlobulusSimiExpr_Block_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_(declaration, block->params_, statements);
  }
  return new_NetGlobulusSimiStmt_Function_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_Block_withJavaUtilList_(name, block, NetGlobulusSimiParser_getAnnotations(self));
}

NetGlobulusSimiExpr_Block *NetGlobulusSimiParser_blockWithNSString_withBoolean_(NetGlobulusSimiParser *self, NSString *kind, jboolean lambda) {
  return NetGlobulusSimiParser_blockWithNetGlobulusSimiToken_withNSString_withBoolean_(self, nil, kind, lambda);
}

NetGlobulusSimiExpr_Block *NetGlobulusSimiParser_blockWithNetGlobulusSimiToken_withNSString_withBoolean_(NetGlobulusSimiParser *self, NetGlobulusSimiToken *declaration, NSString *kind, jboolean lambda) {
  if (declaration == nil) {
    declaration = NetGlobulusSimiParser_previous(self);
  }
  id<JavaUtilList> params = NetGlobulusSimiParser_paramsWithNSString_withBoolean_(self, kind, lambda);
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, COLON), @"Expected a ':' at the start of block!");
  id<JavaUtilList> statements = new_JavaUtilArrayList_init();
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    while (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, END)) && !NetGlobulusSimiParser_isAtEnd(self)) {
      if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE), JreLoadEnum(NetGlobulusSimiTokenType, PASS) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
        continue;
      }
      [statements addWithId:NetGlobulusSimiParser_declaration(self)];
    }
    (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, END), @"Expect 'end' after block.");
  }
  else {
    NetGlobulusSimiStmt *stmt = NetGlobulusSimiParser_statementWithBoolean_(self, true);
    if ([((NSString *) nil_chk(kind)) isEqual:NetGlobulusSimiParser_LAMBDA] && [stmt isKindOfClass:[NetGlobulusSimiStmt_Expression class]]) {
      stmt = new_NetGlobulusSimiStmt_Return_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(declaration, ((NetGlobulusSimiStmt_Expression *) nil_chk(((NetGlobulusSimiStmt_Expression *) cast_chk(stmt, [NetGlobulusSimiStmt_Expression class]))))->expression_);
    }
    [statements addWithId:stmt];
  }
  return new_NetGlobulusSimiExpr_Block_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_(declaration, params, statements);
}

id<JavaUtilList> NetGlobulusSimiParser_paramsWithNSString_withBoolean_(NetGlobulusSimiParser *self, NSString *kind, jboolean lambda) {
  id<JavaUtilList> params = new_JavaUtilArrayList_init();
  if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN))) {
    if (lambda && !NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, COLON))) {
      [params addWithId:NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expect parameter name.")];
    }
  }
  else {
    (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN), JreStrcat("$$$", @"Expect '(' after ", kind, @" name."));
    if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN))) {
      do {
        [params addWithId:NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expect parameter name.")];
      }
      while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, COMMA) } count:1 type:NetGlobulusSimiTokenType_class_()]));
    }
    (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN), @"Expect ')' after parameters.");
  }
  return params;
}

JavaLangInteger *NetGlobulusSimiParser_peekParams(NetGlobulusSimiParser *self) {
  if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN))) {
    return nil;
  }
  if (NetGlobulusSimiParser_peekSequenceWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN), JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    return JavaLangInteger_valueOfWithInt_(0);
  }
  jint len = [((id<JavaUtilList>) nil_chk(self->tokens_)) size];
  jint count = 1;
  jint parenCount = 0;
  for (jint i = self->current_ + 1; i < len; i++) {
    NetGlobulusSimiTokenType *type = ((NetGlobulusSimiToken *) nil_chk([self->tokens_ getWithInt:i]))->type_;
    if (type == JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN) || type == JreLoadEnum(NetGlobulusSimiTokenType, LEFT_BRACKET) || type == JreLoadEnum(NetGlobulusSimiTokenType, DOLLAR_LEFT_BRACKET)) {
      parenCount++;
    }
    else if (type == JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN) || type == JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_BRACKET)) {
      if (parenCount == 0) {
        break;
      }
      else {
        parenCount--;
      }
    }
    else if (type == JreLoadEnum(NetGlobulusSimiTokenType, COMMA) && parenCount == 0) {
      count++;
    }
  }
  return JavaLangInteger_valueOfWithInt_(count);
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_assignment(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_or__(self);
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, PLUS_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, MINUS_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, STAR_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, SLASH_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, MOD_EQUAL) } count:6 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *equals = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *value = NetGlobulusSimiParser_assignment(self);
    if ([expr isKindOfClass:[NetGlobulusSimiExpr_Literal class]] && [((NetGlobulusSimiExpr_Literal *) nil_chk(((NetGlobulusSimiExpr_Literal *) cast_chk(expr, [NetGlobulusSimiExpr_Literal class]))))->value_ isKindOfClass:[NetGlobulusSimiSimiValue_String class]]) {
      NetGlobulusSimiToken *literal = new_NetGlobulusSimiToken_initWithNetGlobulusSimiTokenType_withNSString_withNetGlobulusSimiSimiValue_withInt_(JreLoadEnum(NetGlobulusSimiTokenType, STRING), nil, ((NetGlobulusSimiExpr_Literal *) nil_chk(((NetGlobulusSimiExpr_Literal *) cast_chk(expr, [NetGlobulusSimiExpr_Literal class]))))->value_, ((NetGlobulusSimiToken *) nil_chk(equals))->line_);
      return new_NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(literal, value, NetGlobulusSimiParser_getAnnotations(self));
    }
    else if ([expr isKindOfClass:[NetGlobulusSimiExpr_Variable class]]) {
      NetGlobulusSimiToken *name = ((NetGlobulusSimiExpr_Variable *) nil_chk(((NetGlobulusSimiExpr_Variable *) cast_chk(expr, [NetGlobulusSimiExpr_Variable class]))))->name_;
      if (((NetGlobulusSimiToken *) nil_chk(equals))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, EQUAL)) {
        return new_NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(name, value, NetGlobulusSimiParser_getAnnotations(self));
      }
      else {
        return new_NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(name, new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, NetGlobulusSimiParser_operatorFromAssignWithNetGlobulusSimiToken_(self, equals), value), NetGlobulusSimiParser_getAnnotations(self));
      }
    }
    else if ([expr isKindOfClass:[NetGlobulusSimiExpr_Get class]]) {
      if (((NetGlobulusSimiToken *) nil_chk(equals))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, EQUAL)) {
        NetGlobulusSimiExpr_Get *get = (NetGlobulusSimiExpr_Get *) cast_chk(expr, [NetGlobulusSimiExpr_Get class]);
        return new_NetGlobulusSimiExpr_Set_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_(((NetGlobulusSimiExpr_Get *) nil_chk(get))->origin_, get->object_, get->name_, value);
      }
      else {
        [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithNetGlobulusSimiToken:equals withNSString:@"Cannot use compound assignment operators with setters!"];
      }
    }
    else if ([expr isKindOfClass:[NetGlobulusSimiExpr_ObjectLiteral class]]) {
      NetGlobulusSimiExpr_ObjectLiteral *objectLiteral = (NetGlobulusSimiExpr_ObjectLiteral *) cast_chk(expr, [NetGlobulusSimiExpr_ObjectLiteral class]);
      if (((NetGlobulusSimiExpr_ObjectLiteral *) nil_chk(objectLiteral))->isDictionary_ || ((NetGlobulusSimiToken *) nil_chk(objectLiteral->opener_))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, DOLLAR_LEFT_BRACKET)) {
        [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithInt:((NetGlobulusSimiToken *) nil_chk(equals))->line_ withNSString:@"Invalid object decomposition syntax."];
      }
      id<JavaUtilList> assigns = new_JavaUtilArrayList_init();
      id<JavaUtilList> annotations = NetGlobulusSimiParser_getAnnotations(self);
      for (NetGlobulusSimiExpr * __strong prop in nil_chk(objectLiteral->props_)) {
        NetGlobulusSimiToken *name = ((NetGlobulusSimiExpr_Variable *) nil_chk(((NetGlobulusSimiExpr_Variable *) cast_chk(prop, [NetGlobulusSimiExpr_Variable class]))))->name_;
        [assigns addWithId:new_NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(name, new_NetGlobulusSimiExpr_Get_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_(name, value, prop, nil), annotations)];
      }
      return new_NetGlobulusSimiExpr_ObjectDecomp_initWithJavaUtilList_(assigns);
    }
    [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithNetGlobulusSimiToken:equals withNSString:@"Invalid assignment target."];
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_or__(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_and__(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, OR) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_and__(self);
    expr = new_NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_and__(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_equality(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, AND) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_equality(self);
    expr = new_NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_equality(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_comparison(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, BANG_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, EQUAL_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, IS), JreLoadEnum(NetGlobulusSimiTokenType, ISNOT), JreLoadEnum(NetGlobulusSimiTokenType, IN), JreLoadEnum(NetGlobulusSimiTokenType, NOTIN) } count:6 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_comparison(self);
    expr = new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_comparison(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_addition(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, GREATER), JreLoadEnum(NetGlobulusSimiTokenType, GREATER_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, LESS), JreLoadEnum(NetGlobulusSimiTokenType, LESS_EQUAL), JreLoadEnum(NetGlobulusSimiTokenType, LESS_GREATER) } count:5 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_addition(self);
    expr = new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_addition(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_multiplication(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, MINUS), JreLoadEnum(NetGlobulusSimiTokenType, PLUS) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_multiplication(self);
    expr = new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_multiplication(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_nilCoalescence(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, SLASH), JreLoadEnum(NetGlobulusSimiTokenType, SLASH_SLASH), JreLoadEnum(NetGlobulusSimiTokenType, STAR), JreLoadEnum(NetGlobulusSimiTokenType, MOD) } count:4 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_nilCoalescence(self);
    expr = new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_nilCoalescence(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_unary(self);
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, QUESTION_QUESTION) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_unary(self);
    expr = new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(expr, operator_, right);
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_unary(NetGlobulusSimiParser *self) {
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NOT), JreLoadEnum(NetGlobulusSimiTokenType, MINUS) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *operator_ = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiExpr *right = NetGlobulusSimiParser_unary(self);
    return new_NetGlobulusSimiExpr_Unary_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(operator_, right);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, GU) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Gu_initWithNetGlobulusSimiExpr_(NetGlobulusSimiParser_primary(self));
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, BANG_BANG) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    id<JavaUtilList> tokens = new_JavaUtilArrayList_init();
    while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      [tokens addWithId:NetGlobulusSimiParser_previous(self)];
      NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, DOT) } count:1 type:NetGlobulusSimiTokenType_class_()]);
    }
    if ([tokens isEmpty]) {
      [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithNetGlobulusSimiToken:NetGlobulusSimiParser_peek(self) withNSString:@"Annotations operator needs params!"];
    }
    return new_NetGlobulusSimiExpr_Annotations_initWithJavaUtilList_(tokens);
  }
  return NetGlobulusSimiParser_call(self);
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_call(NetGlobulusSimiParser *self) {
  NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_primary(self);
  while (true) {
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      expr = NetGlobulusSimiParser_finishCallWithNetGlobulusSimiExpr_(self, expr);
    }
    else if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, DOT) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      NetGlobulusSimiToken *dot = NetGlobulusSimiParser_previous(self);
      NetGlobulusSimiExpr *name;
      if (((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, NUMBER)) {
        name = new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, NUMBER), @"Expected a number or id after '.'."));
      }
      else if (((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN)) {
        name = NetGlobulusSimiParser_primary(self);
      }
      else {
        name = new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expected a number of id after '.'."));
      }
      JavaLangInteger *arity = NetGlobulusSimiParser_peekParams(self);
      expr = new_NetGlobulusSimiExpr_Get_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_(dot, expr, name, arity);
    }
    else {
      break;
    }
  }
  return expr;
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_finishCallWithNetGlobulusSimiExpr_(NetGlobulusSimiParser *self, NetGlobulusSimiExpr *callee) {
  id<JavaUtilList> arguments = new_JavaUtilArrayList_init();
  if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN))) {
    do {
      NetGlobulusSimiParser_matchSequenceWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), JreLoadEnum(NetGlobulusSimiTokenType, EQUAL) } count:2 type:NetGlobulusSimiTokenType_class_()]);
      [arguments addWithId:NetGlobulusSimiParser_expression(self)];
    }
    while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, COMMA) } count:1 type:NetGlobulusSimiTokenType_class_()]));
  }
  NetGlobulusSimiToken *paren = NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN), @"Expect ')' after arguments.");
  return new_NetGlobulusSimiExpr_Call_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_(callee, paren, arguments);
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_primary(NetGlobulusSimiParser *self) {
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, FALSE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(new_NetGlobulusSimiSimiValue_Number_initWithBoolean_(false));
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, TRUE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(new_NetGlobulusSimiSimiValue_Number_initWithBoolean_(true));
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NIL) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(nil);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, PASS) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(new_NetGlobulusSimiPass_init());
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NUMBER), JreLoadEnum(NetGlobulusSimiTokenType, STRING) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_previous(self)))->literal_);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, SUPER) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *keyword = NetGlobulusSimiParser_previous(self);
    NetGlobulusSimiToken *superclass_;
    if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
      superclass_ = NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expected superclass name in parentheses!");
      (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN), @"Expected ')' after superclass specification!");
    }
    else {
      superclass_ = nil;
    }
    (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, DOT), @"Expect '.' after 'super'.");
    NetGlobulusSimiToken *method = NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), @"Expect superclass method name.");
    JavaLangInteger *arity = NetGlobulusSimiParser_peekParams(self);
    return new_NetGlobulusSimiExpr_Super_initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_(keyword, superclass_, method, arity);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, SELF) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiToken *previous = NetGlobulusSimiParser_previous(self);
    return new_NetGlobulusSimiExpr_Self_initWithNetGlobulusSimiToken_(new_NetGlobulusSimiToken_initWithNetGlobulusSimiTokenType_withNSString_withNetGlobulusSimiSimiValue_withInt_(JreLoadEnum(NetGlobulusSimiTokenType, SELF), NetGlobulusSimiConstants_SELF, nil, ((NetGlobulusSimiToken *) nil_chk(previous))->line_));
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, LEFT_BRACKET), JreLoadEnum(NetGlobulusSimiTokenType, DOLLAR_LEFT_BRACKET) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_objectLiteral(self);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, DEF), JreLoadEnum(NetGlobulusSimiTokenType, NATIVE) } count:2 type:NetGlobulusSimiTokenType_class_()])) {
    return NetGlobulusSimiParser_blockWithNSString_withBoolean_(self, NetGlobulusSimiParser_LAMBDA, true);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(NetGlobulusSimiParser_previous(self));
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, LEFT_PAREN) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    NetGlobulusSimiExpr *expr = NetGlobulusSimiParser_expression(self);
    (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_PAREN), @"Expect ')' after expression.");
    return new_NetGlobulusSimiExpr_Grouping_initWithNetGlobulusSimiExpr_(expr);
  }
  if (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, QUESTION) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
    return new_NetGlobulusSimiExpr_Unary_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiParser_previous(self), NetGlobulusSimiParser_primary(self));
  }
  @throw nil_chk(NetGlobulusSimiParser_errorWithNetGlobulusSimiToken_withNSString_(self, NetGlobulusSimiParser_peek(self), @"Expect expression."));
}

NetGlobulusSimiExpr *NetGlobulusSimiParser_objectLiteral(NetGlobulusSimiParser *self) {
  NetGlobulusSimiToken *opener = NetGlobulusSimiParser_previous(self);
  id<JavaUtilList> props = new_JavaUtilArrayList_init();
  jboolean dictionary = true;
  if (!NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_BRACKET))) {
    NetGlobulusSimiParser_matchAllNewlines(self);
    dictionary = (NetGlobulusSimiParser_peekSequenceWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, IDENTIFIER), JreLoadEnum(NetGlobulusSimiTokenType, EQUAL) } count:2 type:NetGlobulusSimiTokenType_class_()]) || NetGlobulusSimiParser_peekSequenceWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, STRING), JreLoadEnum(NetGlobulusSimiTokenType, EQUAL) } count:2 type:NetGlobulusSimiTokenType_class_()]));
    do {
      NetGlobulusSimiParser_matchAllNewlines(self);
      [props addWithId:dictionary ? NetGlobulusSimiParser_assignment(self) : NetGlobulusSimiParser_or__(self)];
    }
    while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, COMMA) } count:1 type:NetGlobulusSimiTokenType_class_()]));
    NetGlobulusSimiParser_matchAllNewlines(self);
  }
  (void) NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(self, JreLoadEnum(NetGlobulusSimiTokenType, RIGHT_BRACKET), @"Expect ']' at the end of object.");
  return new_NetGlobulusSimiExpr_ObjectLiteral_initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_(opener, props, dictionary);
}

void NetGlobulusSimiParser_matchAllNewlines(NetGlobulusSimiParser *self) {
  while (NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(NetGlobulusSimiTokenType, NEWLINE) } count:1 type:NetGlobulusSimiTokenType_class_()])) {
  }
}

jboolean NetGlobulusSimiParser_matchSequenceWithNetGlobulusSimiTokenTypeArray_(NetGlobulusSimiParser *self, IOSObjectArray *types) {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(types))->size_; i++) {
    jint index = self->current_ + i;
    if (index >= [((id<JavaUtilList>) nil_chk(self->tokens_)) size]) {
      return false;
    }
    if (((NetGlobulusSimiToken *) nil_chk([self->tokens_ getWithInt:index]))->type_ != IOSObjectArray_Get(types, i)) {
      return false;
    }
  }
  for (jint i = 0; i < types->size_; i++) {
    (void) NetGlobulusSimiParser_advance(self);
  }
  return true;
}

jboolean NetGlobulusSimiParser_matchWithNetGlobulusSimiTokenTypeArray_(NetGlobulusSimiParser *self, IOSObjectArray *types) {
  {
    IOSObjectArray *a__ = types;
    NetGlobulusSimiTokenType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetGlobulusSimiTokenType * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetGlobulusSimiTokenType *type = *b__++;
      if (NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, type)) {
        (void) NetGlobulusSimiParser_advance(self);
        return true;
      }
    }
  }
  return false;
}

NetGlobulusSimiToken *NetGlobulusSimiParser_consumeWithNetGlobulusSimiTokenType_withNSString_(NetGlobulusSimiParser *self, NetGlobulusSimiTokenType *type, NSString *message) {
  if (NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(self, type)) return NetGlobulusSimiParser_advance(self);
  @throw nil_chk(NetGlobulusSimiParser_errorWithNetGlobulusSimiToken_withNSString_(self, NetGlobulusSimiParser_peek(self), message));
}

jboolean NetGlobulusSimiParser_checkWithNetGlobulusSimiTokenType_(NetGlobulusSimiParser *self, NetGlobulusSimiTokenType *tokenType) {
  if (NetGlobulusSimiParser_isAtEnd(self)) return false;
  return ((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ == tokenType;
}

NetGlobulusSimiToken *NetGlobulusSimiParser_advance(NetGlobulusSimiParser *self) {
  if (!NetGlobulusSimiParser_isAtEnd(self)) self->current_++;
  return NetGlobulusSimiParser_previous(self);
}

jboolean NetGlobulusSimiParser_isAtEnd(NetGlobulusSimiParser *self) {
  return ((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, EOF);
}

NetGlobulusSimiToken *NetGlobulusSimiParser_peek(NetGlobulusSimiParser *self) {
  return [((id<JavaUtilList>) nil_chk(self->tokens_)) getWithInt:self->current_];
}

jboolean NetGlobulusSimiParser_peekSequenceWithNetGlobulusSimiTokenTypeArray_(NetGlobulusSimiParser *self, IOSObjectArray *tokenTypes) {
  if (self->current_ + ((IOSObjectArray *) nil_chk(tokenTypes))->size_ >= [((id<JavaUtilList>) nil_chk(self->tokens_)) size]) {
    return false;
  }
  for (jint i = 0; i < tokenTypes->size_; i++) {
    if (((NetGlobulusSimiToken *) nil_chk([self->tokens_ getWithInt:self->current_ + i]))->type_ != IOSObjectArray_Get(tokenTypes, i)) {
      return false;
    }
  }
  return true;
}

NetGlobulusSimiToken *NetGlobulusSimiParser_previous(NetGlobulusSimiParser *self) {
  return [((id<JavaUtilList>) nil_chk(self->tokens_)) getWithInt:self->current_ - 1];
}

NetGlobulusSimiToken *NetGlobulusSimiParser_operatorFromAssignWithNetGlobulusSimiToken_(NetGlobulusSimiParser *self, NetGlobulusSimiToken *assignOp) {
  NetGlobulusSimiTokenType *type;
  switch ([((NetGlobulusSimiToken *) nil_chk(assignOp))->type_ ordinal]) {
    case NetGlobulusSimiTokenType_Enum_PLUS_EQUAL:
    type = JreLoadEnum(NetGlobulusSimiTokenType, PLUS);
    break;
    case NetGlobulusSimiTokenType_Enum_MINUS_EQUAL:
    type = JreLoadEnum(NetGlobulusSimiTokenType, MINUS);
    break;
    case NetGlobulusSimiTokenType_Enum_STAR_EQUAL:
    type = JreLoadEnum(NetGlobulusSimiTokenType, STAR);
    break;
    case NetGlobulusSimiTokenType_Enum_SLASH_EQUAL:
    type = JreLoadEnum(NetGlobulusSimiTokenType, SLASH);
    break;
    case NetGlobulusSimiTokenType_Enum_MOD_EQUAL:
    type = JreLoadEnum(NetGlobulusSimiTokenType, MOD);
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unable to process assignment operator: ", assignOp->type_));
  }
  return new_NetGlobulusSimiToken_initWithNetGlobulusSimiTokenType_withNSString_withNetGlobulusSimiSimiValue_withInt_(type, assignOp->lexeme_, nil, assignOp->line_);
}

NetGlobulusSimiParser_ParseError *NetGlobulusSimiParser_errorWithNetGlobulusSimiToken_withNSString_(NetGlobulusSimiParser *self, NetGlobulusSimiToken *token, NSString *message) {
  [((NetGlobulusSimiErrorHub *) nil_chk(NetGlobulusSimiErrorHub_sharedInstance())) errorWithNetGlobulusSimiToken:token withNSString:message];
  return new_NetGlobulusSimiParser_ParseError_init();
}

void NetGlobulusSimiParser_synchronize(NetGlobulusSimiParser *self) {
  (void) NetGlobulusSimiParser_advance(self);
  while (!NetGlobulusSimiParser_isAtEnd(self)) {
    switch ([((NetGlobulusSimiToken *) nil_chk(NetGlobulusSimiParser_peek(self)))->type_ ordinal]) {
      case NetGlobulusSimiTokenType_Enum_CLASS:
      case NetGlobulusSimiTokenType_Enum_DEF:
      case NetGlobulusSimiTokenType_Enum_FOR:
      case NetGlobulusSimiTokenType_Enum_IF:
      case NetGlobulusSimiTokenType_Enum_WHILE:
      case NetGlobulusSimiTokenType_Enum_PRINT:
      case NetGlobulusSimiTokenType_Enum_RETURN:
      return;
    }
    (void) NetGlobulusSimiParser_advance(self);
  }
}

id<JavaUtilList> NetGlobulusSimiParser_getAnnotations(NetGlobulusSimiParser *self) {
  if ([((id<JavaUtilList>) nil_chk(self->annotations_)) isEmpty]) {
    return nil;
  }
  id<JavaUtilList> copy_ = JavaUtilCollections_unmodifiableListWithJavaUtilList_(new_JavaUtilArrayList_initWithJavaUtilCollection_(self->annotations_));
  [((id<JavaUtilList>) nil_chk(self->annotations_)) clear];
  return copy_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiParser)

@implementation NetGlobulusSimiParser_ParseError

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetGlobulusSimiParser_ParseError_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetGlobulusSimiParser;" };
  static const J2ObjcClassInfo _NetGlobulusSimiParser_ParseError = { "ParseError", "net.globulus.simi", ptrTable, methods, NULL, 7, 0xa, 1, 0, 0, -1, -1, -1, -1 };
  return &_NetGlobulusSimiParser_ParseError;
}

@end

void NetGlobulusSimiParser_ParseError_init(NetGlobulusSimiParser_ParseError *self) {
  JavaLangRuntimeException_init(self);
}

NetGlobulusSimiParser_ParseError *new_NetGlobulusSimiParser_ParseError_init() {
  J2OBJC_NEW_IMPL(NetGlobulusSimiParser_ParseError, init)
}

NetGlobulusSimiParser_ParseError *create_NetGlobulusSimiParser_ParseError_init() {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiParser_ParseError, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiParser_ParseError)

J2OBJC_INITIALIZED_DEFN(NetGlobulusSimiParser_$Lambda$1)

@implementation NetGlobulusSimiParser_$Lambda$1

- (id)applyWithId:(NetGlobulusSimiToken *)a {
  return new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(a);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [NetGlobulusSimiParser_$Lambda$1 class]) {
    NetGlobulusSimiParser_$Lambda$1_instance = new_NetGlobulusSimiParser_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(NetGlobulusSimiParser_$Lambda$1)
  }
}

@end

void NetGlobulusSimiParser_$Lambda$1_init(NetGlobulusSimiParser_$Lambda$1 *self) {
  NSObject_init(self);
}

NetGlobulusSimiParser_$Lambda$1 *new_NetGlobulusSimiParser_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(NetGlobulusSimiParser_$Lambda$1, init)
}

NetGlobulusSimiParser_$Lambda$1 *create_NetGlobulusSimiParser_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiParser_$Lambda$1, init)
}
