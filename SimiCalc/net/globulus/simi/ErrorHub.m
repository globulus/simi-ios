//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/ErrorHub.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "ErrorHub.h"
#include "ErrorWatcher.h"
#include "RuntimeError.h"
#include "Token.h"
#include "TokenType.h"

@interface NetGlobulusSimiErrorHub () {
 @public
  id<JavaUtilList> watchers_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(NetGlobulusSimiErrorHub, watchers_, id<JavaUtilList>)

inline NetGlobulusSimiErrorHub *NetGlobulusSimiErrorHub_get_instance(void);
static NetGlobulusSimiErrorHub *NetGlobulusSimiErrorHub_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetGlobulusSimiErrorHub, instance, NetGlobulusSimiErrorHub *)

__attribute__((unused)) static void NetGlobulusSimiErrorHub_init(NetGlobulusSimiErrorHub *self);

__attribute__((unused)) static NetGlobulusSimiErrorHub *new_NetGlobulusSimiErrorHub_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetGlobulusSimiErrorHub *create_NetGlobulusSimiErrorHub_init(void);

J2OBJC_INITIALIZED_DEFN(NetGlobulusSimiErrorHub)

@implementation NetGlobulusSimiErrorHub

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetGlobulusSimiErrorHub_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NetGlobulusSimiErrorHub *)sharedInstance {
  return NetGlobulusSimiErrorHub_sharedInstance();
}

- (void)errorWithInt:(jint)line
        withNSString:(NSString *)message {
  [self reportWithInt:line withNSString:@"" withNSString:message];
}

- (void)errorWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)token
                         withNSString:(NSString *)message {
  if (((NetGlobulusSimiToken *) nil_chk(token))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, EOF)) {
    [self reportWithInt:token->line_ withNSString:@" at end" withNSString:message];
  }
  else {
    [self reportWithInt:token->line_ withNSString:JreStrcat("$$C", @" at '", token->lexeme_, '\'') withNSString:message];
  }
}

- (void)reportWithInt:(jint)line
         withNSString:(NSString *)where
         withNSString:(NSString *)message {
  for (id<NetGlobulusSimiErrorWatcher> __strong watcher in nil_chk(watchers_)) {
    [((id<NetGlobulusSimiErrorWatcher>) nil_chk(watcher)) reportWithInt:line withNSString:where withNSString:message];
  }
}

- (void)runtimeErrorWithNetGlobulusSimiRuntimeError:(NetGlobulusSimiRuntimeError *)error {
  for (id<NetGlobulusSimiErrorWatcher> __strong watcher in nil_chk(watchers_)) {
    [((id<NetGlobulusSimiErrorWatcher>) nil_chk(watcher)) runtimeErrorWithNetGlobulusSimiRuntimeError:error];
  }
}

- (void)addWatcherWithNetGlobulusSimiErrorWatcher:(id<NetGlobulusSimiErrorWatcher>)watcher {
  [((id<JavaUtilList>) nil_chk(watchers_)) addWithId:watcher];
}

- (void)removeWatcherWithNetGlobulusSimiErrorWatcher:(id<NetGlobulusSimiErrorWatcher>)watcher {
  [((id<JavaUtilList>) nil_chk(watchers_)) removeWithId:watcher];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetGlobulusSimiErrorHub;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(sharedInstance);
  methods[2].selector = @selector(errorWithInt:withNSString:);
  methods[3].selector = @selector(errorWithNetGlobulusSimiToken:withNSString:);
  methods[4].selector = @selector(reportWithInt:withNSString:withNSString:);
  methods[5].selector = @selector(runtimeErrorWithNetGlobulusSimiRuntimeError:);
  methods[6].selector = @selector(addWatcherWithNetGlobulusSimiErrorWatcher:);
  methods[7].selector = @selector(removeWatcherWithNetGlobulusSimiErrorWatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "watchers_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
    { "instance", "LNetGlobulusSimiErrorHub;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "error", "ILNSString;", "LNetGlobulusSimiToken;LNSString;", "report", "ILNSString;LNSString;", "runtimeError", "LNetGlobulusSimiRuntimeError;", "addWatcher", "LNetGlobulusSimiErrorWatcher;", "removeWatcher", "Ljava/util/List<LErrorWatcher;>;", &NetGlobulusSimiErrorHub_instance };
  static const J2ObjcClassInfo _NetGlobulusSimiErrorHub = { "ErrorHub", "net.globulus.simi", ptrTable, methods, fields, 7, 0x0, 8, 2, -1, -1, -1, -1, -1 };
  return &_NetGlobulusSimiErrorHub;
}

+ (void)initialize {
  if (self == [NetGlobulusSimiErrorHub class]) {
    NetGlobulusSimiErrorHub_instance = new_NetGlobulusSimiErrorHub_init();
    J2OBJC_SET_INITIALIZED(NetGlobulusSimiErrorHub)
  }
}

@end

void NetGlobulusSimiErrorHub_init(NetGlobulusSimiErrorHub *self) {
  NSObject_init(self);
  self->watchers_ = new_JavaUtilArrayList_init();
}

NetGlobulusSimiErrorHub *new_NetGlobulusSimiErrorHub_init() {
  J2OBJC_NEW_IMPL(NetGlobulusSimiErrorHub, init)
}

NetGlobulusSimiErrorHub *create_NetGlobulusSimiErrorHub_init() {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiErrorHub, init)
}

NetGlobulusSimiErrorHub *NetGlobulusSimiErrorHub_sharedInstance() {
  NetGlobulusSimiErrorHub_initialize();
  return NetGlobulusSimiErrorHub_instance;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiErrorHub)
