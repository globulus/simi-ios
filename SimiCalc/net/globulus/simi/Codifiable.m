//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Codifiable.java
//

#include "J2ObjC_source.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "Codifiable.h"

@implementation SMCodifiable

+ (NSString *)getIndentationWithInt:(jint)level {
  return SMCodifiable_getIndentationWithInt_(level);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(toCodeWithInt:withBoolean:);
  methods[1].selector = @selector(getIndentationWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toCode", "IZ", "getIndentation", "I" };
  static const J2ObjcClassInfo _SMCodifiable = { "Codifiable", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x609, 2, 0, -1, -1, -1, -1, -1 };
  return &_SMCodifiable;
}

@end

NSString *SMCodifiable_getIndentationWithInt_(jint level) {
  SMCodifiable_initialize();
  if (level == 0) {
    return @"";
  }
  NSString *indentation = @"    ";
  return NSString_java_joinWithJavaLangCharSequence_withJavaLangIterable_(@"", JavaUtilCollections_nCopiesWithInt_withId_(level, indentation));
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(SMCodifiable)
