//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/OverloadableFunction.java
//

#include "J2ObjC_source.h"
#include "OverloadableFunction.h"

@implementation NetGlobulusSimiOverloadableFunction

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)arity {
  NetGlobulusSimiOverloadableFunction_initWithNSString_withInt_(self, name, arity);
  return self;
}

- (NSUInteger)hash {
  return ((jint) [(JreStrcat("$I", name_, arity_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) {
    return false;
  }
  if (!([obj isKindOfClass:[NetGlobulusSimiOverloadableFunction class]])) {
    return false;
  }
  NetGlobulusSimiOverloadableFunction *of = (NetGlobulusSimiOverloadableFunction *) cast_chk(obj, [NetGlobulusSimiOverloadableFunction class]);
  return [((NSString *) nil_chk(name_)) isEqual:of->name_] && arity_ == of->arity_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "arity_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _NetGlobulusSimiOverloadableFunction = { "OverloadableFunction", "net.globulus.simi", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_NetGlobulusSimiOverloadableFunction;
}

@end

void NetGlobulusSimiOverloadableFunction_initWithNSString_withInt_(NetGlobulusSimiOverloadableFunction *self, NSString *name, jint arity) {
  NSObject_init(self);
  self->name_ = name;
  self->arity_ = arity;
}

NetGlobulusSimiOverloadableFunction *new_NetGlobulusSimiOverloadableFunction_initWithNSString_withInt_(NSString *name, jint arity) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiOverloadableFunction, initWithNSString_withInt_, name, arity)
}

NetGlobulusSimiOverloadableFunction *create_NetGlobulusSimiOverloadableFunction_initWithNSString_withInt_(NSString *name, jint arity) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiOverloadableFunction, initWithNSString_withInt_, name, arity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiOverloadableFunction)
