//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/SimiNativeClass.java
//

#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "SimiNativeClass.h"

@implementation SMSimiNativeClass

- (instancetype __nonnull)initWithNSString:(NSString *)name
                           withJavaUtilMap:(id<JavaUtilMap>)methods {
  SMSimiNativeClass_initWithNSString_withJavaUtilMap_(self, name, methods);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "methods_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaUtilMap;", "(Ljava/lang/String;Ljava/util/Map<LOverloadableFunction;LSimiCallable;>;)V", "Ljava/util/Map<LOverloadableFunction;LSimiCallable;>;" };
  static const J2ObjcClassInfo _SMSimiNativeClass = { "SimiNativeClass", "net.globulus.simi", ptrTable, methods, fields, 7, 0x0, 1, 2, -1, -1, -1, -1, -1 };
  return &_SMSimiNativeClass;
}

@end

void SMSimiNativeClass_initWithNSString_withJavaUtilMap_(SMSimiNativeClass *self, NSString *name, id<JavaUtilMap> methods) {
  NSObject_init(self);
  self->name_ = name;
  self->methods_ = methods;
}

SMSimiNativeClass *new_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(NSString *name, id<JavaUtilMap> methods) {
  J2OBJC_NEW_IMPL(SMSimiNativeClass, initWithNSString_withJavaUtilMap_, name, methods)
}

SMSimiNativeClass *create_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(NSString *name, id<JavaUtilMap> methods) {
  J2OBJC_CREATE_IMPL(SMSimiNativeClass, initWithNSString_withJavaUtilMap_, name, methods)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SMSimiNativeClass)
