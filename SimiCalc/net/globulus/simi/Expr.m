//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Expr.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/List.h"
#include "Expr.h"
#include "Pass.h"
#include "SimiValue.h"
#include "Stmt.h"
#include "Token.h"
#include "TokenType.h"

@interface NetGlobulusSimiExpr_Visitor : NSObject

@end

@implementation NetGlobulusSimiExpr

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetGlobulusSimiExpr_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x480, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "LNetGlobulusSimiExpr_Visitor;LNetGlobulusSimiExpr_Block;LNetGlobulusSimiExpr_Annotations;LNetGlobulusSimiExpr_Assign;LNetGlobulusSimiExpr_ObjectDecomp;LNetGlobulusSimiExpr_Binary;LNetGlobulusSimiExpr_Call;LNetGlobulusSimiExpr_Get;LNetGlobulusSimiExpr_Grouping;LNetGlobulusSimiExpr_Gu;LNetGlobulusSimiExpr_Literal;LNetGlobulusSimiExpr_Logical;LNetGlobulusSimiExpr_Set;LNetGlobulusSimiExpr_Super;LNetGlobulusSimiExpr_Self;LNetGlobulusSimiExpr_Unary;LNetGlobulusSimiExpr_Variable;LNetGlobulusSimiExpr_ObjectLiteral;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr = { "Expr", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x400, 2, 0, -1, 3, -1, -1, -1 };
  return &_NetGlobulusSimiExpr;
}

@end

void NetGlobulusSimiExpr_init(NetGlobulusSimiExpr *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr)

@implementation NetGlobulusSimiExpr_Visitor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0x401, 6, 7, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x401, 9, 10, -1, 11, -1, -1 },
    { NULL, "LNSObject;", 0x401, 12, 13, -1, 14, -1, -1 },
    { NULL, "LNSObject;", 0x401, 15, 16, -1, 17, -1, -1 },
    { NULL, "LNSObject;", 0x401, 18, 19, -1, 20, -1, -1 },
    { NULL, "LNSObject;", 0x401, 21, 22, -1, 23, -1, -1 },
    { NULL, "LNSObject;", 0x401, 24, 25, -1, 26, -1, -1 },
    { NULL, "LNSObject;", 0x401, 27, 28, -1, 29, -1, -1 },
    { NULL, "LNSObject;", 0x401, 30, 31, -1, 32, -1, -1 },
    { NULL, "LNSObject;", 0x401, 33, 34, -1, 35, -1, -1 },
    { NULL, "LNSObject;", 0x401, 36, 37, -1, 38, -1, -1 },
    { NULL, "LNSObject;", 0x401, 39, 40, -1, 41, -1, -1 },
    { NULL, "LNSObject;", 0x401, 42, 43, -1, 44, -1, -1 },
    { NULL, "LNSObject;", 0x401, 45, 46, -1, 47, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(visitAnnotationsExprWithNetGlobulusSimiExpr_Annotations:);
  methods[1].selector = @selector(visitAssignExprWithNetGlobulusSimiExpr_Assign:);
  methods[2].selector = @selector(visitBinaryExprWithNetGlobulusSimiExpr_Binary:);
  methods[3].selector = @selector(visitBlockExprWithNetGlobulusSimiExpr_Block:withBoolean:withBoolean:);
  methods[4].selector = @selector(visitCallExprWithNetGlobulusSimiExpr_Call:);
  methods[5].selector = @selector(visitGetExprWithNetGlobulusSimiExpr_Get:);
  methods[6].selector = @selector(visitGroupingExprWithNetGlobulusSimiExpr_Grouping:);
  methods[7].selector = @selector(visitGuExprWithNetGlobulusSimiExpr_Gu:);
  methods[8].selector = @selector(visitLiteralExprWithNetGlobulusSimiExpr_Literal:);
  methods[9].selector = @selector(visitLogicalExprWithNetGlobulusSimiExpr_Logical:);
  methods[10].selector = @selector(visitSetExprWithNetGlobulusSimiExpr_Set:);
  methods[11].selector = @selector(visitSuperExprWithNetGlobulusSimiExpr_Super:);
  methods[12].selector = @selector(visitSelfExprWithNetGlobulusSimiExpr_Self:);
  methods[13].selector = @selector(visitUnaryExprWithNetGlobulusSimiExpr_Unary:);
  methods[14].selector = @selector(visitVariableExprWithNetGlobulusSimiExpr_Variable:);
  methods[15].selector = @selector(visitObjectLiteralExprWithNetGlobulusSimiExpr_ObjectLiteral:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "visitAnnotationsExpr", "LNetGlobulusSimiExpr_Annotations;", "(LExpr$Annotations;)TR;", "visitAssignExpr", "LNetGlobulusSimiExpr_Assign;", "(LExpr$Assign;)TR;", "visitBinaryExpr", "LNetGlobulusSimiExpr_Binary;", "(LExpr$Binary;)TR;", "visitBlockExpr", "LNetGlobulusSimiExpr_Block;ZZ", "(LExpr$Block;ZZ)TR;", "visitCallExpr", "LNetGlobulusSimiExpr_Call;", "(LExpr$Call;)TR;", "visitGetExpr", "LNetGlobulusSimiExpr_Get;", "(LExpr$Get;)TR;", "visitGroupingExpr", "LNetGlobulusSimiExpr_Grouping;", "(LExpr$Grouping;)TR;", "visitGuExpr", "LNetGlobulusSimiExpr_Gu;", "(LExpr$Gu;)TR;", "visitLiteralExpr", "LNetGlobulusSimiExpr_Literal;", "(LExpr$Literal;)TR;", "visitLogicalExpr", "LNetGlobulusSimiExpr_Logical;", "(LExpr$Logical;)TR;", "visitSetExpr", "LNetGlobulusSimiExpr_Set;", "(LExpr$Set;)TR;", "visitSuperExpr", "LNetGlobulusSimiExpr_Super;", "(LExpr$Super;)TR;", "visitSelfExpr", "LNetGlobulusSimiExpr_Self;", "(LExpr$Self;)TR;", "visitUnaryExpr", "LNetGlobulusSimiExpr_Unary;", "(LExpr$Unary;)TR;", "visitVariableExpr", "LNetGlobulusSimiExpr_Variable;", "(LExpr$Variable;)TR;", "visitObjectLiteralExpr", "LNetGlobulusSimiExpr_ObjectLiteral;", "(LExpr$ObjectLiteral;)TR;", "LNetGlobulusSimiExpr;", "<R:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Visitor = { "Visitor", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x608, 16, 0, 48, -1, -1, 49, -1 };
  return &_NetGlobulusSimiExpr_Visitor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Visitor)

@implementation NetGlobulusSimiExpr_Block

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)declaration
                            withJavaUtilList:(id<JavaUtilList>)params
                            withJavaUtilList:(id<JavaUtilList>)statements {
  NetGlobulusSimiExpr_Block_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_(self, declaration, params, statements);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  jboolean newScope = (((IOSObjectArray *) nil_chk(params))->size_ < 1) ? true : [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(IOSObjectArray_Get(params, 0), [JavaLangBoolean class]))) booleanValue];
  jboolean execute = (params->size_ < 2) ? true : [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(IOSObjectArray_Get(params, 1), [JavaLangBoolean class]))) booleanValue];
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitBlockExprWithNetGlobulusSimiExpr_Block:self withBoolean:newScope withBoolean:execute];
}

- (jboolean)isNative {
  return ((NetGlobulusSimiToken *) nil_chk(declaration_))->type_ == JreLoadEnum(NetGlobulusSimiTokenType, NATIVE);
}

- (id<JavaUtilList>)getStatements {
  return statements_;
}

- (void)yieldWithInt:(jint)index {
  @throw new_JavaLangRuntimeException_initWithNSString_(@"Trying to yield a Expr.Block!");
}

- (jboolean)isEmpty {
  if ([((id<JavaUtilList>) nil_chk(statements_)) size] != 1) {
    return false;
  }
  NetGlobulusSimiStmt *stmt = [statements_ getWithInt:0];
  if (!([stmt isKindOfClass:[NetGlobulusSimiStmt_Expression class]])) {
    return false;
  }
  NetGlobulusSimiStmt_Expression *expr = (NetGlobulusSimiStmt_Expression *) cast_chk(stmt, [NetGlobulusSimiStmt_Expression class]);
  if (!([((NetGlobulusSimiStmt_Expression *) nil_chk(expr))->expression_ isKindOfClass:[NetGlobulusSimiExpr_Literal class]])) {
    return false;
  }
  return [((NetGlobulusSimiExpr_Literal *) nil_chk(((NetGlobulusSimiExpr_Literal *) cast_chk(expr->expression_, [NetGlobulusSimiExpr_Literal class]))))->value_ isKindOfClass:[NetGlobulusSimiPass class]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withJavaUtilList:withJavaUtilList:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  methods[2].selector = @selector(isNative);
  methods[3].selector = @selector(getStatements);
  methods[4].selector = @selector(yieldWithInt:);
  methods[5].selector = @selector(isEmpty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "declaration_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "params_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "statements_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LJavaUtilList;LJavaUtilList;", "(LToken;Ljava/util/List<LToken;>;Ljava/util/List<LStmt;>;)V", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "()Ljava/util/List<+LSimiStatement;>;", "yield", "I", "Ljava/util/List<LToken;>;", "Ljava/util/List<LStmt;>;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Block = { "Block", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 6, 3, 10, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Block;
}

@end

void NetGlobulusSimiExpr_Block_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_(NetGlobulusSimiExpr_Block *self, NetGlobulusSimiToken *declaration, id<JavaUtilList> params, id<JavaUtilList> statements) {
  NetGlobulusSimiExpr_init(self);
  self->declaration_ = declaration;
  self->params_ = params;
  self->statements_ = statements;
}

NetGlobulusSimiExpr_Block *new_NetGlobulusSimiExpr_Block_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_(NetGlobulusSimiToken *declaration, id<JavaUtilList> params, id<JavaUtilList> statements) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Block, initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_, declaration, params, statements)
}

NetGlobulusSimiExpr_Block *create_NetGlobulusSimiExpr_Block_initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_(NetGlobulusSimiToken *declaration, id<JavaUtilList> params, id<JavaUtilList> statements) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Block, initWithNetGlobulusSimiToken_withJavaUtilList_withJavaUtilList_, declaration, params, statements)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Block)

@implementation NetGlobulusSimiExpr_Annotations

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)tokens {
  NetGlobulusSimiExpr_Annotations_initWithJavaUtilList_(self, tokens);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitAnnotationsExprWithNetGlobulusSimiExpr_Annotations:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tokens_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<LToken;>;)V", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "Ljava/util/List<LToken;>;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Annotations = { "Annotations", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 6, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Annotations;
}

@end

void NetGlobulusSimiExpr_Annotations_initWithJavaUtilList_(NetGlobulusSimiExpr_Annotations *self, id<JavaUtilList> tokens) {
  NetGlobulusSimiExpr_init(self);
  self->tokens_ = tokens;
}

NetGlobulusSimiExpr_Annotations *new_NetGlobulusSimiExpr_Annotations_initWithJavaUtilList_(id<JavaUtilList> tokens) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Annotations, initWithJavaUtilList_, tokens)
}

NetGlobulusSimiExpr_Annotations *create_NetGlobulusSimiExpr_Annotations_initWithJavaUtilList_(id<JavaUtilList> tokens) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Annotations, initWithJavaUtilList_, tokens)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Annotations)

@implementation NetGlobulusSimiExpr_Assign

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)name
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)value
                            withJavaUtilList:(id<JavaUtilList>)annotations {
  NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(self, name, value, annotations);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitAssignExprWithNetGlobulusSimiExpr_Assign:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withNetGlobulusSimiExpr:withJavaUtilList:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "value_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "annotations_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LNetGlobulusSimiExpr;LJavaUtilList;", "(LToken;LExpr;Ljava/util/List<LStmt$Annotation;>;)V", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "Ljava/util/List<LStmt$Annotation;>;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Assign = { "Assign", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 3, 6, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Assign;
}

@end

void NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(NetGlobulusSimiExpr_Assign *self, NetGlobulusSimiToken *name, NetGlobulusSimiExpr *value, id<JavaUtilList> annotations) {
  NetGlobulusSimiExpr_init(self);
  self->name_ = name;
  self->value_ = value;
  self->annotations_ = annotations;
}

NetGlobulusSimiExpr_Assign *new_NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(NetGlobulusSimiToken *name, NetGlobulusSimiExpr *value, id<JavaUtilList> annotations) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Assign, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_, name, value, annotations)
}

NetGlobulusSimiExpr_Assign *create_NetGlobulusSimiExpr_Assign_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_(NetGlobulusSimiToken *name, NetGlobulusSimiExpr *value, id<JavaUtilList> annotations) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Assign, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withJavaUtilList_, name, value, annotations)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Assign)

@implementation NetGlobulusSimiExpr_ObjectDecomp

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)assigns {
  NetGlobulusSimiExpr_ObjectDecomp_initWithJavaUtilList_(self, assigns);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  id value = nil;
  for (NetGlobulusSimiExpr_Assign * __strong assign in nil_chk(assigns_)) {
    value = [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitAssignExprWithNetGlobulusSimiExpr_Assign:assign];
  }
  return value;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "assigns_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<LExpr$Assign;>;)V", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "Ljava/util/List<LExpr$Assign;>;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_ObjectDecomp = { "ObjectDecomp", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 6, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_ObjectDecomp;
}

@end

void NetGlobulusSimiExpr_ObjectDecomp_initWithJavaUtilList_(NetGlobulusSimiExpr_ObjectDecomp *self, id<JavaUtilList> assigns) {
  NetGlobulusSimiExpr_init(self);
  self->assigns_ = assigns;
}

NetGlobulusSimiExpr_ObjectDecomp *new_NetGlobulusSimiExpr_ObjectDecomp_initWithJavaUtilList_(id<JavaUtilList> assigns) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_ObjectDecomp, initWithJavaUtilList_, assigns)
}

NetGlobulusSimiExpr_ObjectDecomp *create_NetGlobulusSimiExpr_ObjectDecomp_initWithJavaUtilList_(id<JavaUtilList> assigns) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_ObjectDecomp, initWithJavaUtilList_, assigns)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_ObjectDecomp)

@implementation NetGlobulusSimiExpr_Binary

- (instancetype)initWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)left
                   withNetGlobulusSimiToken:(NetGlobulusSimiToken *)operator_
                    withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)right {
  NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(self, left, operator_, right);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitBinaryExprWithNetGlobulusSimiExpr_Binary:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiExpr:withNetGlobulusSimiToken:withNetGlobulusSimiExpr:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "left_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "operator__", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, 4, -1, -1, -1 },
    { "right_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiExpr;LNetGlobulusSimiToken;LNetGlobulusSimiExpr;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "operator", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Binary = { "Binary", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 3, 5, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Binary;
}

@end

void NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr_Binary *self, NetGlobulusSimiExpr *left, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  NetGlobulusSimiExpr_init(self);
  self->left_ = left;
  self->operator__ = operator_;
  self->right_ = right;
}

NetGlobulusSimiExpr_Binary *new_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr *left, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Binary, initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_, left, operator_, right)
}

NetGlobulusSimiExpr_Binary *create_NetGlobulusSimiExpr_Binary_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr *left, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Binary, initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_, left, operator_, right)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Binary)

@implementation NetGlobulusSimiExpr_Call

- (instancetype)initWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)callee
                   withNetGlobulusSimiToken:(NetGlobulusSimiToken *)paren
                           withJavaUtilList:(id<JavaUtilList>)arguments {
  NetGlobulusSimiExpr_Call_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_(self, callee, paren, arguments);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitCallExprWithNetGlobulusSimiExpr_Call:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiExpr:withNetGlobulusSimiToken:withJavaUtilList:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "callee_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "paren_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "arguments_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiExpr;LNetGlobulusSimiToken;LJavaUtilList;", "(LExpr;LToken;Ljava/util/List<LExpr;>;)V", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "Ljava/util/List<LExpr;>;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Call = { "Call", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 3, 6, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Call;
}

@end

void NetGlobulusSimiExpr_Call_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_(NetGlobulusSimiExpr_Call *self, NetGlobulusSimiExpr *callee, NetGlobulusSimiToken *paren, id<JavaUtilList> arguments) {
  NetGlobulusSimiExpr_init(self);
  self->callee_ = callee;
  self->paren_ = paren;
  self->arguments_ = arguments;
}

NetGlobulusSimiExpr_Call *new_NetGlobulusSimiExpr_Call_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_(NetGlobulusSimiExpr *callee, NetGlobulusSimiToken *paren, id<JavaUtilList> arguments) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Call, initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_, callee, paren, arguments)
}

NetGlobulusSimiExpr_Call *create_NetGlobulusSimiExpr_Call_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_(NetGlobulusSimiExpr *callee, NetGlobulusSimiToken *paren, id<JavaUtilList> arguments) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Call, initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withJavaUtilList_, callee, paren, arguments)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Call)

@implementation NetGlobulusSimiExpr_Get

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)origin
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)object
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)name
                         withJavaLangInteger:(JavaLangInteger *)arity {
  NetGlobulusSimiExpr_Get_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_(self, origin, object, name, arity);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitGetExprWithNetGlobulusSimiExpr_Get:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withNetGlobulusSimiExpr:withNetGlobulusSimiExpr:withJavaLangInteger:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "origin_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "object_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "name_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "arity_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LNetGlobulusSimiExpr;LNetGlobulusSimiExpr;LJavaLangInteger;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Get = { "Get", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 4, 4, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Get;
}

@end

void NetGlobulusSimiExpr_Get_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_(NetGlobulusSimiExpr_Get *self, NetGlobulusSimiToken *origin, NetGlobulusSimiExpr *object, NetGlobulusSimiExpr *name, JavaLangInteger *arity) {
  NetGlobulusSimiExpr_init(self);
  self->origin_ = origin;
  self->object_ = object;
  self->name_ = name;
  self->arity_ = arity;
}

NetGlobulusSimiExpr_Get *new_NetGlobulusSimiExpr_Get_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_(NetGlobulusSimiToken *origin, NetGlobulusSimiExpr *object, NetGlobulusSimiExpr *name, JavaLangInteger *arity) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Get, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_, origin, object, name, arity)
}

NetGlobulusSimiExpr_Get *create_NetGlobulusSimiExpr_Get_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_(NetGlobulusSimiToken *origin, NetGlobulusSimiExpr *object, NetGlobulusSimiExpr *name, JavaLangInteger *arity) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Get, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withJavaLangInteger_, origin, object, name, arity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Get)

@implementation NetGlobulusSimiExpr_Grouping

- (instancetype)initWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)expression {
  NetGlobulusSimiExpr_Grouping_initWithNetGlobulusSimiExpr_(self, expression);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitGroupingExprWithNetGlobulusSimiExpr_Grouping:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiExpr:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "expression_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiExpr;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Grouping = { "Grouping", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 0, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Grouping;
}

@end

void NetGlobulusSimiExpr_Grouping_initWithNetGlobulusSimiExpr_(NetGlobulusSimiExpr_Grouping *self, NetGlobulusSimiExpr *expression) {
  NetGlobulusSimiExpr_init(self);
  self->expression_ = expression;
}

NetGlobulusSimiExpr_Grouping *new_NetGlobulusSimiExpr_Grouping_initWithNetGlobulusSimiExpr_(NetGlobulusSimiExpr *expression) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Grouping, initWithNetGlobulusSimiExpr_, expression)
}

NetGlobulusSimiExpr_Grouping *create_NetGlobulusSimiExpr_Grouping_initWithNetGlobulusSimiExpr_(NetGlobulusSimiExpr *expression) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Grouping, initWithNetGlobulusSimiExpr_, expression)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Grouping)

@implementation NetGlobulusSimiExpr_Gu

- (instancetype)initWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)expr {
  NetGlobulusSimiExpr_Gu_initWithNetGlobulusSimiExpr_(self, expr);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitGuExprWithNetGlobulusSimiExpr_Gu:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiExpr:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "expr_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiExpr;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Gu = { "Gu", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 0, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Gu;
}

@end

void NetGlobulusSimiExpr_Gu_initWithNetGlobulusSimiExpr_(NetGlobulusSimiExpr_Gu *self, NetGlobulusSimiExpr *expr) {
  NetGlobulusSimiExpr_init(self);
  self->expr_ = expr;
}

NetGlobulusSimiExpr_Gu *new_NetGlobulusSimiExpr_Gu_initWithNetGlobulusSimiExpr_(NetGlobulusSimiExpr *expr) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Gu, initWithNetGlobulusSimiExpr_, expr)
}

NetGlobulusSimiExpr_Gu *create_NetGlobulusSimiExpr_Gu_initWithNetGlobulusSimiExpr_(NetGlobulusSimiExpr *expr) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Gu, initWithNetGlobulusSimiExpr_, expr)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Gu)

@implementation NetGlobulusSimiExpr_Literal

- (instancetype)initWithNetGlobulusSimiSimiValue:(NetGlobulusSimiSimiValue *)value {
  NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(self, value);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitLiteralExprWithNetGlobulusSimiExpr_Literal:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiSimiValue:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNetGlobulusSimiSimiValue;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiSimiValue;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Literal = { "Literal", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 4, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Literal;
}

@end

void NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(NetGlobulusSimiExpr_Literal *self, NetGlobulusSimiSimiValue *value) {
  NetGlobulusSimiExpr_init(self);
  self->value_ = value;
}

NetGlobulusSimiExpr_Literal *new_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(NetGlobulusSimiSimiValue *value) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Literal, initWithNetGlobulusSimiSimiValue_, value)
}

NetGlobulusSimiExpr_Literal *create_NetGlobulusSimiExpr_Literal_initWithNetGlobulusSimiSimiValue_(NetGlobulusSimiSimiValue *value) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Literal, initWithNetGlobulusSimiSimiValue_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Literal)

@implementation NetGlobulusSimiExpr_Logical

- (instancetype)initWithNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)left
                   withNetGlobulusSimiToken:(NetGlobulusSimiToken *)operator_
                    withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)right {
  NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(self, left, operator_, right);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitLogicalExprWithNetGlobulusSimiExpr_Logical:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiExpr:withNetGlobulusSimiToken:withNetGlobulusSimiExpr:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "left_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "operator__", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, 4, -1, -1, -1 },
    { "right_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiExpr;LNetGlobulusSimiToken;LNetGlobulusSimiExpr;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "operator", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Logical = { "Logical", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 3, 5, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Logical;
}

@end

void NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr_Logical *self, NetGlobulusSimiExpr *left, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  NetGlobulusSimiExpr_init(self);
  self->left_ = left;
  self->operator__ = operator_;
  self->right_ = right;
}

NetGlobulusSimiExpr_Logical *new_NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr *left, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Logical, initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_, left, operator_, right)
}

NetGlobulusSimiExpr_Logical *create_NetGlobulusSimiExpr_Logical_initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr *left, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Logical, initWithNetGlobulusSimiExpr_withNetGlobulusSimiToken_withNetGlobulusSimiExpr_, left, operator_, right)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Logical)

@implementation NetGlobulusSimiExpr_Set

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)origin
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)object
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)name
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)value {
  NetGlobulusSimiExpr_Set_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_(self, origin, object, name, value);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitSetExprWithNetGlobulusSimiExpr_Set:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withNetGlobulusSimiExpr:withNetGlobulusSimiExpr:withNetGlobulusSimiExpr:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "origin_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "object_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "name_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "value_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LNetGlobulusSimiExpr;LNetGlobulusSimiExpr;LNetGlobulusSimiExpr;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Set = { "Set", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 4, 4, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Set;
}

@end

void NetGlobulusSimiExpr_Set_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr_Set *self, NetGlobulusSimiToken *origin, NetGlobulusSimiExpr *object, NetGlobulusSimiExpr *name, NetGlobulusSimiExpr *value) {
  NetGlobulusSimiExpr_init(self);
  self->origin_ = origin;
  self->object_ = object;
  self->name_ = name;
  self->value_ = value;
}

NetGlobulusSimiExpr_Set *new_NetGlobulusSimiExpr_Set_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_(NetGlobulusSimiToken *origin, NetGlobulusSimiExpr *object, NetGlobulusSimiExpr *name, NetGlobulusSimiExpr *value) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Set, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_, origin, object, name, value)
}

NetGlobulusSimiExpr_Set *create_NetGlobulusSimiExpr_Set_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_(NetGlobulusSimiToken *origin, NetGlobulusSimiExpr *object, NetGlobulusSimiExpr *name, NetGlobulusSimiExpr *value) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Set, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_withNetGlobulusSimiExpr_, origin, object, name, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Set)

@implementation NetGlobulusSimiExpr_Super

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)keyword
                    withNetGlobulusSimiToken:(NetGlobulusSimiToken *)superclass_
                    withNetGlobulusSimiToken:(NetGlobulusSimiToken *)method
                         withJavaLangInteger:(JavaLangInteger *)arity {
  NetGlobulusSimiExpr_Super_initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_(self, keyword, superclass_, method, arity);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitSuperExprWithNetGlobulusSimiExpr_Super:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withNetGlobulusSimiToken:withNetGlobulusSimiToken:withJavaLangInteger:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keyword_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "superclass__", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, 4, -1, -1, -1 },
    { "method_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "arity_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LNetGlobulusSimiToken;LNetGlobulusSimiToken;LJavaLangInteger;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "superclass", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Super = { "Super", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 4, 5, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Super;
}

@end

void NetGlobulusSimiExpr_Super_initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_(NetGlobulusSimiExpr_Super *self, NetGlobulusSimiToken *keyword, NetGlobulusSimiToken *superclass_, NetGlobulusSimiToken *method, JavaLangInteger *arity) {
  NetGlobulusSimiExpr_init(self);
  self->keyword_ = keyword;
  self->superclass__ = superclass_;
  self->method_ = method;
  self->arity_ = arity;
}

NetGlobulusSimiExpr_Super *new_NetGlobulusSimiExpr_Super_initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_(NetGlobulusSimiToken *keyword, NetGlobulusSimiToken *superclass_, NetGlobulusSimiToken *method, JavaLangInteger *arity) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Super, initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_, keyword, superclass_, method, arity)
}

NetGlobulusSimiExpr_Super *create_NetGlobulusSimiExpr_Super_initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_(NetGlobulusSimiToken *keyword, NetGlobulusSimiToken *superclass_, NetGlobulusSimiToken *method, JavaLangInteger *arity) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Super, initWithNetGlobulusSimiToken_withNetGlobulusSimiToken_withNetGlobulusSimiToken_withJavaLangInteger_, keyword, superclass_, method, arity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Super)

@implementation NetGlobulusSimiExpr_Self

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)keyword {
  NetGlobulusSimiExpr_Self_initWithNetGlobulusSimiToken_(self, keyword);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitSelfExprWithNetGlobulusSimiExpr_Self:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keyword_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Self = { "Self", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 4, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Self;
}

@end

void NetGlobulusSimiExpr_Self_initWithNetGlobulusSimiToken_(NetGlobulusSimiExpr_Self *self, NetGlobulusSimiToken *keyword) {
  NetGlobulusSimiExpr_init(self);
  self->keyword_ = keyword;
}

NetGlobulusSimiExpr_Self *new_NetGlobulusSimiExpr_Self_initWithNetGlobulusSimiToken_(NetGlobulusSimiToken *keyword) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Self, initWithNetGlobulusSimiToken_, keyword)
}

NetGlobulusSimiExpr_Self *create_NetGlobulusSimiExpr_Self_initWithNetGlobulusSimiToken_(NetGlobulusSimiToken *keyword) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Self, initWithNetGlobulusSimiToken_, keyword)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Self)

@implementation NetGlobulusSimiExpr_Unary

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)operator_
                     withNetGlobulusSimiExpr:(NetGlobulusSimiExpr *)right {
  NetGlobulusSimiExpr_Unary_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(self, operator_, right);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitUnaryExprWithNetGlobulusSimiExpr_Unary:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withNetGlobulusSimiExpr:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "operator__", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, 4, -1, -1, -1 },
    { "right_", "LNetGlobulusSimiExpr;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LNetGlobulusSimiExpr;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "operator", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Unary = { "Unary", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 2, 5, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Unary;
}

@end

void NetGlobulusSimiExpr_Unary_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiExpr_Unary *self, NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  NetGlobulusSimiExpr_init(self);
  self->operator__ = operator_;
  self->right_ = right;
}

NetGlobulusSimiExpr_Unary *new_NetGlobulusSimiExpr_Unary_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Unary, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_, operator_, right)
}

NetGlobulusSimiExpr_Unary *create_NetGlobulusSimiExpr_Unary_initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_(NetGlobulusSimiToken *operator_, NetGlobulusSimiExpr *right) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Unary, initWithNetGlobulusSimiToken_withNetGlobulusSimiExpr_, operator_, right)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Unary)

@implementation NetGlobulusSimiExpr_Variable

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)name {
  NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(self, name);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitVariableExprWithNetGlobulusSimiExpr_Variable:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_Variable = { "Variable", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 1, 4, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_Variable;
}

@end

void NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(NetGlobulusSimiExpr_Variable *self, NetGlobulusSimiToken *name) {
  NetGlobulusSimiExpr_init(self);
  self->name_ = name;
}

NetGlobulusSimiExpr_Variable *new_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(NetGlobulusSimiToken *name) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_Variable, initWithNetGlobulusSimiToken_, name)
}

NetGlobulusSimiExpr_Variable *create_NetGlobulusSimiExpr_Variable_initWithNetGlobulusSimiToken_(NetGlobulusSimiToken *name) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_Variable, initWithNetGlobulusSimiToken_, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_Variable)

@implementation NetGlobulusSimiExpr_ObjectLiteral

- (instancetype)initWithNetGlobulusSimiToken:(NetGlobulusSimiToken *)opener
                            withJavaUtilList:(id<JavaUtilList>)props
                                 withBoolean:(jboolean)isDictionary {
  NetGlobulusSimiExpr_ObjectLiteral_initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_(self, opener, props, isDictionary);
  return self;
}

- (id)acceptWithNetGlobulusSimiExpr_Visitor:(id<NetGlobulusSimiExpr_Visitor>)visitor
                          withNSObjectArray:(IOSObjectArray *)params {
  return [((id<NetGlobulusSimiExpr_Visitor>) nil_chk(visitor)) visitObjectLiteralExprWithNetGlobulusSimiExpr_ObjectLiteral:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x80, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetGlobulusSimiToken:withJavaUtilList:withBoolean:);
  methods[1].selector = @selector(acceptWithNetGlobulusSimiExpr_Visitor:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "opener_", "LNetGlobulusSimiToken;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "props_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "isDictionary_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetGlobulusSimiToken;LJavaUtilList;Z", "(LToken;Ljava/util/List<LExpr;>;Z)V", "accept", "LNetGlobulusSimiExpr_Visitor;[LNSObject;", "<R:Ljava/lang/Object;>(LExpr$Visitor<TR;>;[Ljava/lang/Object;)TR;", "Ljava/util/List<LExpr;>;", "LNetGlobulusSimiExpr;" };
  static const J2ObjcClassInfo _NetGlobulusSimiExpr_ObjectLiteral = { "ObjectLiteral", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8, 2, 3, 6, -1, -1, -1, -1 };
  return &_NetGlobulusSimiExpr_ObjectLiteral;
}

@end

void NetGlobulusSimiExpr_ObjectLiteral_initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_(NetGlobulusSimiExpr_ObjectLiteral *self, NetGlobulusSimiToken *opener, id<JavaUtilList> props, jboolean isDictionary) {
  NetGlobulusSimiExpr_init(self);
  self->opener_ = opener;
  self->props_ = props;
  self->isDictionary_ = isDictionary;
}

NetGlobulusSimiExpr_ObjectLiteral *new_NetGlobulusSimiExpr_ObjectLiteral_initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_(NetGlobulusSimiToken *opener, id<JavaUtilList> props, jboolean isDictionary) {
  J2OBJC_NEW_IMPL(NetGlobulusSimiExpr_ObjectLiteral, initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_, opener, props, isDictionary)
}

NetGlobulusSimiExpr_ObjectLiteral *create_NetGlobulusSimiExpr_ObjectLiteral_initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_(NetGlobulusSimiToken *opener, id<JavaUtilList> props, jboolean isDictionary) {
  J2OBJC_CREATE_IMPL(NetGlobulusSimiExpr_ObjectLiteral, initWithNetGlobulusSimiToken_withJavaUtilList_withBoolean_, opener, props, isDictionary)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetGlobulusSimiExpr_ObjectLiteral)
