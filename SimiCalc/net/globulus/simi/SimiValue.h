//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/SimiValue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiSimiValue")
#ifdef RESTRICT_NetGlobulusSimiSimiValue
#define INCLUDE_ALL_NetGlobulusSimiSimiValue 0
#else
#define INCLUDE_ALL_NetGlobulusSimiSimiValue 1
#endif
#undef RESTRICT_NetGlobulusSimiSimiValue
#ifdef INCLUDE_SMSimiValue_Callable
#define INCLUDE_SMSimiValue 1
#endif
#ifdef INCLUDE_SMSimiValue_Object
#define INCLUDE_SMSimiValue 1
#endif
#ifdef INCLUDE_SMSimiValue_Number
#define INCLUDE_SMSimiValue 1
#endif
#ifdef INCLUDE_SMSimiValue_String
#define INCLUDE_SMSimiValue 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMSimiValue_) && (INCLUDE_ALL_NetGlobulusSimiSimiValue || defined(INCLUDE_SMSimiValue))
#define SMSimiValue_

#define RESTRICT_NetGlobulusSimiSimiProperty 1
#define INCLUDE_SMSimiProperty 1
#include "SimiProperty.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class JavaLangDouble;
@protocol JavaUtilList;
@protocol SMSimiCallable;
@protocol SMSimiObject;

@interface SMSimiValue : NSObject < SMSimiProperty, JavaLangComparable >

#pragma mark Public

- (SMSimiValue *)cloneWithBoolean:(jboolean)mutable_;

- (SMSimiValue *)copy__ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilList>)getAnnotations;

- (id<SMSimiCallable>)getCallable;

- (JavaLangDouble *)getNumber;

- (id<SMSimiObject>)getObject;

- (NSString *)getString;

- (SMSimiValue *)getValue;

- (void)setValueWithSMSimiValue:(SMSimiValue *)value;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiValue)

FOUNDATION_EXPORT void SMSimiValue_init(SMSimiValue *self);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiValue)

@compatibility_alias NetGlobulusSimiSimiValue SMSimiValue;

#endif

#if !defined (SMSimiValue_String_) && (INCLUDE_ALL_NetGlobulusSimiSimiValue || defined(INCLUDE_SMSimiValue_String))
#define SMSimiValue_String_

@class SMSimiValue;

@interface SMSimiValue_String : SMSimiValue {
 @public
  NSString *value_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)value;

- (SMSimiValue *)cloneWithBoolean:(jboolean)mutable_;

- (jint)compareToWithId:(SMSimiValue *)o;

- (SMSimiValue *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)obj;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiValue_String)

J2OBJC_FIELD_SETTER(SMSimiValue_String, value_, NSString *)

FOUNDATION_EXPORT void SMSimiValue_String_initWithNSString_(SMSimiValue_String *self, NSString *value);

FOUNDATION_EXPORT SMSimiValue_String *new_SMSimiValue_String_initWithNSString_(NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiValue_String *create_SMSimiValue_String_initWithNSString_(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiValue_String)

#endif

#if !defined (SMSimiValue_Number_) && (INCLUDE_ALL_NetGlobulusSimiSimiValue || defined(INCLUDE_SMSimiValue_Number))
#define SMSimiValue_Number_

@class SMSimiValue;

@interface SMSimiValue_Number : SMSimiValue {
 @public
  jdouble value_;
}

+ (SMSimiValue_Number *)TRUE_;

+ (SMSimiValue_Number *)FALSE_;

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)value;

- (instancetype __nonnull)initWithDouble:(jdouble)value;

- (SMSimiValue *)cloneWithBoolean:(jboolean)mutable_;

- (jint)compareToWithId:(SMSimiValue *)o;

- (SMSimiValue *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)obj;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(SMSimiValue_Number)

inline SMSimiValue_Number *SMSimiValue_Number_get_TRUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT SMSimiValue_Number *SMSimiValue_Number_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMSimiValue_Number, TRUE, SMSimiValue_Number *)

inline SMSimiValue_Number *SMSimiValue_Number_get_FALSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT SMSimiValue_Number *SMSimiValue_Number_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMSimiValue_Number, FALSE, SMSimiValue_Number *)

FOUNDATION_EXPORT void SMSimiValue_Number_initWithDouble_(SMSimiValue_Number *self, jdouble value);

FOUNDATION_EXPORT SMSimiValue_Number *new_SMSimiValue_Number_initWithDouble_(jdouble value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiValue_Number *create_SMSimiValue_Number_initWithDouble_(jdouble value);

FOUNDATION_EXPORT void SMSimiValue_Number_initWithBoolean_(SMSimiValue_Number *self, jboolean value);

FOUNDATION_EXPORT SMSimiValue_Number *new_SMSimiValue_Number_initWithBoolean_(jboolean value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiValue_Number *create_SMSimiValue_Number_initWithBoolean_(jboolean value);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiValue_Number)

#endif

#if !defined (SMSimiValue_Object_) && (INCLUDE_ALL_NetGlobulusSimiSimiValue || defined(INCLUDE_SMSimiValue_Object))
#define SMSimiValue_Object_

@class SMSimiValue;
@protocol SMSimiObject;

@interface SMSimiValue_Object : SMSimiValue {
 @public
  id<SMSimiObject> value_;
}

#pragma mark Public

- (instancetype __nonnull)initWithSMSimiObject:(id<SMSimiObject>)value;

- (SMSimiValue *)cloneWithBoolean:(jboolean)mutable_;

- (jint)compareToWithId:(SMSimiValue *)o;

- (SMSimiValue *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)obj;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiValue_Object)

J2OBJC_FIELD_SETTER(SMSimiValue_Object, value_, id<SMSimiObject>)

FOUNDATION_EXPORT void SMSimiValue_Object_initWithSMSimiObject_(SMSimiValue_Object *self, id<SMSimiObject> value);

FOUNDATION_EXPORT SMSimiValue_Object *new_SMSimiValue_Object_initWithSMSimiObject_(id<SMSimiObject> value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiValue_Object *create_SMSimiValue_Object_initWithSMSimiObject_(id<SMSimiObject> value);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiValue_Object)

#endif

#if !defined (SMSimiValue_Callable_) && (INCLUDE_ALL_NetGlobulusSimiSimiValue || defined(INCLUDE_SMSimiValue_Callable))
#define SMSimiValue_Callable_

@class SMSimiValue;
@protocol SMSimiCallable;
@protocol SMSimiObject;

@interface SMSimiValue_Callable : SMSimiValue {
 @public
  id<SMSimiCallable> value_;
  NSString *name_;
}

#pragma mark Public

- (instancetype __nonnull)initWithSMSimiCallable:(id<SMSimiCallable>)value
                                    withNSString:(NSString *)name
                                withSMSimiObject:(id<SMSimiObject>)instance;

- (void)bindWithSMSimiObject:(id<SMSimiObject>)instance;

- (SMSimiValue *)cloneWithBoolean:(jboolean)mutable_;

- (jint)compareToWithId:(SMSimiValue *)o;

- (SMSimiValue *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)obj;

- (id<SMSimiObject>)getInstance;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiValue_Callable)

J2OBJC_FIELD_SETTER(SMSimiValue_Callable, value_, id<SMSimiCallable>)
J2OBJC_FIELD_SETTER(SMSimiValue_Callable, name_, NSString *)

FOUNDATION_EXPORT void SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(SMSimiValue_Callable *self, id<SMSimiCallable> value, NSString *name, id<SMSimiObject> instance);

FOUNDATION_EXPORT SMSimiValue_Callable *new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(id<SMSimiCallable> value, NSString *name, id<SMSimiObject> instance) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiValue_Callable *create_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(id<SMSimiCallable> value, NSString *name, id<SMSimiObject> instance);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiValue_Callable)

#endif

#if !defined (SMSimiValue_IncompatibleValuesException_) && (INCLUDE_ALL_NetGlobulusSimiSimiValue || defined(INCLUDE_SMSimiValue_IncompatibleValuesException))
#define SMSimiValue_IncompatibleValuesException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class IOSClass;
@class JavaLangThrowable;

@interface SMSimiValue_IncompatibleValuesException : JavaLangRuntimeException

#pragma mark Package-Private

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)value
                              withIOSClass:(IOSClass *)expected;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiValue_IncompatibleValuesException)

FOUNDATION_EXPORT void SMSimiValue_IncompatibleValuesException_initWithIOSClass_withIOSClass_(SMSimiValue_IncompatibleValuesException *self, IOSClass *value, IOSClass *expected);

FOUNDATION_EXPORT SMSimiValue_IncompatibleValuesException *new_SMSimiValue_IncompatibleValuesException_initWithIOSClass_withIOSClass_(IOSClass *value, IOSClass *expected) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiValue_IncompatibleValuesException *create_SMSimiValue_IncompatibleValuesException_initWithIOSClass_withIOSClass_(IOSClass *value, IOSClass *expected);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiValue_IncompatibleValuesException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiSimiValue")
