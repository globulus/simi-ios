//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/NativeModulesManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiNativeModulesManager")
#ifdef RESTRICT_NetGlobulusSimiNativeModulesManager
#define INCLUDE_ALL_NetGlobulusSimiNativeModulesManager 0
#else
#define INCLUDE_ALL_NetGlobulusSimiNativeModulesManager 1
#endif
#undef RESTRICT_NetGlobulusSimiNativeModulesManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMNativeModulesManager_) && (INCLUDE_ALL_NetGlobulusSimiNativeModulesManager || defined(INCLUDE_SMNativeModulesManager))
#define SMNativeModulesManager_

@class JavaNetURL;
@class SMInterpreter;
@protocol JavaUtilList;
@protocol SMSimiObject;
@protocol SMSimiProperty;

@interface SMNativeModulesManager : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (void)loadJarWithJavaNetURL:(JavaNetURL *)url;

#pragma mark Package-Private

- (id<SMSimiProperty>)callWithNSString:(NSString *)className_
                          withNSString:(NSString *)methodName
                      withSMSimiObject:(id<SMSimiObject>)self_
                     withSMInterpreter:(SMInterpreter *)interpreter
                      withJavaUtilList:(id<JavaUtilList>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(SMNativeModulesManager)

FOUNDATION_EXPORT void SMNativeModulesManager_init(SMNativeModulesManager *self);

FOUNDATION_EXPORT SMNativeModulesManager *new_SMNativeModulesManager_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMNativeModulesManager *create_SMNativeModulesManager_init(void);

J2OBJC_TYPE_LITERAL_HEADER(SMNativeModulesManager)

@compatibility_alias NetGlobulusSimiNativeModulesManager SMNativeModulesManager;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiNativeModulesManager")
