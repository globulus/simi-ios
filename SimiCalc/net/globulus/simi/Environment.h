//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Environment.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiEnvironment")
#ifdef RESTRICT_NetGlobulusSimiEnvironment
#define INCLUDE_ALL_NetGlobulusSimiEnvironment 0
#else
#define INCLUDE_ALL_NetGlobulusSimiEnvironment 1
#endif
#undef RESTRICT_NetGlobulusSimiEnvironment

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMEnvironment_) && (INCLUDE_ALL_NetGlobulusSimiEnvironment || defined(INCLUDE_SMEnvironment))
#define SMEnvironment_

#define RESTRICT_NetGlobulusSimiSimiEnvironment 1
#define INCLUDE_SMSimiEnvironment 1
#include "SimiEnvironment.h"

@class SMBlockImpl;
@class SMExpr_Block;
@class SMSimiValue;
@class SMToken;
@protocol JavaUtilMap;
@protocol SMSimiProperty;
@protocol SMStmt_BlockStmt;

@interface SMEnvironment : NSObject < SMSimiEnvironment > {
 @public
  SMEnvironment *enclosing_;
  jint depth_;
}

#pragma mark Public

- (void)defineWithNSString:(NSString *)name
        withSMSimiProperty:(id<SMSimiProperty>)property;

- (NSString *)description;

- (id<SMSimiProperty>)tryGetWithNSString:(NSString *)name;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithSMEnvironment:(SMEnvironment *)enclosing;

- (SMEnvironment *)ancestorWithInt:(jint)distance;

- (void)assignWithSMToken:(SMToken *)name
       withSMSimiProperty:(id<SMSimiProperty>)prop
              withBoolean:(jboolean)allowImmutable;

- (void)assignAtWithInt:(jint)distance
            withSMToken:(SMToken *)name
     withSMSimiProperty:(id<SMSimiProperty>)prop;

- (void)endBlockWithSMStmt_BlockStmt:(id<SMStmt_BlockStmt>)stmt
                     withJavaUtilMap:(id<JavaUtilMap>)yieldedStmts;

- (SMSimiValue *)getWithSMToken:(SMToken *)name;

- (id<SMSimiProperty>)getAtWithInt:(jint)distance
                      withNSString:(NSString *)name;

- (SMBlockImpl *)getOrAssignBlockWithSMStmt_BlockStmt:(id<SMStmt_BlockStmt>)stmt
                                     withSMExpr_Block:(SMExpr_Block *)declaration
                                      withJavaUtilMap:(id<JavaUtilMap>)yieldedStmts;

- (jboolean)hasWithNSString:(NSString *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(SMEnvironment)

J2OBJC_FIELD_SETTER(SMEnvironment, enclosing_, SMEnvironment *)

FOUNDATION_EXPORT void SMEnvironment_init(SMEnvironment *self);

FOUNDATION_EXPORT SMEnvironment *new_SMEnvironment_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMEnvironment *create_SMEnvironment_init(void);

FOUNDATION_EXPORT void SMEnvironment_initWithSMEnvironment_(SMEnvironment *self, SMEnvironment *enclosing);

FOUNDATION_EXPORT SMEnvironment *new_SMEnvironment_initWithSMEnvironment_(SMEnvironment *enclosing) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMEnvironment *create_SMEnvironment_initWithSMEnvironment_(SMEnvironment *enclosing);

J2OBJC_TYPE_LITERAL_HEADER(SMEnvironment)

@compatibility_alias NetGlobulusSimiEnvironment SMEnvironment;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiEnvironment")
