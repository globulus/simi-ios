//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Break.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiBreak")
#ifdef RESTRICT_NetGlobulusSimiBreak
#define INCLUDE_ALL_NetGlobulusSimiBreak 0
#else
#define INCLUDE_ALL_NetGlobulusSimiBreak 1
#endif
#undef RESTRICT_NetGlobulusSimiBreak

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMBreak_) && (INCLUDE_ALL_NetGlobulusSimiBreak || defined(INCLUDE_SMBreak))
#define SMBreak_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface SMBreak : JavaLangRuntimeException

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBreak)

FOUNDATION_EXPORT void SMBreak_init(SMBreak *self);

FOUNDATION_EXPORT SMBreak *new_SMBreak_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMBreak *create_SMBreak_init(void);

FOUNDATION_EXPORT void SMBreak_initWithJavaLangThrowable_(SMBreak *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT SMBreak *new_SMBreak_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMBreak *create_SMBreak_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(SMBreak)

@compatibility_alias NetGlobulusSimiBreak SMBreak;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiBreak")
