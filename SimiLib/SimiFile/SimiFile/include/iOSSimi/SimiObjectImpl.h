//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/SimiObjectImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl")
#ifdef RESTRICT_NetGlobulusSimiSimiObjectImpl
#define INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl 0
#else
#define INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl 1
#endif
#undef RESTRICT_NetGlobulusSimiSimiObjectImpl
#ifdef INCLUDE_SMSimiObjectImpl_InitiallyEmpty
#define INCLUDE_SMSimiObjectImpl 1
#endif
#ifdef INCLUDE_SMSimiObjectImpl_Array
#define INCLUDE_SMSimiObjectImpl 1
#endif
#ifdef INCLUDE_SMSimiObjectImpl_Dictionary
#define INCLUDE_SMSimiObjectImpl 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMSimiObjectImpl_) && (INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl || defined(INCLUDE_SMSimiObjectImpl))
#define SMSimiObjectImpl_

#define RESTRICT_NetGlobulusSimiSimiObject 1
#define INCLUDE_SMSimiObject 1
#include "SimiObject.h"

@class JavaLangInteger;
@class JavaUtilArrayList;
@class JavaUtilLinkedHashMap;
@class SMEnvironment;
@class SMInterpreter;
@class SMSimiClassImpl;
@class SMSimiObjectImpl_Array;
@class SMSimiObjectImpl_Dictionary;
@class SMSimiValue;
@class SMToken;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol SMSimiClass;
@protocol SMSimiEnvironment;
@protocol SMSimiProperty;

@interface SMSimiObjectImpl : NSObject < SMSimiObject > {
 @public
  SMSimiClassImpl *clazz_;
  jboolean immutable_;
}

#pragma mark Public

- (id<SMSimiProperty>)getWithNSString:(NSString *)key
                withSMSimiEnvironment:(id<SMSimiEnvironment>)environment;

- (id<SMSimiClass>)getSimiClass;

- (JavaUtilArrayList *)keys;

- (void)setWithNSString:(NSString *)key
     withSMSimiProperty:(id<SMSimiProperty>)prop
  withSMSimiEnvironment:(id<SMSimiEnvironment>)environment;

- (NSString *)description;

- (JavaUtilArrayList *)values;

#pragma mark Package-Private

- (void)addAllWithSMSimiObjectImpl:(SMSimiObjectImpl *)other;

- (void)appendWithSMSimiProperty:(id<SMSimiProperty>)elem;

- (void)appendImplWithSMSimiProperty:(id<SMSimiProperty>)elem;

- (SMSimiObjectImpl_Array *)asArray;

- (SMSimiObjectImpl_Dictionary *)asDictionary;

- (id<SMSimiProperty>)bindWithNSString:(NSString *)key
                    withSMSimiProperty:(id<SMSimiProperty>)prop;

- (void)checkMutabilityWithSMToken:(SMToken *)name
                 withSMEnvironment:(SMEnvironment *)environment;

- (void)clearWithSMEnvironment:(SMEnvironment *)environment;

- (void)clearImpl;

- (jboolean)containsWithSMSimiValue:(SMSimiValue *)object
                        withSMToken:(SMToken *)at;

+ (SMSimiObjectImpl *)decomposedPairWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass
                                        withSMSimiValue:(SMSimiValue *)key
                                        withSMSimiValue:(SMSimiValue *)value;

+ (SMSimiObjectImpl *)emptyWithSMSimiClassImpl:(SMSimiClassImpl *)clazz
                                   withBoolean:(jboolean)immutable;

- (SMSimiObjectImpl *)enumerateWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

+ (SMSimiObjectImpl *)fromArrayWithSMSimiClassImpl:(SMSimiClassImpl *)clazz
                                       withBoolean:(jboolean)immutable
                             withJavaUtilArrayList:(JavaUtilArrayList *)fields;

+ (SMSimiObjectImpl *)fromMapWithSMSimiClassImpl:(SMSimiClassImpl *)clazz
                                     withBoolean:(jboolean)immutable
                       withJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)props;

- (id<SMSimiProperty>)getWithSMToken:(SMToken *)name
                 withJavaLangInteger:(JavaLangInteger *)arity
                   withSMEnvironment:(SMEnvironment *)environment;

- (id<SMSimiProperty>)getFromClassWithSMToken:(SMToken *)name
                          withJavaLangInteger:(JavaLangInteger *)arity
                            withSMEnvironment:(SMEnvironment *)environment;

+ (id<SMSimiObject>)getOrConvertObjectWithSMSimiProperty:(id<SMSimiProperty>)prop
                                       withSMInterpreter:(SMInterpreter *)interpreter;

- (SMSimiValue *)indexOfWithSMSimiValue:(SMSimiValue *)value;

+ (SMSimiObjectImpl *)instanceWithSMSimiClassImpl:(SMSimiClassImpl *)clazz
                        withJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)props;

- (jboolean)isWithSMSimiClassImpl:(SMSimiClassImpl *)clazz;

- (jboolean)isArray;

- (jboolean)isNumber;

- (jboolean)isString;

- (id<JavaUtilIterator>)iterate;

- (jint)length;

- (jboolean)matchesWithSMSimiObjectImpl:(SMSimiObjectImpl *)other
                       withJavaUtilList:(id<JavaUtilList>)fieldsToMatch;

+ (SMSimiObjectImpl *)pairWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass
                                 withNSString:(NSString *)key
                           withSMSimiProperty:(id<SMSimiProperty>)prop;

- (NSString *)printFields;

- (SMSimiObjectImpl *)reversed;

- (void)setWithSMToken:(SMToken *)name
    withSMSimiProperty:(id<SMSimiProperty>)prop
     withSMEnvironment:(SMEnvironment *)environment;

- (void)setFieldWithNSString:(NSString *)key
          withSMSimiProperty:(id<SMSimiProperty>)prop;

- (SMSimiObjectImpl *)sortedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (jboolean)valuesMatchWithSMSimiProperty:(id<SMSimiProperty>)a
                       withSMSimiProperty:(id<SMSimiProperty>)b;

- (jboolean)valuesMatchWithSMSimiValue:(SMSimiValue *)a
                       withSMSimiValue:(SMSimiValue *)b;

- (SMSimiObjectImpl *)zipWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiObjectImpl)

J2OBJC_FIELD_SETTER(SMSimiObjectImpl, clazz_, SMSimiClassImpl *)

FOUNDATION_EXPORT SMSimiObjectImpl *SMSimiObjectImpl_instanceWithSMSimiClassImpl_withJavaUtilLinkedHashMap_(SMSimiClassImpl *clazz, JavaUtilLinkedHashMap *props);

FOUNDATION_EXPORT SMSimiObjectImpl *SMSimiObjectImpl_pairWithSMSimiClassImpl_withNSString_withSMSimiProperty_(SMSimiClassImpl *objectClass, NSString *key, id<SMSimiProperty> prop);

FOUNDATION_EXPORT SMSimiObjectImpl *SMSimiObjectImpl_decomposedPairWithSMSimiClassImpl_withSMSimiValue_withSMSimiValue_(SMSimiClassImpl *objectClass, SMSimiValue *key, SMSimiValue *value);

FOUNDATION_EXPORT SMSimiObjectImpl *SMSimiObjectImpl_fromMapWithSMSimiClassImpl_withBoolean_withJavaUtilLinkedHashMap_(SMSimiClassImpl *clazz, jboolean immutable, JavaUtilLinkedHashMap *props);

FOUNDATION_EXPORT SMSimiObjectImpl *SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMSimiClassImpl *clazz, jboolean immutable, JavaUtilArrayList *fields);

FOUNDATION_EXPORT SMSimiObjectImpl *SMSimiObjectImpl_emptyWithSMSimiClassImpl_withBoolean_(SMSimiClassImpl *clazz, jboolean immutable);

FOUNDATION_EXPORT id<SMSimiObject> SMSimiObjectImpl_getOrConvertObjectWithSMSimiProperty_withSMInterpreter_(id<SMSimiProperty> prop, SMInterpreter *interpreter);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiObjectImpl)

@compatibility_alias NetGlobulusSimiSimiObjectImpl SMSimiObjectImpl;

#endif

#if !defined (SMSimiObjectImpl_Dictionary_) && (INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl || defined(INCLUDE_SMSimiObjectImpl_Dictionary))
#define SMSimiObjectImpl_Dictionary_

@class JavaLangInteger;
@class JavaUtilArrayList;
@class JavaUtilLinkedHashMap;
@class SMEnvironment;
@class SMSimiClassImpl;
@class SMSimiObjectImpl;
@class SMSimiObjectImpl_Array;
@class SMSimiValue;
@class SMToken;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol SMSimiObject;
@protocol SMSimiProperty;

@interface SMSimiObjectImpl_Dictionary : SMSimiObjectImpl {
 @public
  JavaUtilLinkedHashMap *fields_;
}

#pragma mark Public

- (id<SMSimiObject>)cloneWithBoolean:(jboolean)mutable_;

- (JavaUtilArrayList *)keys;

- (NSString *)toCodeWithInt:(jint)indentationLevel
                withBoolean:(jboolean)ignoreFirst;

- (JavaUtilArrayList *)values;

#pragma mark Protected

- (JavaUtilArrayList *)getEnumeratedValuesWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

#pragma mark Package-Private

- (instancetype __nonnull)initWithSMSimiClassImpl:(SMSimiClassImpl *)clazz
                                      withBoolean:(jboolean)immutable
                        withJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)fields;

- (void)addAllWithSMSimiObjectImpl:(SMSimiObjectImpl *)other;

- (void)appendImplWithSMSimiProperty:(id<SMSimiProperty>)elem;

- (SMSimiObjectImpl_Array *)asArray;

- (SMSimiObjectImpl_Dictionary *)asDictionary;

- (void)clearImpl;

- (jboolean)containsWithSMSimiValue:(SMSimiValue *)object
                        withSMToken:(SMToken *)at;

- (SMSimiObjectImpl *)enumerateWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

- (id<SMSimiProperty>)getWithSMToken:(SMToken *)name
                 withJavaLangInteger:(JavaLangInteger *)arity
                   withSMEnvironment:(SMEnvironment *)environment;

- (SMSimiValue *)indexOfWithSMSimiValue:(SMSimiValue *)value;

- (jboolean)isArray;

- (id<JavaUtilIterator>)iterate;

- (jint)length;

- (jboolean)matchesWithSMSimiObjectImpl:(SMSimiObjectImpl *)other
                       withJavaUtilList:(id<JavaUtilList>)fieldsToMatch;

- (NSString *)printFields;

- (SMSimiObjectImpl *)reversed;

- (void)setFieldWithNSString:(NSString *)key
          withSMSimiProperty:(id<SMSimiProperty>)prop;

- (SMSimiObjectImpl *)sortedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (SMSimiObjectImpl *)zipWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiObjectImpl_Dictionary)

J2OBJC_FIELD_SETTER(SMSimiObjectImpl_Dictionary, fields_, JavaUtilLinkedHashMap *)

FOUNDATION_EXPORT void SMSimiObjectImpl_Dictionary_initWithSMSimiClassImpl_withBoolean_withJavaUtilLinkedHashMap_(SMSimiObjectImpl_Dictionary *self, SMSimiClassImpl *clazz, jboolean immutable, JavaUtilLinkedHashMap *fields);

FOUNDATION_EXPORT SMSimiObjectImpl_Dictionary *new_SMSimiObjectImpl_Dictionary_initWithSMSimiClassImpl_withBoolean_withJavaUtilLinkedHashMap_(SMSimiClassImpl *clazz, jboolean immutable, JavaUtilLinkedHashMap *fields) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiObjectImpl_Dictionary *create_SMSimiObjectImpl_Dictionary_initWithSMSimiClassImpl_withBoolean_withJavaUtilLinkedHashMap_(SMSimiClassImpl *clazz, jboolean immutable, JavaUtilLinkedHashMap *fields);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiObjectImpl_Dictionary)

#endif

#if !defined (SMSimiObjectImpl_Array_) && (INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl || defined(INCLUDE_SMSimiObjectImpl_Array))
#define SMSimiObjectImpl_Array_

@class JavaLangInteger;
@class JavaUtilArrayList;
@class SMEnvironment;
@class SMSimiClassImpl;
@class SMSimiObjectImpl;
@class SMSimiObjectImpl_Dictionary;
@class SMSimiValue;
@class SMToken;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol SMSimiObject;
@protocol SMSimiProperty;

@interface SMSimiObjectImpl_Array : SMSimiObjectImpl {
 @public
  JavaUtilArrayList *fields_;
}

#pragma mark Public

- (id<SMSimiObject>)cloneWithBoolean:(jboolean)mutable_;

- (JavaUtilArrayList *)keys;

- (NSString *)toCodeWithInt:(jint)indentationLevel
                withBoolean:(jboolean)ignoreFirst;

- (JavaUtilArrayList *)values;

#pragma mark Package-Private

- (instancetype __nonnull)initWithSMSimiClassImpl:(SMSimiClassImpl *)clazz
                                      withBoolean:(jboolean)immutable
                            withJavaUtilArrayList:(JavaUtilArrayList *)fields;

- (void)addAllWithSMSimiObjectImpl:(SMSimiObjectImpl *)other;

- (void)appendImplWithSMSimiProperty:(id<SMSimiProperty>)elem;

- (SMSimiObjectImpl_Array *)asArray;

- (SMSimiObjectImpl_Dictionary *)asDictionary;

- (void)clearImpl;

- (jboolean)containsWithSMSimiValue:(SMSimiValue *)object
                        withSMToken:(SMToken *)at;

- (SMSimiObjectImpl *)enumerateWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

- (id<SMSimiProperty>)getWithSMToken:(SMToken *)name
                 withJavaLangInteger:(JavaLangInteger *)arity
                   withSMEnvironment:(SMEnvironment *)environment;

- (SMSimiValue *)indexOfWithSMSimiValue:(SMSimiValue *)value;

- (jboolean)isArray;

- (id<JavaUtilIterator>)iterate;

- (jint)length;

- (jboolean)matchesWithSMSimiObjectImpl:(SMSimiObjectImpl *)other
                       withJavaUtilList:(id<JavaUtilList>)fieldsToMatch;

- (NSString *)printFields;

- (SMSimiObjectImpl *)reversed;

- (void)setFieldWithNSString:(NSString *)key
          withSMSimiProperty:(id<SMSimiProperty>)prop;

- (SMSimiObjectImpl *)sortedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (SMSimiObjectImpl *)zipWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiObjectImpl_Array)

J2OBJC_FIELD_SETTER(SMSimiObjectImpl_Array, fields_, JavaUtilArrayList *)

FOUNDATION_EXPORT void SMSimiObjectImpl_Array_initWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMSimiObjectImpl_Array *self, SMSimiClassImpl *clazz, jboolean immutable, JavaUtilArrayList *fields);

FOUNDATION_EXPORT SMSimiObjectImpl_Array *new_SMSimiObjectImpl_Array_initWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMSimiClassImpl *clazz, jboolean immutable, JavaUtilArrayList *fields) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMSimiObjectImpl_Array *create_SMSimiObjectImpl_Array_initWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMSimiClassImpl *clazz, jboolean immutable, JavaUtilArrayList *fields);

J2OBJC_TYPE_LITERAL_HEADER(SMSimiObjectImpl_Array)

#endif

#if !defined (SMSimiObjectImpl_InitiallyEmpty_) && (INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl || defined(INCLUDE_SMSimiObjectImpl_InitiallyEmpty))
#define SMSimiObjectImpl_InitiallyEmpty_

@class JavaLangInteger;
@class JavaUtilArrayList;
@class SMEnvironment;
@class SMSimiClassImpl;
@class SMSimiObjectImpl;
@class SMSimiObjectImpl_Array;
@class SMSimiObjectImpl_Dictionary;
@class SMSimiValue;
@class SMToken;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol SMSimiObject;
@protocol SMSimiProperty;

@interface SMSimiObjectImpl_InitiallyEmpty : SMSimiObjectImpl

#pragma mark Public

- (id<SMSimiObject>)cloneWithBoolean:(jboolean)mutable_;

- (JavaUtilArrayList *)keys;

- (NSString *)toCodeWithInt:(jint)indentationLevel
                withBoolean:(jboolean)ignoreFirst;

- (JavaUtilArrayList *)values;

#pragma mark Package-Private

- (void)addAllWithSMSimiObjectImpl:(SMSimiObjectImpl *)other;

- (void)appendImplWithSMSimiProperty:(id<SMSimiProperty>)elem;

- (SMSimiObjectImpl_Array *)asArray;

- (SMSimiObjectImpl_Dictionary *)asDictionary;

- (void)clearImpl;

- (jboolean)containsWithSMSimiValue:(SMSimiValue *)object
                        withSMToken:(SMToken *)at;

- (SMSimiObjectImpl *)enumerateWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

- (id<SMSimiProperty>)getWithSMToken:(SMToken *)name
                 withJavaLangInteger:(JavaLangInteger *)arity
                   withSMEnvironment:(SMEnvironment *)environment;

- (SMSimiValue *)indexOfWithSMSimiValue:(SMSimiValue *)value;

- (jboolean)isArray;

- (id<JavaUtilIterator>)iterate;

- (jint)length;

- (jboolean)matchesWithSMSimiObjectImpl:(SMSimiObjectImpl *)other
                       withJavaUtilList:(id<JavaUtilList>)fieldsToMatch;

- (NSString *)printFields;

- (SMSimiObjectImpl *)reversed;

- (void)setFieldWithNSString:(NSString *)key
          withSMSimiProperty:(id<SMSimiProperty>)prop;

- (SMSimiObjectImpl *)sortedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (SMSimiObjectImpl *)zipWithSMSimiClassImpl:(SMSimiClassImpl *)objectClass;

@end

J2OBJC_EMPTY_STATIC_INIT(SMSimiObjectImpl_InitiallyEmpty)

J2OBJC_TYPE_LITERAL_HEADER(SMSimiObjectImpl_InitiallyEmpty)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiSimiObjectImpl")
