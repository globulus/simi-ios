//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/CocoaNativeModulesManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiCocoaNativeModulesManager")
#ifdef RESTRICT_NetGlobulusSimiCocoaNativeModulesManager
#define INCLUDE_ALL_NetGlobulusSimiCocoaNativeModulesManager 0
#else
#define INCLUDE_ALL_NetGlobulusSimiCocoaNativeModulesManager 1
#endif
#undef RESTRICT_NetGlobulusSimiCocoaNativeModulesManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMCocoaNativeModulesManager_) && (INCLUDE_ALL_NetGlobulusSimiCocoaNativeModulesManager || defined(INCLUDE_SMCocoaNativeModulesManager))
#define SMCocoaNativeModulesManager_

#define RESTRICT_NetGlobulusSimiNativeModulesManager 1
#define INCLUDE_SMNativeModulesManager 1
#include "NativeModulesManager.h"

@class SMInterpreter;
@protocol JavaUtilList;
@protocol SMSimiObject;
@protocol SMSimiProperty;

@interface SMCocoaNativeModulesManager : NSObject < SMNativeModulesManager > {
    NSMutableDictionary *classes;
    NSMutableDictionary *globals;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (id<SMSimiProperty>)callWithNSString:(NSString *)className_
                          withNSString:(NSString *)methodName
                      withSMSimiObject:(id<SMSimiObject>)self_
                     withSMInterpreter:(SMInterpreter *)interpreter
                      withJavaUtilList:(id<JavaUtilList>)args;

- (void)load__WithNSString:(NSString *)path;

@end

J2OBJC_EMPTY_STATIC_INIT(SMCocoaNativeModulesManager)

FOUNDATION_EXPORT void SMCocoaNativeModulesManager_init(SMCocoaNativeModulesManager *self);

FOUNDATION_EXPORT SMCocoaNativeModulesManager *new_SMCocoaNativeModulesManager_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMCocoaNativeModulesManager *create_SMCocoaNativeModulesManager_init(void);

J2OBJC_TYPE_LITERAL_HEADER(SMCocoaNativeModulesManager)

@compatibility_alias NetGlobulusSimiCocoaNativeModulesManager SMCocoaNativeModulesManager;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiCocoaNativeModulesManager")
