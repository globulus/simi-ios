//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/net/globulus/simi/CocoaNativeModulesManager.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "CocoaNativeModulesManager.h"
#include "Interpreter.h"
#include "SimiObject.h"
#include "SimiProperty.h"

@implementation SMCocoaNativeModulesManager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMCocoaNativeModulesManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)load__WithNSString:(NSString *)path {
}

- (id<SMSimiProperty>)callWithNSString:(NSString *)className_
                          withNSString:(NSString *)methodName
                      withSMSimiObject:(id<SMSimiObject>)self_
                     withSMInterpreter:(SMInterpreter *)interpreter
                      withJavaUtilList:(id<JavaUtilList>)args {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(load__WithNSString:);
  methods[2].selector = @selector(callWithNSString:withNSString:withSMSimiObject:withSMInterpreter:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "load", "LNSString;", "call", "LNSString;LNSString;LSMSimiObject;LSMInterpreter;LJavaUtilList;", "LJavaLangIllegalArgumentException;", "(Ljava/lang/String;Ljava/lang/String;Lnet/globulus/simi/SimiObject;Lnet/globulus/simi/Interpreter;Ljava/util/List<Lnet/globulus/simi/SimiProperty;>;)Lnet/globulus/simi/SimiProperty;" };
  static const J2ObjcClassInfo _SMCocoaNativeModulesManager = { "CocoaNativeModulesManager", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_SMCocoaNativeModulesManager;
}

@end

void SMCocoaNativeModulesManager_init(SMCocoaNativeModulesManager *self) {
  NSObject_init(self);
}

SMCocoaNativeModulesManager *new_SMCocoaNativeModulesManager_init() {
  J2OBJC_NEW_IMPL(SMCocoaNativeModulesManager, init)
}

SMCocoaNativeModulesManager *create_SMCocoaNativeModulesManager_init() {
  J2OBJC_CREATE_IMPL(SMCocoaNativeModulesManager, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SMCocoaNativeModulesManager)
