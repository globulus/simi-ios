//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/BaseClassesNativeImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/CharacterIterator.h"
#include "java/text/StringCharacterIterator.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Optional.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ThreadLocalRandom.h"
#include "java/util/function/BiFunction.h"
#include "java/util/function/Function.h"
#include "java/util/function/Supplier.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "java/util/regex/Pattern.h"
#include "java/util/stream/Collector.h"
#include "java/util/stream/Collectors.h"
#include "java/util/stream/Stream.h"
#include "BaseClassesNativeImpl.h"
#include "BlockImpl.h"
#include "BlockInterpreter.h"
#include "Constants.h"
#include "Environment.h"
#include "Expr.h"
#include "Interpreter.h"
#include "OverloadableFunction.h"
#include "SimiCallable.h"
#include "SimiClass.h"
#include "SimiClassImpl.h"
#include "SimiEnvironment.h"
#include "SimiException.h"
#include "SimiFunction.h"
#include "SimiNativeClass.h"
#include "SimiNativeObject.h"
#include "SimiObject.h"
#include "SimiObjectImpl.h"
#include "SimiProperty.h"
#include "SimiPropertyImpl.h"
#include "SimiValue.h"
#include "Stmt.h"
#include "Token.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface SMBaseClassesNativeImpl () {
 @public
  id<JavaUtilMap> classes_;
}

- (SMSimiNativeClass *)getObjectClass;

- (SMSimiNativeClass *)getStringClass;

- (SMSimiNativeClass *)getNumberClass;

- (SMSimiNativeClass *)getExceptionClass;

- (SMSimiNativeClass *)getGlobalsClass;

- (SMSimiClassImpl *)getObjectClassWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter;

- (SMSimiValue *)sortWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                           withJavaUtilList:(id<JavaUtilList>)arguments
                         withSMSimiCallable:(id<SMSimiCallable>)comparator;

- (SMSimiValue *)prepareValueNativeCallWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                             withJavaUtilList:(id<JavaUtilList>)arguments;

- (SMSimiValue *)doMathWithJavaUtilList:(id<JavaUtilList>)arguments
         withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)op;

- (SMSimiValue *)doMathWithJavaUtilList:(id<JavaUtilList>)arguments
           withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op;

@end

J2OBJC_FIELD_SETTER(SMBaseClassesNativeImpl, classes_, id<JavaUtilMap>)

__attribute__((unused)) static SMSimiNativeClass *SMBaseClassesNativeImpl_getObjectClass(SMBaseClassesNativeImpl *self);

__attribute__((unused)) static SMSimiNativeClass *SMBaseClassesNativeImpl_getStringClass(SMBaseClassesNativeImpl *self);

__attribute__((unused)) static SMSimiNativeClass *SMBaseClassesNativeImpl_getNumberClass(SMBaseClassesNativeImpl *self);

__attribute__((unused)) static SMSimiNativeClass *SMBaseClassesNativeImpl_getExceptionClass(SMBaseClassesNativeImpl *self);

__attribute__((unused)) static SMSimiNativeClass *SMBaseClassesNativeImpl_getGlobalsClass(SMBaseClassesNativeImpl *self);

__attribute__((unused)) static SMSimiClassImpl *SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(SMBaseClassesNativeImpl *self, id<SMBlockInterpreter> interpreter);

__attribute__((unused)) static SMSimiValue *SMBaseClassesNativeImpl_sortWithSMBlockInterpreter_withJavaUtilList_withSMSimiCallable_(SMBaseClassesNativeImpl *self, id<SMBlockInterpreter> interpreter, id<JavaUtilList> arguments, id<SMSimiCallable> comparator);

__attribute__((unused)) static SMSimiValue *SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(SMBaseClassesNativeImpl *self, id<SMBlockInterpreter> interpreter, id<JavaUtilList> arguments);

__attribute__((unused)) static SMSimiValue *SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionBiFunction_(SMBaseClassesNativeImpl *self, id<JavaUtilList> arguments, id<JavaUtilFunctionBiFunction> op);

__attribute__((unused)) static SMSimiValue *SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionFunction_(SMBaseClassesNativeImpl *self, id<JavaUtilList> arguments, id<JavaUtilFunctionFunction> op);

@interface SMBaseClassesNativeImpl_1 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_1)

__attribute__((unused)) static void SMBaseClassesNativeImpl_1_init(SMBaseClassesNativeImpl_1 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_1 *new_SMBaseClassesNativeImpl_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_1 *create_SMBaseClassesNativeImpl_1_init(void);

@interface SMBaseClassesNativeImpl_2 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_2)

__attribute__((unused)) static void SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_2 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_2 *new_SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_2 *create_SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_3 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_3)

__attribute__((unused)) static void SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_3 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_3 *new_SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_3 *create_SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_3_$Lambda$1 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(NSString *)k;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_3_$Lambda$1)

inline SMBaseClassesNativeImpl_3_$Lambda$1 *SMBaseClassesNativeImpl_3_$Lambda$1_get_instance(void);
static SMBaseClassesNativeImpl_3_$Lambda$1 *SMBaseClassesNativeImpl_3_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_3_$Lambda$1, instance, SMBaseClassesNativeImpl_3_$Lambda$1 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_3_$Lambda$1_init(SMBaseClassesNativeImpl_3_$Lambda$1 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_3_$Lambda$1 *new_SMBaseClassesNativeImpl_3_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_3_$Lambda$1 *create_SMBaseClassesNativeImpl_3_$Lambda$1_init(void);

@interface SMBaseClassesNativeImpl_4 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_4)

__attribute__((unused)) static void SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_4 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_4 *new_SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_4 *create_SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_5 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_5)

__attribute__((unused)) static void SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_5 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_5 *new_SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_5 *create_SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_6 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_6)

__attribute__((unused)) static void SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_6 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_6 *new_SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_6 *create_SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_7 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_7)

__attribute__((unused)) static void SMBaseClassesNativeImpl_7_init(SMBaseClassesNativeImpl_7 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_7 *new_SMBaseClassesNativeImpl_7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_7 *create_SMBaseClassesNativeImpl_7_init(void);

@interface SMBaseClassesNativeImpl_8 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_8)

__attribute__((unused)) static void SMBaseClassesNativeImpl_8_init(SMBaseClassesNativeImpl_8 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_8 *new_SMBaseClassesNativeImpl_8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_8 *create_SMBaseClassesNativeImpl_8_init(void);

@interface SMBaseClassesNativeImpl_9 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_9)

__attribute__((unused)) static void SMBaseClassesNativeImpl_9_init(SMBaseClassesNativeImpl_9 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_9 *new_SMBaseClassesNativeImpl_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_9 *create_SMBaseClassesNativeImpl_9_init(void);

@interface SMBaseClassesNativeImpl_10 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_10)

__attribute__((unused)) static void SMBaseClassesNativeImpl_10_init(SMBaseClassesNativeImpl_10 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_10 *new_SMBaseClassesNativeImpl_10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_10 *create_SMBaseClassesNativeImpl_10_init(void);

@interface SMBaseClassesNativeImpl_11 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_11)

__attribute__((unused)) static void SMBaseClassesNativeImpl_11_init(SMBaseClassesNativeImpl_11 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_11 *new_SMBaseClassesNativeImpl_11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_11 *create_SMBaseClassesNativeImpl_11_init(void);

@interface SMBaseClassesNativeImpl_12 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_12)

__attribute__((unused)) static void SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_12 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_12 *new_SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_12 *create_SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_13 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_13)

__attribute__((unused)) static void SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_13 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_13 *new_SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_13 *create_SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_14 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_14)

__attribute__((unused)) static void SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_14 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_14 *new_SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_14 *create_SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_15 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_15)

__attribute__((unused)) static void SMBaseClassesNativeImpl_15_init(SMBaseClassesNativeImpl_15 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_15 *new_SMBaseClassesNativeImpl_15_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_15 *create_SMBaseClassesNativeImpl_15_init(void);

@interface SMBaseClassesNativeImpl_16 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_16)

__attribute__((unused)) static void SMBaseClassesNativeImpl_16_init(SMBaseClassesNativeImpl_16 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_16 *new_SMBaseClassesNativeImpl_16_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_16 *create_SMBaseClassesNativeImpl_16_init(void);

@interface SMBaseClassesNativeImpl_17 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_17)

__attribute__((unused)) static void SMBaseClassesNativeImpl_17_init(SMBaseClassesNativeImpl_17 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_17 *new_SMBaseClassesNativeImpl_17_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_17 *create_SMBaseClassesNativeImpl_17_init(void);

@interface SMBaseClassesNativeImpl_18 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_18)

__attribute__((unused)) static void SMBaseClassesNativeImpl_18_init(SMBaseClassesNativeImpl_18 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_18 *new_SMBaseClassesNativeImpl_18_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_18 *create_SMBaseClassesNativeImpl_18_init(void);

@interface SMBaseClassesNativeImpl_19 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_19)

__attribute__((unused)) static void SMBaseClassesNativeImpl_19_init(SMBaseClassesNativeImpl_19 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_19 *new_SMBaseClassesNativeImpl_19_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_19 *create_SMBaseClassesNativeImpl_19_init(void);

@interface SMBaseClassesNativeImpl_20 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_20)

__attribute__((unused)) static void SMBaseClassesNativeImpl_20_init(SMBaseClassesNativeImpl_20 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_20 *new_SMBaseClassesNativeImpl_20_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_20 *create_SMBaseClassesNativeImpl_20_init(void);

@interface SMBaseClassesNativeImpl_20_1 : NSObject < SMSimiCallable > {
 @public
  id<JavaUtilIterator> val$iterator_;
}

- (instancetype __nonnull)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_20_1)

__attribute__((unused)) static void SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(SMBaseClassesNativeImpl_20_1 *self, id<JavaUtilIterator> capture$0);

__attribute__((unused)) static SMBaseClassesNativeImpl_20_1 *new_SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(id<JavaUtilIterator> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_20_1 *create_SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(id<JavaUtilIterator> capture$0);

@interface SMBaseClassesNativeImpl_21 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_21)

__attribute__((unused)) static void SMBaseClassesNativeImpl_21_init(SMBaseClassesNativeImpl_21 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_21 *new_SMBaseClassesNativeImpl_21_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_21 *create_SMBaseClassesNativeImpl_21_init(void);

@interface SMBaseClassesNativeImpl_22 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_22)

__attribute__((unused)) static void SMBaseClassesNativeImpl_22_init(SMBaseClassesNativeImpl_22 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_22 *new_SMBaseClassesNativeImpl_22_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_22 *create_SMBaseClassesNativeImpl_22_init(void);

@interface SMBaseClassesNativeImpl_23 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_23)

__attribute__((unused)) static void SMBaseClassesNativeImpl_23_init(SMBaseClassesNativeImpl_23 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_23 *new_SMBaseClassesNativeImpl_23_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_23 *create_SMBaseClassesNativeImpl_23_init(void);

@interface SMBaseClassesNativeImpl_24 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_24)

__attribute__((unused)) static void SMBaseClassesNativeImpl_24_init(SMBaseClassesNativeImpl_24 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_24 *new_SMBaseClassesNativeImpl_24_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_24 *create_SMBaseClassesNativeImpl_24_init(void);

@interface SMBaseClassesNativeImpl_25 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_25)

__attribute__((unused)) static void SMBaseClassesNativeImpl_25_init(SMBaseClassesNativeImpl_25 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_25 *new_SMBaseClassesNativeImpl_25_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_25 *create_SMBaseClassesNativeImpl_25_init(void);

@interface SMBaseClassesNativeImpl_26 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_26)

__attribute__((unused)) static void SMBaseClassesNativeImpl_26_init(SMBaseClassesNativeImpl_26 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_26 *new_SMBaseClassesNativeImpl_26_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_26 *create_SMBaseClassesNativeImpl_26_init(void);

@interface SMBaseClassesNativeImpl_26_$Lambda$1 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(SMSimiValue *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_26_$Lambda$1)

inline SMBaseClassesNativeImpl_26_$Lambda$1 *SMBaseClassesNativeImpl_26_$Lambda$1_get_instance(void);
static SMBaseClassesNativeImpl_26_$Lambda$1 *SMBaseClassesNativeImpl_26_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_26_$Lambda$1, instance, SMBaseClassesNativeImpl_26_$Lambda$1 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_26_$Lambda$1_init(SMBaseClassesNativeImpl_26_$Lambda$1 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_26_$Lambda$1 *new_SMBaseClassesNativeImpl_26_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_26_$Lambda$1 *create_SMBaseClassesNativeImpl_26_$Lambda$1_init(void);

@interface SMBaseClassesNativeImpl_27 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_27)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_init(SMBaseClassesNativeImpl_27 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_27 *new_SMBaseClassesNativeImpl_27_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27 *create_SMBaseClassesNativeImpl_27_init(void);

@interface SMBaseClassesNativeImpl_27_1 : NSObject < SMSimiCallable > {
 @public
  JavaUtilLinkedHashMap *val$fields_;
  NSString *val$param_;
  id<JavaUtilList> val$initArgs_;
  SMSimiValue *val$objectValue_;
}

- (instancetype __nonnull)initWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)capture$0
                                           withNSString:(NSString *)capture$1
                                       withJavaUtilList:(id<JavaUtilList>)capture$2
                                        withSMSimiValue:(SMSimiValue *)capture$3;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_27_1)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(SMBaseClassesNativeImpl_27_1 *self, JavaUtilLinkedHashMap *capture$0, NSString *capture$1, id<JavaUtilList> capture$2, SMSimiValue *capture$3);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_1 *new_SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(JavaUtilLinkedHashMap *capture$0, NSString *capture$1, id<JavaUtilList> capture$2, SMSimiValue *capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_1 *create_SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(JavaUtilLinkedHashMap *capture$0, NSString *capture$1, id<JavaUtilList> capture$2, SMSimiValue *capture$3);

@interface SMBaseClassesNativeImpl_27_2 : NSObject < SMSimiCallable > {
 @public
  id<JavaUtilSet> val$params_;
  id<JavaUtilSet> val$constructors_;
  JavaUtilLinkedHashMap *val$fields_;
  SMSimiClassImpl *val$clazz_;
  id<JavaUtilList> val$initArgs_;
}

- (instancetype __nonnull)initWithJavaUtilSet:(id<JavaUtilSet>)capture$0
                              withJavaUtilSet:(id<JavaUtilSet>)capture$1
                    withJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)capture$2
                          withSMSimiClassImpl:(SMSimiClassImpl *)capture$3
                             withJavaUtilList:(id<JavaUtilList>)capture$4;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_27_2)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(SMBaseClassesNativeImpl_27_2 *self, id<JavaUtilSet> capture$0, id<JavaUtilSet> capture$1, JavaUtilLinkedHashMap *capture$2, SMSimiClassImpl *capture$3, id<JavaUtilList> capture$4);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_2 *new_SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(id<JavaUtilSet> capture$0, id<JavaUtilSet> capture$1, JavaUtilLinkedHashMap *capture$2, SMSimiClassImpl *capture$3, id<JavaUtilList> capture$4) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_2 *create_SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(id<JavaUtilSet> capture$0, id<JavaUtilSet> capture$1, JavaUtilLinkedHashMap *capture$2, SMSimiClassImpl *capture$3, id<JavaUtilList> capture$4);

@interface SMBaseClassesNativeImpl_27_2_$Lambda$1 : NSObject < JavaUtilFunctionToIntFunction > {
 @public
  jint val$size_;
}

- (jint)applyAsIntWithId:(SMSimiFunction *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_27_2_$Lambda$1)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(SMBaseClassesNativeImpl_27_2_$Lambda$1 *self, jint capture$0);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_2_$Lambda$1 *new_SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_2_$Lambda$1 *create_SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(jint capture$0);

@interface SMBaseClassesNativeImpl_27_2_$Lambda$2 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(SMExpr *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_27_2_$Lambda$2)

inline SMBaseClassesNativeImpl_27_2_$Lambda$2 *SMBaseClassesNativeImpl_27_2_$Lambda$2_get_instance(void);
static SMBaseClassesNativeImpl_27_2_$Lambda$2 *SMBaseClassesNativeImpl_27_2_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_27_2_$Lambda$2, instance, SMBaseClassesNativeImpl_27_2_$Lambda$2 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_2_$Lambda$2_init(SMBaseClassesNativeImpl_27_2_$Lambda$2 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_2_$Lambda$2 *new_SMBaseClassesNativeImpl_27_2_$Lambda$2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_2_$Lambda$2 *create_SMBaseClassesNativeImpl_27_2_$Lambda$2_init(void);

@interface SMBaseClassesNativeImpl_27_$Lambda$1 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(SMSimiFunction *)f;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_27_$Lambda$1)

inline SMBaseClassesNativeImpl_27_$Lambda$1 *SMBaseClassesNativeImpl_27_$Lambda$1_get_instance(void);
static SMBaseClassesNativeImpl_27_$Lambda$1 *SMBaseClassesNativeImpl_27_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_27_$Lambda$1, instance, SMBaseClassesNativeImpl_27_$Lambda$1 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_$Lambda$1_init(SMBaseClassesNativeImpl_27_$Lambda$1 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_$Lambda$1 *new_SMBaseClassesNativeImpl_27_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_$Lambda$1 *create_SMBaseClassesNativeImpl_27_$Lambda$1_init(void);

@interface SMBaseClassesNativeImpl_27_$Lambda$2 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(id<JavaUtilList>)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_27_$Lambda$2)

inline SMBaseClassesNativeImpl_27_$Lambda$2 *SMBaseClassesNativeImpl_27_$Lambda$2_get_instance(void);
static SMBaseClassesNativeImpl_27_$Lambda$2 *SMBaseClassesNativeImpl_27_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_27_$Lambda$2, instance, SMBaseClassesNativeImpl_27_$Lambda$2 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_$Lambda$2_init(SMBaseClassesNativeImpl_27_$Lambda$2 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_$Lambda$2 *new_SMBaseClassesNativeImpl_27_$Lambda$2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_$Lambda$2 *create_SMBaseClassesNativeImpl_27_$Lambda$2_init(void);

@interface SMBaseClassesNativeImpl_27_$Lambda$3 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(SMExpr *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_27_$Lambda$3)

inline SMBaseClassesNativeImpl_27_$Lambda$3 *SMBaseClassesNativeImpl_27_$Lambda$3_get_instance(void);
static SMBaseClassesNativeImpl_27_$Lambda$3 *SMBaseClassesNativeImpl_27_$Lambda$3_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_27_$Lambda$3, instance, SMBaseClassesNativeImpl_27_$Lambda$3 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_27_$Lambda$3_init(SMBaseClassesNativeImpl_27_$Lambda$3 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_27_$Lambda$3 *new_SMBaseClassesNativeImpl_27_$Lambda$3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_27_$Lambda$3 *create_SMBaseClassesNativeImpl_27_$Lambda$3_init(void);

@interface SMBaseClassesNativeImpl_28 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_28)

__attribute__((unused)) static void SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_28 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_28 *new_SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_28 *create_SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_29 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_29)

__attribute__((unused)) static void SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_29 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_29 *new_SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_29 *create_SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_30 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_30)

__attribute__((unused)) static void SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_30 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_30 *new_SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_30 *create_SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_31 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_31)

__attribute__((unused)) static void SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_31 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_31 *new_SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_31 *create_SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_32 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_32)

__attribute__((unused)) static void SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_32 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_32 *new_SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_32 *create_SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_33 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_33)

__attribute__((unused)) static void SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_33 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_33 *new_SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_33 *create_SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_34 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_34)

__attribute__((unused)) static void SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_34 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_34 *new_SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_34 *create_SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_35 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_35)

__attribute__((unused)) static void SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_35 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_35 *new_SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_35 *create_SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_36 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_36)

__attribute__((unused)) static void SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_36 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_36 *new_SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_36 *create_SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_37 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_37)

__attribute__((unused)) static void SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_37 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_37 *new_SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_37 *create_SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_38 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_38)

__attribute__((unused)) static void SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_38 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_38 *new_SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_38 *create_SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_39 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_39)

__attribute__((unused)) static void SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_39 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_39 *new_SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_39 *create_SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_39_$Lambda$1 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(NSString *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_39_$Lambda$1)

inline SMBaseClassesNativeImpl_39_$Lambda$1 *SMBaseClassesNativeImpl_39_$Lambda$1_get_instance(void);
static SMBaseClassesNativeImpl_39_$Lambda$1 *SMBaseClassesNativeImpl_39_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_39_$Lambda$1, instance, SMBaseClassesNativeImpl_39_$Lambda$1 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_39_$Lambda$1_init(SMBaseClassesNativeImpl_39_$Lambda$1 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_39_$Lambda$1 *new_SMBaseClassesNativeImpl_39_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_39_$Lambda$1 *create_SMBaseClassesNativeImpl_39_$Lambda$1_init(void);

@interface SMBaseClassesNativeImpl_39_$Lambda$2 : NSObject < JavaUtilFunctionSupplier >

- (id)get;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_39_$Lambda$2)

inline SMBaseClassesNativeImpl_39_$Lambda$2 *SMBaseClassesNativeImpl_39_$Lambda$2_get_instance(void);
static SMBaseClassesNativeImpl_39_$Lambda$2 *SMBaseClassesNativeImpl_39_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_39_$Lambda$2, instance, SMBaseClassesNativeImpl_39_$Lambda$2 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_39_$Lambda$2_init(SMBaseClassesNativeImpl_39_$Lambda$2 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_39_$Lambda$2 *new_SMBaseClassesNativeImpl_39_$Lambda$2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_39_$Lambda$2 *create_SMBaseClassesNativeImpl_39_$Lambda$2_init(void);

@interface SMBaseClassesNativeImpl_40 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_40)

__attribute__((unused)) static void SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_40 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_40 *new_SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_40 *create_SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_41 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_41)

__attribute__((unused)) static void SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_41 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_41 *new_SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_41 *create_SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_42 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_42)

__attribute__((unused)) static void SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_42 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_42 *new_SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_42 *create_SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_43 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_43)

__attribute__((unused)) static void SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_43 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_43 *new_SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_43 *create_SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_44 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_44)

__attribute__((unused)) static void SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_44 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_44 *new_SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_44 *create_SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_45 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

- (jboolean)isAlphaWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_45)

__attribute__((unused)) static void SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_45 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_45 *new_SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_45 *create_SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static jboolean SMBaseClassesNativeImpl_45_isAlphaWithChar_(SMBaseClassesNativeImpl_45 *self, jchar c);

@interface SMBaseClassesNativeImpl_46 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

- (jboolean)isDigitWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_46)

__attribute__((unused)) static void SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_46 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_46 *new_SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_46 *create_SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static jboolean SMBaseClassesNativeImpl_46_isDigitWithChar_(SMBaseClassesNativeImpl_46 *self, jchar c);

@interface SMBaseClassesNativeImpl_47 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_47)

__attribute__((unused)) static void SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_47 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_47 *new_SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_47 *create_SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_47_1 : NSObject < SMSimiCallable > {
 @public
  JavaTextStringCharacterIterator *val$iterator_;
}

- (instancetype __nonnull)initWithJavaTextStringCharacterIterator:(JavaTextStringCharacterIterator *)capture$0;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_47_1)

__attribute__((unused)) static void SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(SMBaseClassesNativeImpl_47_1 *self, JavaTextStringCharacterIterator *capture$0);

__attribute__((unused)) static SMBaseClassesNativeImpl_47_1 *new_SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(JavaTextStringCharacterIterator *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_47_1 *create_SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(JavaTextStringCharacterIterator *capture$0);

@interface SMBaseClassesNativeImpl_48 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_48)

__attribute__((unused)) static void SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_48 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_48 *new_SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_48 *create_SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_49 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_49)

__attribute__((unused)) static void SMBaseClassesNativeImpl_49_init(SMBaseClassesNativeImpl_49 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_49 *new_SMBaseClassesNativeImpl_49_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_49 *create_SMBaseClassesNativeImpl_49_init(void);

@interface SMBaseClassesNativeImpl_50 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_50)

__attribute__((unused)) static void SMBaseClassesNativeImpl_50_init(SMBaseClassesNativeImpl_50 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_50 *new_SMBaseClassesNativeImpl_50_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_50 *create_SMBaseClassesNativeImpl_50_init(void);

@interface SMBaseClassesNativeImpl_51 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_51)

__attribute__((unused)) static void SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_51 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_51 *new_SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_51 *create_SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_52 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_52)

__attribute__((unused)) static void SMBaseClassesNativeImpl_52_init(SMBaseClassesNativeImpl_52 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_52 *new_SMBaseClassesNativeImpl_52_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_52 *create_SMBaseClassesNativeImpl_52_init(void);

@interface SMBaseClassesNativeImpl_52_1 : NSObject < SMSimiCallable > {
 @public
  JavaLangStringBuilder *val$sb_;
  SMSimiValue *val$objectValue_;
}

- (instancetype __nonnull)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0
                                        withSMSimiValue:(SMSimiValue *)capture$1;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_52_1)

__attribute__((unused)) static void SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(SMBaseClassesNativeImpl_52_1 *self, JavaLangStringBuilder *capture$0, SMSimiValue *capture$1);

__attribute__((unused)) static SMBaseClassesNativeImpl_52_1 *new_SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(JavaLangStringBuilder *capture$0, SMSimiValue *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_52_1 *create_SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(JavaLangStringBuilder *capture$0, SMSimiValue *capture$1);

@interface SMBaseClassesNativeImpl_52_2 : NSObject < SMSimiCallable > {
 @public
  JavaLangStringBuilder *val$sb_;
}

- (instancetype __nonnull)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_52_2)

__attribute__((unused)) static void SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(SMBaseClassesNativeImpl_52_2 *self, JavaLangStringBuilder *capture$0);

__attribute__((unused)) static SMBaseClassesNativeImpl_52_2 *new_SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(JavaLangStringBuilder *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_52_2 *create_SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(JavaLangStringBuilder *capture$0);

@interface SMBaseClassesNativeImpl_53 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_53)

__attribute__((unused)) static void SMBaseClassesNativeImpl_53_init(SMBaseClassesNativeImpl_53 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_53 *new_SMBaseClassesNativeImpl_53_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_53 *create_SMBaseClassesNativeImpl_53_init(void);

@interface SMBaseClassesNativeImpl_54 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_54)

__attribute__((unused)) static void SMBaseClassesNativeImpl_54_init(SMBaseClassesNativeImpl_54 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_54 *new_SMBaseClassesNativeImpl_54_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_54 *create_SMBaseClassesNativeImpl_54_init(void);

@interface SMBaseClassesNativeImpl_55 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_55)

__attribute__((unused)) static void SMBaseClassesNativeImpl_55_init(SMBaseClassesNativeImpl_55 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_55 *new_SMBaseClassesNativeImpl_55_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_55 *create_SMBaseClassesNativeImpl_55_init(void);

@interface SMBaseClassesNativeImpl_56 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_56)

__attribute__((unused)) static void SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_56 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_56 *new_SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_56 *create_SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_57 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_57)

__attribute__((unused)) static void SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_57 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_57 *new_SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_57 *create_SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_58 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_58)

__attribute__((unused)) static void SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_58 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_58 *new_SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_58 *create_SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_59 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_59)

__attribute__((unused)) static void SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_59 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_59 *new_SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_59 *create_SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_60 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_60)

__attribute__((unused)) static void SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_60 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_60 *new_SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_60 *create_SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_61 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_61)

__attribute__((unused)) static void SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_61 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_61 *new_SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_61 *create_SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_62 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_62)

__attribute__((unused)) static void SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_62 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_62 *new_SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_62 *create_SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_63 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_63)

__attribute__((unused)) static void SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_63 *self, SMBaseClassesNativeImpl *outer$);

__attribute__((unused)) static SMBaseClassesNativeImpl_63 *new_SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_63 *create_SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$);

@interface SMBaseClassesNativeImpl_64 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_64)

__attribute__((unused)) static void SMBaseClassesNativeImpl_64_init(SMBaseClassesNativeImpl_64 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_64 *new_SMBaseClassesNativeImpl_64_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_64 *create_SMBaseClassesNativeImpl_64_init(void);

@interface SMBaseClassesNativeImpl_65 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
  id<JavaUtilMap_Entry> val$binary_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$
                                    withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)capture$0;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_65)

__attribute__((unused)) static void SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl_65 *self, SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0);

__attribute__((unused)) static SMBaseClassesNativeImpl_65 *new_SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_65 *create_SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0);

@interface SMBaseClassesNativeImpl_66 : NSObject < SMSimiCallable > {
 @public
  SMBaseClassesNativeImpl *this$0_;
  id<JavaUtilMap_Entry> val$unary_;
}

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$
                                    withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)capture$0;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_66)

__attribute__((unused)) static void SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl_66 *self, SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0);

__attribute__((unused)) static SMBaseClassesNativeImpl_66 *new_SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_66 *create_SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0);

@interface SMBaseClassesNativeImpl_67 : NSObject < SMSimiCallable >

- (instancetype __nonnull)init;

- (jint)arity;

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_67)

__attribute__((unused)) static void SMBaseClassesNativeImpl_67_init(SMBaseClassesNativeImpl_67 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_67 *new_SMBaseClassesNativeImpl_67_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_67 *create_SMBaseClassesNativeImpl_67_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$1 : NSObject < JavaUtilFunctionBiFunction >

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$1)

inline SMBaseClassesNativeImpl_$Lambda$1 *SMBaseClassesNativeImpl_$Lambda$1_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$1 *SMBaseClassesNativeImpl_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$1, instance, SMBaseClassesNativeImpl_$Lambda$1 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$1_init(SMBaseClassesNativeImpl_$Lambda$1 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$1 *new_SMBaseClassesNativeImpl_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$1 *create_SMBaseClassesNativeImpl_$Lambda$1_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$2 : NSObject < JavaUtilFunctionBiFunction >

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$2)

inline SMBaseClassesNativeImpl_$Lambda$2 *SMBaseClassesNativeImpl_$Lambda$2_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$2 *SMBaseClassesNativeImpl_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$2, instance, SMBaseClassesNativeImpl_$Lambda$2 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$2_init(SMBaseClassesNativeImpl_$Lambda$2 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$2 *new_SMBaseClassesNativeImpl_$Lambda$2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$2 *create_SMBaseClassesNativeImpl_$Lambda$2_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$3 : NSObject < JavaUtilFunctionBiFunction >

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$3)

inline SMBaseClassesNativeImpl_$Lambda$3 *SMBaseClassesNativeImpl_$Lambda$3_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$3 *SMBaseClassesNativeImpl_$Lambda$3_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$3, instance, SMBaseClassesNativeImpl_$Lambda$3 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$3_init(SMBaseClassesNativeImpl_$Lambda$3 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$3 *new_SMBaseClassesNativeImpl_$Lambda$3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$3 *create_SMBaseClassesNativeImpl_$Lambda$3_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$4 : NSObject < JavaUtilFunctionBiFunction >

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$4)

inline SMBaseClassesNativeImpl_$Lambda$4 *SMBaseClassesNativeImpl_$Lambda$4_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$4 *SMBaseClassesNativeImpl_$Lambda$4_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$4, instance, SMBaseClassesNativeImpl_$Lambda$4 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$4_init(SMBaseClassesNativeImpl_$Lambda$4 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$4 *new_SMBaseClassesNativeImpl_$Lambda$4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$4 *create_SMBaseClassesNativeImpl_$Lambda$4_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$5 : NSObject < JavaUtilFunctionBiFunction >

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$5)

inline SMBaseClassesNativeImpl_$Lambda$5 *SMBaseClassesNativeImpl_$Lambda$5_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$5 *SMBaseClassesNativeImpl_$Lambda$5_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$5, instance, SMBaseClassesNativeImpl_$Lambda$5 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$5_init(SMBaseClassesNativeImpl_$Lambda$5 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$5 *new_SMBaseClassesNativeImpl_$Lambda$5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$5 *create_SMBaseClassesNativeImpl_$Lambda$5_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$6 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$6)

inline SMBaseClassesNativeImpl_$Lambda$6 *SMBaseClassesNativeImpl_$Lambda$6_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$6 *SMBaseClassesNativeImpl_$Lambda$6_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$6, instance, SMBaseClassesNativeImpl_$Lambda$6 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$6_init(SMBaseClassesNativeImpl_$Lambda$6 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$6 *new_SMBaseClassesNativeImpl_$Lambda$6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$6 *create_SMBaseClassesNativeImpl_$Lambda$6_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$7 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$7)

inline SMBaseClassesNativeImpl_$Lambda$7 *SMBaseClassesNativeImpl_$Lambda$7_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$7 *SMBaseClassesNativeImpl_$Lambda$7_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$7, instance, SMBaseClassesNativeImpl_$Lambda$7 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$7_init(SMBaseClassesNativeImpl_$Lambda$7 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$7 *new_SMBaseClassesNativeImpl_$Lambda$7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$7 *create_SMBaseClassesNativeImpl_$Lambda$7_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$8 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$8)

inline SMBaseClassesNativeImpl_$Lambda$8 *SMBaseClassesNativeImpl_$Lambda$8_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$8 *SMBaseClassesNativeImpl_$Lambda$8_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$8, instance, SMBaseClassesNativeImpl_$Lambda$8 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$8_init(SMBaseClassesNativeImpl_$Lambda$8 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$8 *new_SMBaseClassesNativeImpl_$Lambda$8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$8 *create_SMBaseClassesNativeImpl_$Lambda$8_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$9 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$9)

inline SMBaseClassesNativeImpl_$Lambda$9 *SMBaseClassesNativeImpl_$Lambda$9_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$9 *SMBaseClassesNativeImpl_$Lambda$9_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$9, instance, SMBaseClassesNativeImpl_$Lambda$9 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$9_init(SMBaseClassesNativeImpl_$Lambda$9 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$9 *new_SMBaseClassesNativeImpl_$Lambda$9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$9 *create_SMBaseClassesNativeImpl_$Lambda$9_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$10 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$10)

inline SMBaseClassesNativeImpl_$Lambda$10 *SMBaseClassesNativeImpl_$Lambda$10_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$10 *SMBaseClassesNativeImpl_$Lambda$10_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$10, instance, SMBaseClassesNativeImpl_$Lambda$10 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$10_init(SMBaseClassesNativeImpl_$Lambda$10 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$10 *new_SMBaseClassesNativeImpl_$Lambda$10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$10 *create_SMBaseClassesNativeImpl_$Lambda$10_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$11 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$11)

inline SMBaseClassesNativeImpl_$Lambda$11 *SMBaseClassesNativeImpl_$Lambda$11_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$11 *SMBaseClassesNativeImpl_$Lambda$11_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$11, instance, SMBaseClassesNativeImpl_$Lambda$11 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$11_init(SMBaseClassesNativeImpl_$Lambda$11 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$11 *new_SMBaseClassesNativeImpl_$Lambda$11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$11 *create_SMBaseClassesNativeImpl_$Lambda$11_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$12 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$12)

inline SMBaseClassesNativeImpl_$Lambda$12 *SMBaseClassesNativeImpl_$Lambda$12_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$12 *SMBaseClassesNativeImpl_$Lambda$12_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$12, instance, SMBaseClassesNativeImpl_$Lambda$12 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$12_init(SMBaseClassesNativeImpl_$Lambda$12 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$12 *new_SMBaseClassesNativeImpl_$Lambda$12_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$12 *create_SMBaseClassesNativeImpl_$Lambda$12_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$13 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$13)

inline SMBaseClassesNativeImpl_$Lambda$13 *SMBaseClassesNativeImpl_$Lambda$13_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$13 *SMBaseClassesNativeImpl_$Lambda$13_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$13, instance, SMBaseClassesNativeImpl_$Lambda$13 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$13_init(SMBaseClassesNativeImpl_$Lambda$13 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$13 *new_SMBaseClassesNativeImpl_$Lambda$13_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$13 *create_SMBaseClassesNativeImpl_$Lambda$13_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$14 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$14)

inline SMBaseClassesNativeImpl_$Lambda$14 *SMBaseClassesNativeImpl_$Lambda$14_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$14 *SMBaseClassesNativeImpl_$Lambda$14_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$14, instance, SMBaseClassesNativeImpl_$Lambda$14 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$14_init(SMBaseClassesNativeImpl_$Lambda$14 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$14 *new_SMBaseClassesNativeImpl_$Lambda$14_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$14 *create_SMBaseClassesNativeImpl_$Lambda$14_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$15 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$15)

inline SMBaseClassesNativeImpl_$Lambda$15 *SMBaseClassesNativeImpl_$Lambda$15_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$15 *SMBaseClassesNativeImpl_$Lambda$15_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$15, instance, SMBaseClassesNativeImpl_$Lambda$15 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$15_init(SMBaseClassesNativeImpl_$Lambda$15 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$15 *new_SMBaseClassesNativeImpl_$Lambda$15_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$15 *create_SMBaseClassesNativeImpl_$Lambda$15_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$16 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$16)

inline SMBaseClassesNativeImpl_$Lambda$16 *SMBaseClassesNativeImpl_$Lambda$16_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$16 *SMBaseClassesNativeImpl_$Lambda$16_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$16, instance, SMBaseClassesNativeImpl_$Lambda$16 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$16_init(SMBaseClassesNativeImpl_$Lambda$16 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$16 *new_SMBaseClassesNativeImpl_$Lambda$16_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$16 *create_SMBaseClassesNativeImpl_$Lambda$16_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$17 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$17)

inline SMBaseClassesNativeImpl_$Lambda$17 *SMBaseClassesNativeImpl_$Lambda$17_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$17 *SMBaseClassesNativeImpl_$Lambda$17_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$17, instance, SMBaseClassesNativeImpl_$Lambda$17 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$17_init(SMBaseClassesNativeImpl_$Lambda$17 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$17 *new_SMBaseClassesNativeImpl_$Lambda$17_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$17 *create_SMBaseClassesNativeImpl_$Lambda$17_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$18 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$18)

inline SMBaseClassesNativeImpl_$Lambda$18 *SMBaseClassesNativeImpl_$Lambda$18_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$18 *SMBaseClassesNativeImpl_$Lambda$18_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$18, instance, SMBaseClassesNativeImpl_$Lambda$18 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$18_init(SMBaseClassesNativeImpl_$Lambda$18 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$18 *new_SMBaseClassesNativeImpl_$Lambda$18_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$18 *create_SMBaseClassesNativeImpl_$Lambda$18_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$19 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$19)

inline SMBaseClassesNativeImpl_$Lambda$19 *SMBaseClassesNativeImpl_$Lambda$19_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$19 *SMBaseClassesNativeImpl_$Lambda$19_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$19, instance, SMBaseClassesNativeImpl_$Lambda$19 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$19_init(SMBaseClassesNativeImpl_$Lambda$19 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$19 *new_SMBaseClassesNativeImpl_$Lambda$19_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$19 *create_SMBaseClassesNativeImpl_$Lambda$19_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$20 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$20)

inline SMBaseClassesNativeImpl_$Lambda$20 *SMBaseClassesNativeImpl_$Lambda$20_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$20 *SMBaseClassesNativeImpl_$Lambda$20_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$20, instance, SMBaseClassesNativeImpl_$Lambda$20 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$20_init(SMBaseClassesNativeImpl_$Lambda$20 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$20 *new_SMBaseClassesNativeImpl_$Lambda$20_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$20 *create_SMBaseClassesNativeImpl_$Lambda$20_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$21 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$21)

inline SMBaseClassesNativeImpl_$Lambda$21 *SMBaseClassesNativeImpl_$Lambda$21_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$21 *SMBaseClassesNativeImpl_$Lambda$21_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$21, instance, SMBaseClassesNativeImpl_$Lambda$21 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$21_init(SMBaseClassesNativeImpl_$Lambda$21 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$21 *new_SMBaseClassesNativeImpl_$Lambda$21_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$21 *create_SMBaseClassesNativeImpl_$Lambda$21_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$22 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$22)

inline SMBaseClassesNativeImpl_$Lambda$22 *SMBaseClassesNativeImpl_$Lambda$22_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$22 *SMBaseClassesNativeImpl_$Lambda$22_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$22, instance, SMBaseClassesNativeImpl_$Lambda$22 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$22_init(SMBaseClassesNativeImpl_$Lambda$22 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$22 *new_SMBaseClassesNativeImpl_$Lambda$22_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$22 *create_SMBaseClassesNativeImpl_$Lambda$22_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$23 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$23)

inline SMBaseClassesNativeImpl_$Lambda$23 *SMBaseClassesNativeImpl_$Lambda$23_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$23 *SMBaseClassesNativeImpl_$Lambda$23_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$23, instance, SMBaseClassesNativeImpl_$Lambda$23 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$23_init(SMBaseClassesNativeImpl_$Lambda$23 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$23 *new_SMBaseClassesNativeImpl_$Lambda$23_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$23 *create_SMBaseClassesNativeImpl_$Lambda$23_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$24 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$24)

inline SMBaseClassesNativeImpl_$Lambda$24 *SMBaseClassesNativeImpl_$Lambda$24_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$24 *SMBaseClassesNativeImpl_$Lambda$24_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$24, instance, SMBaseClassesNativeImpl_$Lambda$24 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$24_init(SMBaseClassesNativeImpl_$Lambda$24 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$24 *new_SMBaseClassesNativeImpl_$Lambda$24_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$24 *create_SMBaseClassesNativeImpl_$Lambda$24_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$25 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$25)

inline SMBaseClassesNativeImpl_$Lambda$25 *SMBaseClassesNativeImpl_$Lambda$25_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$25 *SMBaseClassesNativeImpl_$Lambda$25_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$25, instance, SMBaseClassesNativeImpl_$Lambda$25 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$25_init(SMBaseClassesNativeImpl_$Lambda$25 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$25 *new_SMBaseClassesNativeImpl_$Lambda$25_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$25 *create_SMBaseClassesNativeImpl_$Lambda$25_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$26 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(JavaLangDouble *)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$26)

inline SMBaseClassesNativeImpl_$Lambda$26 *SMBaseClassesNativeImpl_$Lambda$26_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$26 *SMBaseClassesNativeImpl_$Lambda$26_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$26, instance, SMBaseClassesNativeImpl_$Lambda$26 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$26_init(SMBaseClassesNativeImpl_$Lambda$26 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$26 *new_SMBaseClassesNativeImpl_$Lambda$26_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$26 *create_SMBaseClassesNativeImpl_$Lambda$26_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$27 : NSObject < JavaUtilComparator > {
 @public
  id<SMSimiCallable> val$comparator_;
  id<SMBlockInterpreter> val$interpreter_;
}

- (jint)compareWithId:(SMSimiValue *)o1
               withId:(SMSimiValue *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$27)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(SMBaseClassesNativeImpl_$Lambda$27 *self, id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$27 *new_SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$27 *create_SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1);

@interface SMBaseClassesNativeImpl_$Lambda$28 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(id<JavaUtilMap_Entry>)a;

@end

J2OBJC_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$28)

inline SMBaseClassesNativeImpl_$Lambda$28 *SMBaseClassesNativeImpl_$Lambda$28_get_instance(void);
static SMBaseClassesNativeImpl_$Lambda$28 *SMBaseClassesNativeImpl_$Lambda$28_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMBaseClassesNativeImpl_$Lambda$28, instance, SMBaseClassesNativeImpl_$Lambda$28 *)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$28_init(SMBaseClassesNativeImpl_$Lambda$28 *self);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$28 *new_SMBaseClassesNativeImpl_$Lambda$28_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$28 *create_SMBaseClassesNativeImpl_$Lambda$28_init(void);

@interface SMBaseClassesNativeImpl_$Lambda$29 : NSObject < JavaUtilComparator > {
 @public
  id<SMSimiCallable> val$comparator_;
  id<SMBlockInterpreter> val$interpreter_;
  SMSimiClassImpl *val$objectClass_;
}

- (jint)compareWithId:(id<JavaUtilMap_Entry>)o1
               withId:(id<JavaUtilMap_Entry>)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(SMBaseClassesNativeImpl_$Lambda$29)

__attribute__((unused)) static void SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(SMBaseClassesNativeImpl_$Lambda$29 *self, id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1, SMSimiClassImpl *capture$2);

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$29 *new_SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1, SMSimiClassImpl *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static SMBaseClassesNativeImpl_$Lambda$29 *create_SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1, SMSimiClassImpl *capture$2);

@implementation SMBaseClassesNativeImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (SMSimiNativeClass *)getObjectClass {
  return SMBaseClassesNativeImpl_getObjectClass(self);
}

- (SMSimiNativeClass *)getStringClass {
  return SMBaseClassesNativeImpl_getStringClass(self);
}

- (SMSimiNativeClass *)getNumberClass {
  return SMBaseClassesNativeImpl_getNumberClass(self);
}

- (SMSimiNativeClass *)getExceptionClass {
  return SMBaseClassesNativeImpl_getExceptionClass(self);
}

- (SMSimiNativeClass *)getGlobalsClass {
  return SMBaseClassesNativeImpl_getGlobalsClass(self);
}

- (SMSimiClassImpl *)getObjectClassWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter {
  return SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(self, interpreter);
}

- (SMSimiValue *)sortWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                           withJavaUtilList:(id<JavaUtilList>)arguments
                         withSMSimiCallable:(id<SMSimiCallable>)comparator {
  return SMBaseClassesNativeImpl_sortWithSMBlockInterpreter_withJavaUtilList_withSMSimiCallable_(self, interpreter, arguments, comparator);
}

- (SMSimiValue *)prepareValueNativeCallWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                             withJavaUtilList:(id<JavaUtilList>)arguments {
  return SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(self, interpreter, arguments);
}

- (SMSimiValue *)doMathWithJavaUtilList:(id<JavaUtilList>)arguments
         withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)op {
  return SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionBiFunction_(self, arguments, op);
}

- (SMSimiValue *)doMathWithJavaUtilList:(id<JavaUtilList>)arguments
           withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op {
  return SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionFunction_(self, arguments, op);
}

- (SMSimiNativeClass *)getWithNSString:(NSString *)className_ {
  return [((id<JavaUtilMap>) nil_chk(classes_)) getWithId:className_];
}

- (id<SMSimiCallable>)getWithNSString:(NSString *)className_
                         withNSString:(NSString *)methodName
                              withInt:(jint)arity {
  return [((id<JavaUtilMap>) nil_chk(((SMSimiNativeClass *) nil_chk([self getWithNSString:className_]))->methods_)) getWithId:new_SMOverloadableFunction_initWithNSString_withInt_(methodName, arity)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiNativeClass;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiNativeClass;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiNativeClass;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiNativeClass;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiNativeClass;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiClassImpl;", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "LSMSimiValue;", 0x2, 2, 3, -1, 4, -1, -1 },
    { NULL, "LSMSimiValue;", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "LSMSimiValue;", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "LSMSimiValue;", 0x2, 8, 11, -1, 12, -1, -1 },
    { NULL, "LSMSimiNativeClass;", 0x0, 13, 14, -1, -1, -1, -1 },
    { NULL, "LSMSimiCallable;", 0x0, 13, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getObjectClass);
  methods[2].selector = @selector(getStringClass);
  methods[3].selector = @selector(getNumberClass);
  methods[4].selector = @selector(getExceptionClass);
  methods[5].selector = @selector(getGlobalsClass);
  methods[6].selector = @selector(getObjectClassWithSMBlockInterpreter:);
  methods[7].selector = @selector(sortWithSMBlockInterpreter:withJavaUtilList:withSMSimiCallable:);
  methods[8].selector = @selector(prepareValueNativeCallWithSMBlockInterpreter:withJavaUtilList:);
  methods[9].selector = @selector(doMathWithJavaUtilList:withJavaUtilFunctionBiFunction:);
  methods[10].selector = @selector(doMathWithJavaUtilList:withJavaUtilFunctionFunction:);
  methods[11].selector = @selector(getWithNSString:);
  methods[12].selector = @selector(getWithNSString:withNSString:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "classes_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "getObjectClass", "LSMBlockInterpreter;", "sort", "LSMBlockInterpreter;LJavaUtilList;LSMSimiCallable;", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;LSimiCallable;)LSimiValue;", "prepareValueNativeCall", "LSMBlockInterpreter;LJavaUtilList;", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;)LSimiValue;", "doMath", "LJavaUtilList;LJavaUtilFunctionBiFunction;", "(Ljava/util/List<LSimiProperty;>;Ljava/util/function/BiFunction<Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/Double;>;)LSimiValue;", "LJavaUtilList;LJavaUtilFunctionFunction;", "(Ljava/util/List<LSimiProperty;>;Ljava/util/function/Function<Ljava/lang/Double;Ljava/lang/Double;>;)LSimiValue;", "get", "LNSString;", "LNSString;LNSString;I", "Ljava/util/Map<Ljava/lang/String;LSimiNativeClass;>;" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl = { "BaseClassesNativeImpl", "net.globulus.simi", ptrTable, methods, fields, 7, 0x0, 13, 1, -1, -1, -1, -1, -1 };
  return &_SMBaseClassesNativeImpl;
}

@end

void SMBaseClassesNativeImpl_init(SMBaseClassesNativeImpl *self) {
  NSObject_init(self);
  self->classes_ = new_JavaUtilHashMap_init();
  (void) [self->classes_ putWithId:SMConstants_CLASS_OBJECT withId:SMBaseClassesNativeImpl_getObjectClass(self)];
  (void) [((id<JavaUtilMap>) nil_chk(self->classes_)) putWithId:SMConstants_CLASS_STRING withId:SMBaseClassesNativeImpl_getStringClass(self)];
  (void) [((id<JavaUtilMap>) nil_chk(self->classes_)) putWithId:SMConstants_CLASS_NUMBER withId:SMBaseClassesNativeImpl_getNumberClass(self)];
  (void) [((id<JavaUtilMap>) nil_chk(self->classes_)) putWithId:SMConstants_CLASS_EXCEPTION withId:SMBaseClassesNativeImpl_getExceptionClass(self)];
  (void) [((id<JavaUtilMap>) nil_chk(self->classes_)) putWithId:SMConstants_CLASS_GLOBALS withId:SMBaseClassesNativeImpl_getGlobalsClass(self)];
}

SMBaseClassesNativeImpl *new_SMBaseClassesNativeImpl_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl, init)
}

SMBaseClassesNativeImpl *create_SMBaseClassesNativeImpl_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl, init)
}

SMSimiNativeClass *SMBaseClassesNativeImpl_getObjectClass(SMBaseClassesNativeImpl *self) {
  id<JavaUtilMap> methods = new_JavaUtilHashMap_init();
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"len", 0) withId:new_SMBaseClassesNativeImpl_1_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"keys", 0) withId:new_SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"methods", 0) withId:new_SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"values", 0) withId:new_SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"enumerate", 0) withId:new_SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"zip", 0) withId:new_SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"append", 1) withId:new_SMBaseClassesNativeImpl_7_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"addAll", 1) withId:new_SMBaseClassesNativeImpl_8_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"clear", 0) withId:new_SMBaseClassesNativeImpl_9_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"indexOf", 1) withId:new_SMBaseClassesNativeImpl_10_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"reversed", 0) withId:new_SMBaseClassesNativeImpl_11_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"sorted", 0) withId:new_SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"sorted", 1) withId:new_SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"uniques", 0) withId:new_SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"clone", 0) withId:new_SMBaseClassesNativeImpl_15_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"clone", 1) withId:new_SMBaseClassesNativeImpl_16_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"isMutable", 0) withId:new_SMBaseClassesNativeImpl_17_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"isArray", 0) withId:new_SMBaseClassesNativeImpl_18_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"class", 0) withId:new_SMBaseClassesNativeImpl_19_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_ITERATE, 0) withId:new_SMBaseClassesNativeImpl_20_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_HAS, 1) withId:new_SMBaseClassesNativeImpl_21_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_EQUALS, 1) withId:new_SMBaseClassesNativeImpl_22_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_COMPARE_TO, 1) withId:new_SMBaseClassesNativeImpl_23_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_TO_STRING, 0) withId:new_SMBaseClassesNativeImpl_24_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"matches", 1) withId:new_SMBaseClassesNativeImpl_25_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"matches", 2) withId:new_SMBaseClassesNativeImpl_26_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"builder", 0) withId:new_SMBaseClassesNativeImpl_27_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"array", 0) withId:new_SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"array", 1) withId:new_SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"array", 2) withId:new_SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"slice", 2) withId:new_SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(self)];
  return new_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(SMConstants_CLASS_OBJECT, methods);
}

SMSimiNativeClass *SMBaseClassesNativeImpl_getStringClass(SMBaseClassesNativeImpl *self) {
  id<JavaUtilMap> methods = new_JavaUtilHashMap_init();
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"len", 0) withId:new_SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"endsWith", 1) withId:new_SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"format", 1) withId:new_SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"indexOf", 2) withId:new_SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"lastIndexOf", 2) withId:new_SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"removing", 2) withId:new_SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"replacing", 2) withId:new_SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"split", 1) withId:new_SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"startsWith", 1) withId:new_SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"substring", 2) withId:new_SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"lowerCased", 0) withId:new_SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"upperCased", 0) withId:new_SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"trim", 0) withId:new_SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"isAlpha", 0) withId:new_SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"isDigit", 0) withId:new_SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_ITERATE, 0) withId:new_SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_HAS, 1) withId:new_SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_EQUALS, 1) withId:new_SMBaseClassesNativeImpl_49_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_COMPARE_TO, 1) withId:new_SMBaseClassesNativeImpl_50_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"toNumber", 0) withId:new_SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"builder", 0) withId:new_SMBaseClassesNativeImpl_52_init()];
  return new_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(SMConstants_CLASS_STRING, methods);
}

SMSimiNativeClass *SMBaseClassesNativeImpl_getNumberClass(SMBaseClassesNativeImpl *self) {
  id<JavaUtilMap> methods = new_JavaUtilHashMap_init();
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"randomInt", 1) withId:new_SMBaseClassesNativeImpl_53_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_EQUALS, 1) withId:new_SMBaseClassesNativeImpl_54_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_COMPARE_TO, 1) withId:new_SMBaseClassesNativeImpl_55_init()];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_TO_STRING, 0) withId:new_SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitAnd", 1) withId:new_SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitOr", 1) withId:new_SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitXor", 1) withId:new_SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitInv", 0) withId:new_SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitShl", 1) withId:new_SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitShr", 1) withId:new_SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(self)];
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"bitUshr", 1) withId:new_SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(self)];
  return new_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(SMConstants_CLASS_NUMBER, methods);
}

SMSimiNativeClass *SMBaseClassesNativeImpl_getExceptionClass(SMBaseClassesNativeImpl *self) {
  id<JavaUtilMap> methods = new_JavaUtilHashMap_init();
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(SMConstants_RAISE, 0) withId:new_SMBaseClassesNativeImpl_64_init()];
  return new_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(SMConstants_CLASS_EXCEPTION, methods);
}

SMSimiNativeClass *SMBaseClassesNativeImpl_getGlobalsClass(SMBaseClassesNativeImpl *self) {
  id<JavaUtilMap> methods = new_JavaUtilHashMap_init();
  id<JavaUtilMap> binaries = new_JavaUtilHashMap_init();
  (void) [binaries putWithId:@"pow" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$1, instance)];
  (void) [binaries putWithId:@"min" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$2, instance)];
  (void) [binaries putWithId:@"max" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$3, instance)];
  (void) [binaries putWithId:@"atan2" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$4, instance)];
  (void) [binaries putWithId:@"hypot" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$5, instance)];
  for (id<JavaUtilMap_Entry> __strong binary in nil_chk([binaries entrySet])) {
    (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_([((id<JavaUtilMap_Entry>) nil_chk(binary)) getKey], 2) withId:new_SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(self, binary)];
  }
  id<JavaUtilMap> unaries = new_JavaUtilHashMap_init();
  (void) [unaries putWithId:@"abs" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$6, instance)];
  (void) [unaries putWithId:@"acos" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$7, instance)];
  (void) [unaries putWithId:@"asin" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$8, instance)];
  (void) [unaries putWithId:@"atan" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$9, instance)];
  (void) [unaries putWithId:@"cbrt" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$10, instance)];
  (void) [unaries putWithId:@"ceil" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$11, instance)];
  (void) [unaries putWithId:@"cos" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$12, instance)];
  (void) [unaries putWithId:@"cosh" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$13, instance)];
  (void) [unaries putWithId:@"exp" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$14, instance)];
  (void) [unaries putWithId:@"floor" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$15, instance)];
  (void) [unaries putWithId:@"log" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$16, instance)];
  (void) [unaries putWithId:@"log10" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$17, instance)];
  (void) [unaries putWithId:@"log1p" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$18, instance)];
  (void) [unaries putWithId:@"signum" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$19, instance)];
  (void) [unaries putWithId:@"sin" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$20, instance)];
  (void) [unaries putWithId:@"sinh" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$21, instance)];
  (void) [unaries putWithId:@"sqrt" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$22, instance)];
  (void) [unaries putWithId:@"tan" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$23, instance)];
  (void) [unaries putWithId:@"tanh" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$24, instance)];
  (void) [unaries putWithId:@"toDegrees" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$25, instance)];
  (void) [unaries putWithId:@"toRadians" withId:JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$26, instance)];
  for (id<JavaUtilMap_Entry> __strong unary in nil_chk([unaries entrySet])) {
    (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_([((id<JavaUtilMap_Entry>) nil_chk(unary)) getKey], 1) withId:new_SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(self, unary)];
  }
  (void) [methods putWithId:new_SMOverloadableFunction_initWithNSString_withInt_(@"round", 1) withId:new_SMBaseClassesNativeImpl_67_init()];
  return new_SMSimiNativeClass_initWithNSString_withJavaUtilMap_(SMConstants_CLASS_GLOBALS, methods);
}

SMSimiClassImpl *SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(SMBaseClassesNativeImpl *self, id<SMBlockInterpreter> interpreter) {
  return (SMSimiClassImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<SMBlockInterpreter>) nil_chk(interpreter)) getGlobalWithNSString:SMConstants_CLASS_OBJECT])) getValue])) getObject], [SMSimiClassImpl class]);
}

SMSimiValue *SMBaseClassesNativeImpl_sortWithSMBlockInterpreter_withJavaUtilList_withSMSimiCallable_(SMBaseClassesNativeImpl *self, id<SMBlockInterpreter> interpreter, id<JavaUtilList> arguments, id<SMSimiCallable> comparator) {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  SMSimiClassImpl *objectClass = SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(self, interpreter);
  if ([((SMSimiObjectImpl *) nil_chk(self_)) isArray]) {
    id<JavaUtilComparator> nativeComparator;
    if (comparator == nil) {
      nativeComparator = JavaUtilComparator_naturalOrder();
    }
    else {
      nativeComparator = new_SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(comparator, interpreter);
    }
    return new_SMSimiValue_Object_initWithSMSimiObject_([self_ sortedWithJavaUtilComparator:nativeComparator]);
  }
  else {
    id<JavaUtilComparator> nativeComparator;
    if (comparator == nil) {
      nativeComparator = JavaUtilComparator_comparingWithJavaUtilFunctionFunction_(JreLoadStatic(SMBaseClassesNativeImpl_$Lambda$28, instance));
    }
    else {
      nativeComparator = new_SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(comparator, interpreter, objectClass);
    }
    return new_SMSimiValue_Object_initWithSMSimiObject_([self_ sortedWithJavaUtilComparator:nativeComparator]);
  }
}

SMSimiValue *SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(SMBaseClassesNativeImpl *self, id<SMBlockInterpreter> interpreter, id<JavaUtilList> arguments) {
  id<SMSimiProperty> arg0 = [((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0];
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk(arg0)) getValue])) getObject], [SMSimiObjectImpl class]);
  id<SMSimiEnvironment> environment = [((id<SMBlockInterpreter>) nil_chk(interpreter)) getEnvironment];
  id<SMSimiProperty> oldSelf = [((id<SMSimiEnvironment>) nil_chk(environment)) tryGetWithNSString:SMConstants_SELF];
  [environment defineWithNSString:SMConstants_SELF withSMSimiProperty:arg0];
  SMSimiValue *value = [((id<SMSimiProperty>) nil_chk([((SMSimiObjectImpl *) nil_chk(self_)) getWithNSString:SMConstants_PRIVATE withSMSimiEnvironment:environment])) getValue];
  if (oldSelf != nil) {
    [environment defineWithNSString:SMConstants_SELF withSMSimiProperty:oldSelf];
  }
  else {
    [environment defineWithNSString:SMConstants_SELF withSMSimiProperty:nil];
  }
  return value;
}

SMSimiValue *SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionBiFunction_(SMBaseClassesNativeImpl *self, id<JavaUtilList> arguments, id<JavaUtilFunctionBiFunction> op) {
  jdouble a = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asDouble];
  jdouble b = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getNumber])) asDouble];
  return new_SMSimiValue_Number_initWithDouble_([((JavaLangDouble *) nil_chk([((id<JavaUtilFunctionBiFunction>) nil_chk(op)) applyWithId:JavaLangDouble_valueOfWithDouble_(a) withId:JavaLangDouble_valueOfWithDouble_(b)])) doubleValue]);
}

SMSimiValue *SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionFunction_(SMBaseClassesNativeImpl *self, id<JavaUtilList> arguments, id<JavaUtilFunctionFunction> op) {
  jdouble a = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asDouble];
  return new_SMSimiValue_Number_initWithDouble_([((JavaLangDouble *) nil_chk([((id<JavaUtilFunctionFunction>) nil_chk(op)) applyWithId:JavaLangDouble_valueOfWithDouble_(a)])) doubleValue]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SMBaseClassesNativeImpl)

@implementation SMBaseClassesNativeImpl_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Number_initWithLong_([((SMSimiObjectImpl *) nil_chk(self_)) length]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_1 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_1;
}

@end

void SMBaseClassesNativeImpl_1_init(SMBaseClassesNativeImpl_1 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_1 *new_SMBaseClassesNativeImpl_1_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_1, init)
}

SMBaseClassesNativeImpl_1 *create_SMBaseClassesNativeImpl_1_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_1, init)
}

@implementation SMBaseClassesNativeImpl_2

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), true, [((SMSimiObjectImpl *) nil_chk(self_)) keys]));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_2 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_2;
}

@end

void SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_2 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_2 *new_SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_2, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_2 *create_SMBaseClassesNativeImpl_2_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_2, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_3

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  SMSimiClassImpl *clazz = ([self_ isKindOfClass:[SMSimiClassImpl class]]) ? (SMSimiClassImpl *) cast_chk(self_, [SMSimiClassImpl class]) : ((SMSimiObjectImpl *) nil_chk(self_))->clazz_;
  id<JavaUtilMap> tempMap = new_JavaUtilHashMap_init();
  for (id<JavaUtilMap_Entry> __strong method in nil_chk([((id<JavaUtilMap>) nil_chk(clazz->methods_)) entrySet])) {
    SMOverloadableFunction *key = [((id<JavaUtilMap_Entry>) nil_chk(method)) getKey];
    id<JavaUtilList> list = [tempMap computeIfAbsentWithId:((SMOverloadableFunction *) nil_chk(key))->name_ withJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_3_$Lambda$1, instance)];
    [((id<JavaUtilList>) nil_chk(list)) addWithId:new_SMSimiPropertyImpl_initWithSMSimiValue_withJavaUtilList_(new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_([method getValue], nil, self_), ((SMSimiFunction *) nil_chk([method getValue]))->annotations_)];
  }
  JavaUtilLinkedHashMap *map = new_JavaUtilLinkedHashMap_initWithInt_([tempMap size]);
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([tempMap entrySet])) {
    (void) [map putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), true, [entry_ getValue]))];
  }
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromMapWithSMSimiClassImpl_withBoolean_withJavaUtilLinkedHashMap_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), true, map));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_3 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_3;
}

@end

void SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_3 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_3 *new_SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_3, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_3 *create_SMBaseClassesNativeImpl_3_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_3, initWithSMBaseClassesNativeImpl_, outer$)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_3_$Lambda$1)

@implementation SMBaseClassesNativeImpl_3_$Lambda$1

- (id)applyWithId:(NSString *)k {
  return new_JavaUtilArrayList_init();
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_3_$Lambda$1 class]) {
    SMBaseClassesNativeImpl_3_$Lambda$1_instance = new_SMBaseClassesNativeImpl_3_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_3_$Lambda$1)
  }
}

@end

void SMBaseClassesNativeImpl_3_$Lambda$1_init(SMBaseClassesNativeImpl_3_$Lambda$1 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_3_$Lambda$1 *new_SMBaseClassesNativeImpl_3_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_3_$Lambda$1, init)
}

SMBaseClassesNativeImpl_3_$Lambda$1 *create_SMBaseClassesNativeImpl_3_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_3_$Lambda$1, init)
}

@implementation SMBaseClassesNativeImpl_4

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), true, [((SMSimiObjectImpl *) nil_chk(self_)) values]));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_4 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_4;
}

@end

void SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_4 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_4 *new_SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_4, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_4 *create_SMBaseClassesNativeImpl_4_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_4, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_5

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Object_initWithSMSimiObject_([((SMSimiObjectImpl *) nil_chk(self_)) enumerateWithSMSimiClassImpl:SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter)]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_5 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_5;
}

@end

void SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_5 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_5 *new_SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_5, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_5 *create_SMBaseClassesNativeImpl_5_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_5, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_6

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Object_initWithSMSimiObject_([((SMSimiObjectImpl *) nil_chk(self_)) zipWithSMSimiClassImpl:SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter)]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_6 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_6;
}

@end

void SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_6 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_6 *new_SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_6, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_6 *create_SMBaseClassesNativeImpl_6_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_6, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  [((SMSimiObjectImpl *) nil_chk(self_)) appendWithSMSimiProperty:[arguments getWithInt:1]];
  return [arguments getWithInt:0];
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_7 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_7;
}

@end

void SMBaseClassesNativeImpl_7_init(SMBaseClassesNativeImpl_7 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_7 *new_SMBaseClassesNativeImpl_7_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_7, init)
}

SMBaseClassesNativeImpl_7 *create_SMBaseClassesNativeImpl_7_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_7, init)
}

@implementation SMBaseClassesNativeImpl_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  SMSimiObjectImpl *obj = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue])) getObject], [SMSimiObjectImpl class]);
  [((SMSimiObjectImpl *) nil_chk(self_)) addAllWithSMSimiObjectImpl:obj];
  return [arguments getWithInt:0];
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_8 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_8;
}

@end

void SMBaseClassesNativeImpl_8_init(SMBaseClassesNativeImpl_8 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_8 *new_SMBaseClassesNativeImpl_8_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_8, init)
}

SMBaseClassesNativeImpl_8 *create_SMBaseClassesNativeImpl_8_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_8, init)
}

@implementation SMBaseClassesNativeImpl_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  [((SMSimiObjectImpl *) nil_chk(self_)) clearWithSMEnvironment:(SMEnvironment *) cast_chk([((id<SMBlockInterpreter>) nil_chk(interpreter)) getEnvironment], [SMEnvironment class])];
  return nil;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_9 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_9;
}

@end

void SMBaseClassesNativeImpl_9_init(SMBaseClassesNativeImpl_9 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_9 *new_SMBaseClassesNativeImpl_9_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_9, init)
}

SMBaseClassesNativeImpl_9 *create_SMBaseClassesNativeImpl_9_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_9, init)
}

@implementation SMBaseClassesNativeImpl_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  SMSimiValue *value = [((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue];
  return [((SMSimiObjectImpl *) nil_chk(self_)) indexOfWithSMSimiValue:value];
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_10 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_10;
}

@end

void SMBaseClassesNativeImpl_10_init(SMBaseClassesNativeImpl_10 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_10 *new_SMBaseClassesNativeImpl_10_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_10, init)
}

SMBaseClassesNativeImpl_10 *create_SMBaseClassesNativeImpl_10_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_10, init)
}

@implementation SMBaseClassesNativeImpl_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Object_initWithSMSimiObject_([((SMSimiObjectImpl *) nil_chk(self_)) reversed]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_11 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_11;
}

@end

void SMBaseClassesNativeImpl_11_init(SMBaseClassesNativeImpl_11 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_11 *new_SMBaseClassesNativeImpl_11_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_11, init)
}

SMBaseClassesNativeImpl_11 *create_SMBaseClassesNativeImpl_11_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_11, init)
}

@implementation SMBaseClassesNativeImpl_12

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return SMBaseClassesNativeImpl_sortWithSMBlockInterpreter_withJavaUtilList_withSMSimiCallable_(this$0_, interpreter, arguments, nil);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_12 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_12;
}

@end

void SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_12 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_12 *new_SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_12, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_12 *create_SMBaseClassesNativeImpl_12_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_12, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_13

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  id<SMSimiCallable> comparator = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getCallable];
  return SMBaseClassesNativeImpl_sortWithSMBlockInterpreter_withJavaUtilList_withSMSimiCallable_(this$0_, interpreter, arguments, comparator);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_13 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_13;
}

@end

void SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_13 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_13 *new_SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_13, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_13 *create_SMBaseClassesNativeImpl_13_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_13, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_14

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  if ([((SMSimiObjectImpl *) nil_chk(self_)) isArray]) {
    return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), self_->immutable_, new_JavaUtilArrayList_initWithJavaUtilCollection_([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((JavaUtilArrayList *) nil_chk([self_ values])) stream])) distinct])) collectWithJavaUtilStreamCollector:JavaUtilStreamCollectors_toList()])));
  }
  return [arguments getWithInt:0];
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_14 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_14;
}

@end

void SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_14 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_14 *new_SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_14, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_14 *create_SMBaseClassesNativeImpl_14_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_14, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Object_initWithSMSimiObject_([((SMSimiObjectImpl *) nil_chk(self_)) cloneWithBoolean:false]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_15 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_15;
}

@end

void SMBaseClassesNativeImpl_15_init(SMBaseClassesNativeImpl_15 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_15 *new_SMBaseClassesNativeImpl_15_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_15, init)
}

SMBaseClassesNativeImpl_15 *create_SMBaseClassesNativeImpl_15_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_15, init)
}

@implementation SMBaseClassesNativeImpl_16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  jboolean mutable_ = SMInterpreter_isTruthyWithSMSimiProperty_([((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue]);
  return new_SMSimiValue_Object_initWithSMSimiObject_([((SMSimiObjectImpl *) nil_chk(self_)) cloneWithBoolean:mutable_]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_16 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_16;
}

@end

void SMBaseClassesNativeImpl_16_init(SMBaseClassesNativeImpl_16 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_16 *new_SMBaseClassesNativeImpl_16_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_16, init)
}

SMBaseClassesNativeImpl_16 *create_SMBaseClassesNativeImpl_16_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_16, init)
}

@implementation SMBaseClassesNativeImpl_17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithBoolean_(!((SMSimiObjectImpl *) nil_chk(((SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]))))->immutable_);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_17 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_17;
}

@end

void SMBaseClassesNativeImpl_17_init(SMBaseClassesNativeImpl_17 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_17 *new_SMBaseClassesNativeImpl_17_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_17, init)
}

SMBaseClassesNativeImpl_17 *create_SMBaseClassesNativeImpl_17_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_17, init)
}

@implementation SMBaseClassesNativeImpl_18

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithBoolean_([((SMSimiObjectImpl *) nil_chk(((SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class])))) isArray]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_18 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_18;
}

@end

void SMBaseClassesNativeImpl_18_init(SMBaseClassesNativeImpl_18 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_18 *new_SMBaseClassesNativeImpl_18_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_18, init)
}

SMBaseClassesNativeImpl_18 *create_SMBaseClassesNativeImpl_18_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_18, init)
}

@implementation SMBaseClassesNativeImpl_19

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  id<SMSimiObject> self_ = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject];
  id<SMSimiClass> clazz = [((id<SMSimiObject>) nil_chk(self_)) getSimiClass];
  if (clazz == nil) {
    return nil;
  }
  return new_SMSimiValue_Object_initWithSMSimiObject_(clazz);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_19 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_19;
}

@end

void SMBaseClassesNativeImpl_19_init(SMBaseClassesNativeImpl_19 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_19 *new_SMBaseClassesNativeImpl_19_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_19, init)
}

SMBaseClassesNativeImpl_19 *create_SMBaseClassesNativeImpl_19_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_19, init)
}

@implementation SMBaseClassesNativeImpl_20

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  jboolean isArray = [((SMSimiObjectImpl *) nil_chk(self_)) isArray];
  id<JavaUtilIterator> iterator = [self_ iterate];
  JavaUtilLinkedHashMap *fields = new_JavaUtilLinkedHashMap_init();
  (void) [fields putWithId:SMConstants_NEXT withId:new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(new_SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(iterator), nil, nil)];
  return new_SMSimiValue_Object_initWithSMSimiObject_(new_SMSimiNativeObject_initWithJavaUtilLinkedHashMap_(fields));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_20 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_20;
}

@end

void SMBaseClassesNativeImpl_20_init(SMBaseClassesNativeImpl_20 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_20 *new_SMBaseClassesNativeImpl_20_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_20, init)
}

SMBaseClassesNativeImpl_20 *create_SMBaseClassesNativeImpl_20_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_20, init)
}

@implementation SMBaseClassesNativeImpl_20_1

- (instancetype __nonnull)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0 {
  SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(self, capture$0);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  if ([((id<JavaUtilIterator>) nil_chk(val$iterator_)) hasNext]) {
    return (id<SMSimiProperty>) cast_check([val$iterator_ next], SMSimiProperty_class_());
  }
  return nil;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilIterator:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$iterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "Ljava/util/Iterator<*>;", "LSMBaseClassesNativeImpl_20;", "callWithSMBlockInterpreter:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_20_1 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, -1, -1 };
  return &_SMBaseClassesNativeImpl_20_1;
}

@end

void SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(SMBaseClassesNativeImpl_20_1 *self, id<JavaUtilIterator> capture$0) {
  self->val$iterator_ = capture$0;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_20_1 *new_SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(id<JavaUtilIterator> capture$0) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_20_1, initWithJavaUtilIterator_, capture$0)
}

SMBaseClassesNativeImpl_20_1 *create_SMBaseClassesNativeImpl_20_1_initWithJavaUtilIterator_(id<JavaUtilIterator> capture$0) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_20_1, initWithJavaUtilIterator_, capture$0)
}

@implementation SMBaseClassesNativeImpl_21

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Number_initWithBoolean_([((SMSimiObjectImpl *) nil_chk(self_)) containsWithSMSimiValue:[((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue] withSMToken:SMToken_nativeCallWithNSString_(SMConstants_HAS)]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_21 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_21;
}

@end

void SMBaseClassesNativeImpl_21_init(SMBaseClassesNativeImpl_21 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_21 *new_SMBaseClassesNativeImpl_21_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_21, init)
}

SMBaseClassesNativeImpl_21 *create_SMBaseClassesNativeImpl_21_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_21, init)
}

@implementation SMBaseClassesNativeImpl_22

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_22_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithBoolean_([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) isEqual:[arguments getWithInt:1]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_22 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_22;
}

@end

void SMBaseClassesNativeImpl_22_init(SMBaseClassesNativeImpl_22 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_22 *new_SMBaseClassesNativeImpl_22_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_22, init)
}

SMBaseClassesNativeImpl_22 *create_SMBaseClassesNativeImpl_22_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_22, init)
}

@implementation SMBaseClassesNativeImpl_23

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithLong_([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) compareToWithId:[((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_23 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_23;
}

@end

void SMBaseClassesNativeImpl_23_init(SMBaseClassesNativeImpl_23 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_23 *new_SMBaseClassesNativeImpl_23_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_23, init)
}

SMBaseClassesNativeImpl_23 *create_SMBaseClassesNativeImpl_23_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_23, init)
}

@implementation SMBaseClassesNativeImpl_24

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_String_initWithNSString_([((id<SMSimiObject>) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject])) description]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_24 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_24;
}

@end

void SMBaseClassesNativeImpl_24_init(SMBaseClassesNativeImpl_24 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_24 *new_SMBaseClassesNativeImpl_24_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_24, init)
}

SMBaseClassesNativeImpl_24 *create_SMBaseClassesNativeImpl_24_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_24, init)
}

@implementation SMBaseClassesNativeImpl_25

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  SMSimiObjectImpl *other = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue])) getObject], [SMSimiObjectImpl class]);
  return new_SMSimiValue_Number_initWithBoolean_([((SMSimiObjectImpl *) nil_chk(self_)) matchesWithSMSimiObjectImpl:other withJavaUtilList:nil]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_25 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_25;
}

@end

void SMBaseClassesNativeImpl_25_init(SMBaseClassesNativeImpl_25 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_25 *new_SMBaseClassesNativeImpl_25_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_25, init)
}

SMBaseClassesNativeImpl_25 *create_SMBaseClassesNativeImpl_25_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_25, init)
}

@implementation SMBaseClassesNativeImpl_26

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  SMSimiObjectImpl *other = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue])) getObject], [SMSimiObjectImpl class]);
  id<JavaUtilList> fieldsToMatch = [((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((JavaUtilArrayList *) nil_chk([((SMSimiObjectImpl *) nil_chk(((SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getObject], [SMSimiObjectImpl class])))) values])) stream])) mapWithJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_26_$Lambda$1, instance)])) collectWithJavaUtilStreamCollector:JavaUtilStreamCollectors_toList()];
  return new_SMSimiValue_Number_initWithBoolean_([((SMSimiObjectImpl *) nil_chk(self_)) matchesWithSMSimiObjectImpl:other withJavaUtilList:fieldsToMatch]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_26 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_26;
}

@end

void SMBaseClassesNativeImpl_26_init(SMBaseClassesNativeImpl_26 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_26 *new_SMBaseClassesNativeImpl_26_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_26, init)
}

SMBaseClassesNativeImpl_26 *create_SMBaseClassesNativeImpl_26_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_26, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_26_$Lambda$1)

@implementation SMBaseClassesNativeImpl_26_$Lambda$1

- (id)applyWithId:(SMSimiValue *)a {
  return [((SMSimiValue *) nil_chk(a)) getString];
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_26_$Lambda$1 class]) {
    SMBaseClassesNativeImpl_26_$Lambda$1_instance = new_SMBaseClassesNativeImpl_26_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_26_$Lambda$1)
  }
}

@end

void SMBaseClassesNativeImpl_26_$Lambda$1_init(SMBaseClassesNativeImpl_26_$Lambda$1 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_26_$Lambda$1 *new_SMBaseClassesNativeImpl_26_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_26_$Lambda$1, init)
}

SMBaseClassesNativeImpl_26_$Lambda$1 *create_SMBaseClassesNativeImpl_26_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_26_$Lambda$1, init)
}

@implementation SMBaseClassesNativeImpl_27

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_27_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiClassImpl *clazz = (SMSimiClassImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiClassImpl class]);
  id<JavaUtilSet> constructors = [((SMSimiClassImpl *) nil_chk(clazz)) getConstructors];
  id<JavaUtilSet> params = [((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilSet>) nil_chk(constructors)) stream])) mapWithJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_27_$Lambda$1, instance)])) flatMapWithJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_27_$Lambda$2, instance)])) mapWithJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_27_$Lambda$3, instance)])) collectWithJavaUtilStreamCollector:JavaUtilStreamCollectors_toSet()];
  JavaUtilLinkedHashMap *fields = new_JavaUtilLinkedHashMap_init();
  SMSimiNativeObject *object = new_SMSimiNativeObject_initWithJavaUtilLinkedHashMap_(fields);
  SMSimiValue *objectValue = new_SMSimiValue_Object_initWithSMSimiObject_(object);
  id<JavaUtilList> initArgs = new_JavaUtilArrayList_init();
  for (NSString * __strong param in nil_chk(params)) {
    (void) [fields putWithId:param withId:new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(new_SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(fields, param, initArgs, objectValue), param, object)];
  }
  (void) [fields putWithId:@"build" withId:new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(new_SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(params, constructors, fields, clazz, initArgs), @"build", object)];
  return objectValue;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_27 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_27;
}

@end

void SMBaseClassesNativeImpl_27_init(SMBaseClassesNativeImpl_27 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27 *new_SMBaseClassesNativeImpl_27_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27, init)
}

SMBaseClassesNativeImpl_27 *create_SMBaseClassesNativeImpl_27_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27, init)
}

@implementation SMBaseClassesNativeImpl_27_1

- (instancetype __nonnull)initWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)capture$0
                                           withNSString:(NSString *)capture$1
                                       withJavaUtilList:(id<JavaUtilList>)capture$2
                                        withSMSimiValue:(SMSimiValue *)capture$3 {
  SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(self, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  id<SMSimiProperty> arg = [((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0];
  (void) [((JavaUtilLinkedHashMap *) nil_chk(val$fields_)) putWithId:JreStrcat("$$", SMConstants_PRIVATE, val$param_) withId:arg];
  [((id<JavaUtilList>) nil_chk(val$initArgs_)) addWithId:arg];
  return val$objectValue_;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilLinkedHashMap:withNSString:withJavaUtilList:withSMSimiValue:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$fields_", "LJavaUtilLinkedHashMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$param_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$initArgs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$objectValue_", "LSMSimiValue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "Ljava/util/LinkedHashMap<Ljava/lang/String;LSimiProperty;>;", "Ljava/util/List<LSimiProperty;>;", "LSMBaseClassesNativeImpl_27;", "callWithSMBlockInterpreter:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_27_1 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 4, 5, -1, 6, -1, -1 };
  return &_SMBaseClassesNativeImpl_27_1;
}

@end

void SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(SMBaseClassesNativeImpl_27_1 *self, JavaUtilLinkedHashMap *capture$0, NSString *capture$1, id<JavaUtilList> capture$2, SMSimiValue *capture$3) {
  self->val$fields_ = capture$0;
  self->val$param_ = capture$1;
  self->val$initArgs_ = capture$2;
  self->val$objectValue_ = capture$3;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_1 *new_SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(JavaUtilLinkedHashMap *capture$0, NSString *capture$1, id<JavaUtilList> capture$2, SMSimiValue *capture$3) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_1, initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_, capture$0, capture$1, capture$2, capture$3)
}

SMBaseClassesNativeImpl_27_1 *create_SMBaseClassesNativeImpl_27_1_initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_(JavaUtilLinkedHashMap *capture$0, NSString *capture$1, id<JavaUtilList> capture$2, SMSimiValue *capture$3) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_1, initWithJavaUtilLinkedHashMap_withNSString_withJavaUtilList_withSMSimiValue_, capture$0, capture$1, capture$2, capture$3)
}

@implementation SMBaseClassesNativeImpl_27_2

- (instancetype __nonnull)initWithJavaUtilSet:(id<JavaUtilSet>)capture$0
                              withJavaUtilSet:(id<JavaUtilSet>)capture$1
                    withJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)capture$2
                          withSMSimiClassImpl:(SMSimiClassImpl *)capture$3
                             withJavaUtilList:(id<JavaUtilList>)capture$4 {
  SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(self, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jint size = [((id<JavaUtilSet>) nil_chk(val$params_)) size];
  JavaUtilOptional *closest = [((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilSet>) nil_chk(val$constructors_)) stream])) minWithJavaUtilComparator:JavaUtilComparator_comparingIntWithJavaUtilFunctionToIntFunction_(new_SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(size))];
  if ([((JavaUtilOptional *) nil_chk(closest)) isPresent]) {
    id<JavaUtilList> closestParams = [((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilList>) nil_chk(((SMExpr_Block *) nil_chk(((SMStmt_Function *) nil_chk(((SMSimiFunction *) nil_chk([closest get]))->declaration_))->block_))->params_)) stream])) mapWithJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_27_2_$Lambda$2, instance)])) collectWithJavaUtilStreamCollector:JavaUtilStreamCollectors_toList()];
    id<JavaUtilList> args = new_JavaUtilArrayList_init();
    for (NSString * __strong param in nil_chk(closestParams)) {
      [args addWithId:[((id<SMSimiProperty>) nil_chk([((JavaUtilLinkedHashMap *) nil_chk(val$fields_)) getWithId:JreStrcat("$$", SMConstants_PRIVATE, param)])) getValue]];
    }
    return [((SMSimiClassImpl *) nil_chk(val$clazz_)) init__WithSMBlockInterpreter:interpreter withJavaUtilList:args];
  }
  return [((SMSimiClassImpl *) nil_chk(val$clazz_)) init__WithSMBlockInterpreter:interpreter withJavaUtilList:val$initArgs_];
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilSet:withJavaUtilSet:withJavaUtilLinkedHashMap:withSMSimiClassImpl:withJavaUtilList:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$params_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$constructors_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$fields_", "LJavaUtilLinkedHashMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$clazz_", "LSMSimiClassImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$initArgs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "Ljava/util/Set<Ljava/lang/String;>;", "Ljava/util/Set<LSimiFunction;>;", "Ljava/util/LinkedHashMap<Ljava/lang/String;LSimiProperty;>;", "Ljava/util/List<LSimiProperty;>;", "LSMBaseClassesNativeImpl_27;", "callWithSMBlockInterpreter:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_27_2 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 5, 7, -1, 8, -1, -1 };
  return &_SMBaseClassesNativeImpl_27_2;
}

@end

void SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(SMBaseClassesNativeImpl_27_2 *self, id<JavaUtilSet> capture$0, id<JavaUtilSet> capture$1, JavaUtilLinkedHashMap *capture$2, SMSimiClassImpl *capture$3, id<JavaUtilList> capture$4) {
  self->val$params_ = capture$0;
  self->val$constructors_ = capture$1;
  self->val$fields_ = capture$2;
  self->val$clazz_ = capture$3;
  self->val$initArgs_ = capture$4;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_2 *new_SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(id<JavaUtilSet> capture$0, id<JavaUtilSet> capture$1, JavaUtilLinkedHashMap *capture$2, SMSimiClassImpl *capture$3, id<JavaUtilList> capture$4) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_2, initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_, capture$0, capture$1, capture$2, capture$3, capture$4)
}

SMBaseClassesNativeImpl_27_2 *create_SMBaseClassesNativeImpl_27_2_initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_(id<JavaUtilSet> capture$0, id<JavaUtilSet> capture$1, JavaUtilLinkedHashMap *capture$2, SMSimiClassImpl *capture$3, id<JavaUtilList> capture$4) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_2, initWithJavaUtilSet_withJavaUtilSet_withJavaUtilLinkedHashMap_withSMSimiClassImpl_withJavaUtilList_, capture$0, capture$1, capture$2, capture$3, capture$4)
}

@implementation SMBaseClassesNativeImpl_27_2_$Lambda$1

- (jint)applyAsIntWithId:(SMSimiFunction *)f {
  return JavaLangMath_absWithInt_([((SMSimiFunction *) nil_chk(f)) arity] - val$size_);
}

@end

void SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(SMBaseClassesNativeImpl_27_2_$Lambda$1 *self, jint capture$0) {
  self->val$size_ = capture$0;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_2_$Lambda$1 *new_SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(jint capture$0) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_2_$Lambda$1, initWithInt_, capture$0)
}

SMBaseClassesNativeImpl_27_2_$Lambda$1 *create_SMBaseClassesNativeImpl_27_2_$Lambda$1_initWithInt_(jint capture$0) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_2_$Lambda$1, initWithInt_, capture$0)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_27_2_$Lambda$2)

@implementation SMBaseClassesNativeImpl_27_2_$Lambda$2

- (id)applyWithId:(SMExpr *)a {
  return SMBlockImpl_getParamLexemeWithSMExpr_(a);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_27_2_$Lambda$2 class]) {
    SMBaseClassesNativeImpl_27_2_$Lambda$2_instance = new_SMBaseClassesNativeImpl_27_2_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_27_2_$Lambda$2)
  }
}

@end

void SMBaseClassesNativeImpl_27_2_$Lambda$2_init(SMBaseClassesNativeImpl_27_2_$Lambda$2 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_2_$Lambda$2 *new_SMBaseClassesNativeImpl_27_2_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_2_$Lambda$2, init)
}

SMBaseClassesNativeImpl_27_2_$Lambda$2 *create_SMBaseClassesNativeImpl_27_2_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_2_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_27_$Lambda$1)

@implementation SMBaseClassesNativeImpl_27_$Lambda$1

- (id)applyWithId:(SMSimiFunction *)f {
  return ((SMExpr_Block *) nil_chk(((SMStmt_Function *) nil_chk(((SMSimiFunction *) nil_chk(f))->declaration_))->block_))->params_;
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_27_$Lambda$1 class]) {
    SMBaseClassesNativeImpl_27_$Lambda$1_instance = new_SMBaseClassesNativeImpl_27_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_27_$Lambda$1)
  }
}

@end

void SMBaseClassesNativeImpl_27_$Lambda$1_init(SMBaseClassesNativeImpl_27_$Lambda$1 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_$Lambda$1 *new_SMBaseClassesNativeImpl_27_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_$Lambda$1, init)
}

SMBaseClassesNativeImpl_27_$Lambda$1 *create_SMBaseClassesNativeImpl_27_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_27_$Lambda$2)

@implementation SMBaseClassesNativeImpl_27_$Lambda$2

- (id)applyWithId:(id<JavaUtilList>)a {
  return [((id<JavaUtilList>) nil_chk(a)) stream];
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_27_$Lambda$2 class]) {
    SMBaseClassesNativeImpl_27_$Lambda$2_instance = new_SMBaseClassesNativeImpl_27_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_27_$Lambda$2)
  }
}

@end

void SMBaseClassesNativeImpl_27_$Lambda$2_init(SMBaseClassesNativeImpl_27_$Lambda$2 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_$Lambda$2 *new_SMBaseClassesNativeImpl_27_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_$Lambda$2, init)
}

SMBaseClassesNativeImpl_27_$Lambda$2 *create_SMBaseClassesNativeImpl_27_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_27_$Lambda$3)

@implementation SMBaseClassesNativeImpl_27_$Lambda$3

- (id)applyWithId:(SMExpr *)a {
  return SMBlockImpl_getParamLexemeWithSMExpr_(a);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_27_$Lambda$3 class]) {
    SMBaseClassesNativeImpl_27_$Lambda$3_instance = new_SMBaseClassesNativeImpl_27_$Lambda$3_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_27_$Lambda$3)
  }
}

@end

void SMBaseClassesNativeImpl_27_$Lambda$3_init(SMBaseClassesNativeImpl_27_$Lambda$3 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_27_$Lambda$3 *new_SMBaseClassesNativeImpl_27_$Lambda$3_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_27_$Lambda$3, init)
}

SMBaseClassesNativeImpl_27_$Lambda$3 *create_SMBaseClassesNativeImpl_27_$Lambda$3_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_27_$Lambda$3, init)
}

@implementation SMBaseClassesNativeImpl_28

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), false, new_JavaUtilArrayList_init()));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_28 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_28;
}

@end

void SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_28 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_28 *new_SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_28, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_28 *create_SMBaseClassesNativeImpl_28_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_28, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_29

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jint capacity = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong]);
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), false, new_JavaUtilArrayList_initWithInt_(capacity)));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_29 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_29;
}

@end

void SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_29 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_29 *new_SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_29, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_29 *create_SMBaseClassesNativeImpl_29_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_29, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_30

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jint capacity = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong]);
  SMSimiValue *fillValue = [((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue];
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), false, new_JavaUtilArrayList_initWithJavaUtilCollection_(JavaUtilCollections_nCopiesWithInt_withId_(capacity, fillValue))));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_30 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_30;
}

@end

void SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_30 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_30 *new_SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_30, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_30 *create_SMBaseClassesNativeImpl_30_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_30, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_31

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  jint start = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue])) getNumber])) asLong]);
  jint stop = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getNumber])) asLong]);
  if ([((SMSimiObjectImpl *) nil_chk(self_)) isArray]) {
    return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(SMBaseClassesNativeImpl_getObjectClassWithSMBlockInterpreter_(this$0_, interpreter), true, new_JavaUtilArrayList_initWithJavaUtilCollection_([((JavaUtilArrayList *) nil_chk(((SMSimiObjectImpl_Array *) nil_chk([self_ asArray]))->fields_)) subListWithInt:start withInt:stop - 1])));
  }
  return nil;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getObjectClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_31 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_31;
}

@end

void SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_31 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_31 *new_SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_31, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_31 *create_SMBaseClassesNativeImpl_31_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_31, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_32

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  return new_SMSimiValue_Number_initWithLong_([((NSString *) nil_chk(value)) java_length]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_32 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_32;
}

@end

void SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_32 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_32 *new_SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_32, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_32 *create_SMBaseClassesNativeImpl_32_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_32, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_33

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *suffix = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  return new_SMSimiValue_Number_initWithBoolean_([((NSString *) nil_chk(value)) java_hasSuffix:suffix]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_33 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_33;
}

@end

void SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_33 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_33 *new_SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_33, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_33 *create_SMBaseClassesNativeImpl_33_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_33, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_34

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  SMSimiObjectImpl *argsObject = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getObject], [SMSimiObjectImpl class]);
  IOSObjectArray *args = [IOSObjectArray newArrayWithLength:[((SMSimiObjectImpl *) nil_chk(argsObject)) length] type:NSObject_class_()];
  jint i = 0;
  for (SMSimiValue * __strong simiValue in nil_chk([argsObject values])) {
    if ([simiValue isKindOfClass:[SMSimiValue_Number class]]) {
      (void) IOSObjectArray_Set(args, i, JavaLangDouble_valueOfWithDouble_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(simiValue)) getNumber])) asDouble]));
    }
    else {
      (void) IOSObjectArray_Set(args, 1, [((SMSimiValue *) nil_chk(simiValue)) description]);
    }
    i++;
  }
  return new_SMSimiValue_String_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(value, args));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_34 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_34;
}

@end

void SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_34 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_34 *new_SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_34, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_34 *create_SMBaseClassesNativeImpl_34_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_34, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_35

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *str = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  jint index = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getNumber])) asLong]);
  jint i = [((NSString *) nil_chk(value)) java_indexOfString:str fromIndex:index];
  if (i == -1) {
    return nil;
  }
  return new_SMSimiValue_Number_initWithLong_(i);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_35 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_35;
}

@end

void SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_35 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_35 *new_SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_35, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_35 *create_SMBaseClassesNativeImpl_35_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_35, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_36

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *str = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  jint index = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getNumber])) asLong]);
  jint i = [((NSString *) nil_chk(value)) java_lastIndexOfString:str fromIndex:index];
  if (i == -1) {
    return nil;
  }
  return new_SMSimiValue_Number_initWithLong_(i);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_36 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_36;
}

@end

void SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_36 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_36 *new_SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_36, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_36 *create_SMBaseClassesNativeImpl_36_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_36, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_37

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  jint start = (jint) [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  jint stop = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getNumber])) asLong]);
  return new_SMSimiValue_String_initWithNSString_([((NSString *) nil_chk([((NSString *) nil_chk(value)) java_substring:0 endIndex:start])) java_concat:[value java_substring:stop endIndex:[value java_length]]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_37 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_37;
}

@end

void SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_37 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_37 *new_SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_37, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_37 *create_SMBaseClassesNativeImpl_37_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_37, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_38

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *old = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  NSString *newStr = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getString];
  return new_SMSimiValue_String_initWithNSString_([((NSString *) nil_chk(value)) java_replace:old withSequence:newStr]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_38 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_38;
}

@end

void SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_38 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_38 *new_SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_38, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_38 *create_SMBaseClassesNativeImpl_38_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_38, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_39

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiClassImpl *objectClass = (SMSimiClassImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<SMBlockInterpreter>) nil_chk(interpreter)) getGlobalWithNSString:SMConstants_CLASS_OBJECT])) getValue])) getObject], [SMSimiClassImpl class]);
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *separator = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  JavaUtilArrayList *split = [((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk(JavaUtilArrays_streamWithNSObjectArray_([((NSString *) nil_chk(value)) java_split:JavaUtilRegexPattern_quoteWithNSString_(separator)]))) mapWithJavaUtilFunctionFunction:JreLoadStatic(SMBaseClassesNativeImpl_39_$Lambda$1, instance)])) collectWithJavaUtilStreamCollector:JavaUtilStreamCollectors_toCollectionWithJavaUtilFunctionSupplier_(JreLoadStatic(SMBaseClassesNativeImpl_39_$Lambda$2, instance))];
  return new_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_fromArrayWithSMSimiClassImpl_withBoolean_withJavaUtilArrayList_(objectClass, true, split));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_39 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_39;
}

@end

void SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_39 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_39 *new_SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_39, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_39 *create_SMBaseClassesNativeImpl_39_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_39, initWithSMBaseClassesNativeImpl_, outer$)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_39_$Lambda$1)

@implementation SMBaseClassesNativeImpl_39_$Lambda$1

- (id)applyWithId:(NSString *)a {
  return new_SMSimiValue_String_initWithNSString_(a);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_39_$Lambda$1 class]) {
    SMBaseClassesNativeImpl_39_$Lambda$1_instance = new_SMBaseClassesNativeImpl_39_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_39_$Lambda$1)
  }
}

@end

void SMBaseClassesNativeImpl_39_$Lambda$1_init(SMBaseClassesNativeImpl_39_$Lambda$1 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_39_$Lambda$1 *new_SMBaseClassesNativeImpl_39_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_39_$Lambda$1, init)
}

SMBaseClassesNativeImpl_39_$Lambda$1 *create_SMBaseClassesNativeImpl_39_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_39_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_39_$Lambda$2)

@implementation SMBaseClassesNativeImpl_39_$Lambda$2

- (id)get {
  return new_JavaUtilArrayList_init();
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_39_$Lambda$2 class]) {
    SMBaseClassesNativeImpl_39_$Lambda$2_instance = new_SMBaseClassesNativeImpl_39_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_39_$Lambda$2)
  }
}

@end

void SMBaseClassesNativeImpl_39_$Lambda$2_init(SMBaseClassesNativeImpl_39_$Lambda$2 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_39_$Lambda$2 *new_SMBaseClassesNativeImpl_39_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_39_$Lambda$2, init)
}

SMBaseClassesNativeImpl_39_$Lambda$2 *create_SMBaseClassesNativeImpl_39_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_39_$Lambda$2, init)
}

@implementation SMBaseClassesNativeImpl_40

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *prefix = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  return new_SMSimiValue_Number_initWithBoolean_([((NSString *) nil_chk(value)) java_hasPrefix:prefix]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_40 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_40;
}

@end

void SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_40 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_40 *new_SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_40, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_40 *create_SMBaseClassesNativeImpl_40_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_40, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_41

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  jint start = (jint) [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  jint stop = (jint) [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([arguments getWithInt:2])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_String_initWithNSString_([((NSString *) nil_chk(value)) java_substring:start endIndex:stop]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_41 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_41;
}

@end

void SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_41 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_41 *new_SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_41, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_41 *create_SMBaseClassesNativeImpl_41_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_41, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_42

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  return new_SMSimiValue_String_initWithNSString_([((NSString *) nil_chk(value)) lowercaseString]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_42 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_42;
}

@end

void SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_42 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_42 *new_SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_42, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_42 *create_SMBaseClassesNativeImpl_42_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_42, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_43

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  return new_SMSimiValue_String_initWithNSString_([((NSString *) nil_chk(value)) uppercaseString]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_43 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_43;
}

@end

void SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_43 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_43 *new_SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_43, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_43 *create_SMBaseClassesNativeImpl_43_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_43, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_44

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  return new_SMSimiValue_String_initWithNSString_([((NSString *) nil_chk(value)) java_trim]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_44 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_44;
}

@end

void SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_44 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_44 *new_SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_44, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_44 *create_SMBaseClassesNativeImpl_44_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_44, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_45

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  {
    IOSCharArray *a__ = [((NSString *) nil_chk(value)) java_toCharArray];
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar c = *b__++;
      if (!SMBaseClassesNativeImpl_45_isAlphaWithChar_(self, c)) {
        return new_SMSimiValue_Number_initWithBoolean_(false);
      }
    }
  }
  return new_SMSimiValue_Number_initWithBoolean_(true);
}

- (jboolean)isAlphaWithChar:(jchar)c {
  return SMBaseClassesNativeImpl_45_isAlphaWithChar_(self, c);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x2, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  methods[3].selector = @selector(isAlphaWithChar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "isAlpha", "C", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_45 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 4, 1, 5, -1, 6, -1, -1 };
  return &_SMBaseClassesNativeImpl_45;
}

@end

void SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_45 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_45 *new_SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_45, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_45 *create_SMBaseClassesNativeImpl_45_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_45, initWithSMBaseClassesNativeImpl_, outer$)
}

jboolean SMBaseClassesNativeImpl_45_isAlphaWithChar_(SMBaseClassesNativeImpl_45 *self, jchar c) {
  return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
}

@implementation SMBaseClassesNativeImpl_46

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  {
    IOSCharArray *a__ = [((NSString *) nil_chk(value)) java_toCharArray];
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar c = *b__++;
      if (!SMBaseClassesNativeImpl_46_isDigitWithChar_(self, c)) {
        return new_SMSimiValue_Number_initWithBoolean_(false);
      }
    }
  }
  return new_SMSimiValue_Number_initWithBoolean_(true);
}

- (jboolean)isDigitWithChar:(jchar)c {
  return SMBaseClassesNativeImpl_46_isDigitWithChar_(self, c);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x2, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  methods[3].selector = @selector(isDigitWithChar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "isDigit", "C", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_46 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 4, 1, 5, -1, 6, -1, -1 };
  return &_SMBaseClassesNativeImpl_46;
}

@end

void SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_46 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_46 *new_SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_46, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_46 *create_SMBaseClassesNativeImpl_46_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_46, initWithSMBaseClassesNativeImpl_, outer$)
}

jboolean SMBaseClassesNativeImpl_46_isDigitWithChar_(SMBaseClassesNativeImpl_46 *self, jchar c) {
  return c >= '0' && c <= '9';
}

@implementation SMBaseClassesNativeImpl_47

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  JavaTextStringCharacterIterator *iterator = new_JavaTextStringCharacterIterator_initWithNSString_(value);
  JavaUtilLinkedHashMap *fields = new_JavaUtilLinkedHashMap_init();
  (void) [fields putWithId:SMConstants_NEXT withId:new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(new_SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(iterator), nil, nil)];
  return new_SMSimiValue_Object_initWithSMSimiObject_(new_SMSimiNativeObject_initWithJavaUtilLinkedHashMap_(fields));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_47 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_47;
}

@end

void SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_47 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_47 *new_SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_47, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_47 *create_SMBaseClassesNativeImpl_47_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_47, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_47_1

- (instancetype __nonnull)initWithJavaTextStringCharacterIterator:(JavaTextStringCharacterIterator *)capture$0 {
  SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(self, capture$0);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jchar next = [((JavaTextStringCharacterIterator *) nil_chk(val$iterator_)) next];
  if (next != JavaTextCharacterIterator_DONE) {
    return new_SMSimiValue_String_initWithNSString_(JreStrcat("C", next));
  }
  return nil;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaTextStringCharacterIterator:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$iterator_", "LJavaTextStringCharacterIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl_47;", "callWithSMBlockInterpreter:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_47_1 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_47_1;
}

@end

void SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(SMBaseClassesNativeImpl_47_1 *self, JavaTextStringCharacterIterator *capture$0) {
  self->val$iterator_ = capture$0;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_47_1 *new_SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(JavaTextStringCharacterIterator *capture$0) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_47_1, initWithJavaTextStringCharacterIterator_, capture$0)
}

SMBaseClassesNativeImpl_47_1 *create_SMBaseClassesNativeImpl_47_1_initWithJavaTextStringCharacterIterator_(JavaTextStringCharacterIterator *capture$0) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_47_1, initWithJavaTextStringCharacterIterator_, capture$0)
}

@implementation SMBaseClassesNativeImpl_48

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *value = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  NSString *str = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getString];
  return new_SMSimiValue_Number_initWithBoolean_([((NSString *) nil_chk(value)) java_contains:str]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_48 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_48;
}

@end

void SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_48 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_48 *new_SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_48, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_48 *create_SMBaseClassesNativeImpl_48_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_48, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_49

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_49_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithBoolean_([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) isEqual:[arguments getWithInt:1]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_49 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_49;
}

@end

void SMBaseClassesNativeImpl_49_init(SMBaseClassesNativeImpl_49 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_49 *new_SMBaseClassesNativeImpl_49_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_49, init)
}

SMBaseClassesNativeImpl_49 *create_SMBaseClassesNativeImpl_49_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_49, init)
}

@implementation SMBaseClassesNativeImpl_50

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_50_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithLong_([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) compareToWithId:[((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_50 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_50;
}

@end

void SMBaseClassesNativeImpl_50_init(SMBaseClassesNativeImpl_50 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_50 *new_SMBaseClassesNativeImpl_50_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_50, init)
}

SMBaseClassesNativeImpl_50 *create_SMBaseClassesNativeImpl_50_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_50, init)
}

@implementation SMBaseClassesNativeImpl_51

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  NSString *string = [((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getString];
  @try {
    jlong number = JavaLangLong_parseLongWithNSString_(string);
    return new_SMSimiValue_Number_initWithLong_(number);
  }
  @catch (JavaLangNumberFormatException *e) {
    @try {
      jdouble number = JavaLangDouble_parseDoubleWithNSString_(string);
      return new_SMSimiValue_Number_initWithDouble_(number);
    }
    @catch (JavaLangNumberFormatException *e2) {
      SMSimiException *se = new_SMSimiException_initWithSMSimiClass_withNSString_((id<SMSimiClass>) cast_check([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<SMSimiEnvironment>) nil_chk([((id<SMBlockInterpreter>) nil_chk(interpreter)) getEnvironment])) tryGetWithNSString:SMConstants_EXCEPTION_NUMBER_FORMAT])) getValue])) getObject], SMSimiClass_class_()), @"Invalid number format!");
      [interpreter raiseExceptionWithSMSimiException:se];
      return nil;
    }
  }
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_51 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_51;
}

@end

void SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_51 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_51 *new_SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_51, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_51 *create_SMBaseClassesNativeImpl_51_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_51, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_52

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_52_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  JavaUtilLinkedHashMap *fields = new_JavaUtilLinkedHashMap_init();
  SMSimiNativeObject *object = new_SMSimiNativeObject_initWithJavaUtilLinkedHashMap_(fields);
  SMSimiValue *objectValue = new_SMSimiValue_Object_initWithSMSimiObject_(object);
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [fields putWithId:@"add" withId:new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(new_SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(sb, objectValue), @"add", object)];
  (void) [fields putWithId:@"build" withId:new_SMSimiValue_Callable_initWithSMSimiCallable_withNSString_withSMSimiObject_(new_SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(sb), @"build", object)];
  return objectValue;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getStringClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_52 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_52;
}

@end

void SMBaseClassesNativeImpl_52_init(SMBaseClassesNativeImpl_52 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_52 *new_SMBaseClassesNativeImpl_52_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_52, init)
}

SMBaseClassesNativeImpl_52 *create_SMBaseClassesNativeImpl_52_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_52, init)
}

@implementation SMBaseClassesNativeImpl_52_1

- (instancetype __nonnull)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0
                                        withSMSimiValue:(SMSimiValue *)capture$1 {
  SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(self, capture$0, capture$1);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  id<SMSimiProperty> prop = [((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0];
  if (prop == nil || [prop getValue] == nil) {
    (void) [((JavaLangStringBuilder *) nil_chk(val$sb_)) appendWithNSString:@"nil"];
  }
  else {
    (void) [((JavaLangStringBuilder *) nil_chk(val$sb_)) appendWithNSString:[((SMSimiValue *) nil_chk([prop getValue])) description]];
  }
  return val$objectValue_;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangStringBuilder:withSMSimiValue:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sb_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$objectValue_", "LSMSimiValue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl_52;", "callWithSMBlockInterpreter:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_52_1 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 2, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_52_1;
}

@end

void SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(SMBaseClassesNativeImpl_52_1 *self, JavaLangStringBuilder *capture$0, SMSimiValue *capture$1) {
  self->val$sb_ = capture$0;
  self->val$objectValue_ = capture$1;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_52_1 *new_SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(JavaLangStringBuilder *capture$0, SMSimiValue *capture$1) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_52_1, initWithJavaLangStringBuilder_withSMSimiValue_, capture$0, capture$1)
}

SMBaseClassesNativeImpl_52_1 *create_SMBaseClassesNativeImpl_52_1_initWithJavaLangStringBuilder_withSMSimiValue_(JavaLangStringBuilder *capture$0, SMSimiValue *capture$1) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_52_1, initWithJavaLangStringBuilder_withSMSimiValue_, capture$0, capture$1)
}

@implementation SMBaseClassesNativeImpl_52_2

- (instancetype __nonnull)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0 {
  SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(self, capture$0);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_String_initWithNSString_([((JavaLangStringBuilder *) nil_chk(val$sb_)) description]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangStringBuilder:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sb_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl_52;", "callWithSMBlockInterpreter:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_52_2 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_52_2;
}

@end

void SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(SMBaseClassesNativeImpl_52_2 *self, JavaLangStringBuilder *capture$0) {
  self->val$sb_ = capture$0;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_52_2 *new_SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(JavaLangStringBuilder *capture$0) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_52_2, initWithJavaLangStringBuilder_, capture$0)
}

SMBaseClassesNativeImpl_52_2 *create_SMBaseClassesNativeImpl_52_2_initWithJavaLangStringBuilder_(JavaLangStringBuilder *capture$0) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_52_2, initWithJavaLangStringBuilder_, capture$0)
}

@implementation SMBaseClassesNativeImpl_53

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_53_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jint max = JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong]);
  return new_SMSimiValue_Number_initWithLong_([((JavaUtilConcurrentThreadLocalRandom *) nil_chk(JavaUtilConcurrentThreadLocalRandom_current())) nextIntWithInt:max]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_53 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_53;
}

@end

void SMBaseClassesNativeImpl_53_init(SMBaseClassesNativeImpl_53 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_53 *new_SMBaseClassesNativeImpl_53_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_53, init)
}

SMBaseClassesNativeImpl_53 *create_SMBaseClassesNativeImpl_53_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_53, init)
}

@implementation SMBaseClassesNativeImpl_54

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_54_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithBoolean_([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) isEqual:[arguments getWithInt:1]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_54 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_54;
}

@end

void SMBaseClassesNativeImpl_54_init(SMBaseClassesNativeImpl_54 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_54 *new_SMBaseClassesNativeImpl_54_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_54, init)
}

SMBaseClassesNativeImpl_54 *create_SMBaseClassesNativeImpl_54_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_54, init)
}

@implementation SMBaseClassesNativeImpl_55

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_55_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return new_SMSimiValue_Number_initWithLong_([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) compareToWithId:[((id<SMSimiProperty>) nil_chk([arguments getWithInt:1])) getValue]]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_55 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_55;
}

@end

void SMBaseClassesNativeImpl_55_init(SMBaseClassesNativeImpl_55 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_55 *new_SMBaseClassesNativeImpl_55_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_55, init)
}

SMBaseClassesNativeImpl_55 *create_SMBaseClassesNativeImpl_55_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_55, init)
}

@implementation SMBaseClassesNativeImpl_56

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiValue *value = SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments);
  return new_SMSimiValue_String_initWithNSString_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(value)) getNumber])) description]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_56 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_56;
}

@end

void SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_56 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_56 *new_SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_56, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_56 *create_SMBaseClassesNativeImpl_56_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_56, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_57

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  jlong other = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(value & other);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_57 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_57;
}

@end

void SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_57 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_57 *new_SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_57, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_57 *create_SMBaseClassesNativeImpl_57_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_57, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_58

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  jlong other = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(value | other);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_58 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_58;
}

@end

void SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_58 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_58 *new_SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_58, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_58 *create_SMBaseClassesNativeImpl_58_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_58, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_59

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  jlong other = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(value ^ other);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_59 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_59;
}

@end

void SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_59 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_59 *new_SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_59, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_59 *create_SMBaseClassesNativeImpl_59_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_59, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_60

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(~value);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_60 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_60;
}

@end

void SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_60 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_60 *new_SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_60, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_60 *create_SMBaseClassesNativeImpl_60_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_60, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_61

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  jlong other = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(JreLShift64(value, other));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_61 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_61;
}

@end

void SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_61 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_61 *new_SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_61, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_61 *create_SMBaseClassesNativeImpl_61_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_61, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_62

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  jlong other = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(JreRShift64(value, other));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_62 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_62;
}

@end

void SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_62 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_62 *new_SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_62, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_62 *create_SMBaseClassesNativeImpl_62_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_62, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_63

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$ {
  SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(self, outer$);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jlong value = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk(SMBaseClassesNativeImpl_prepareValueNativeCallWithSMBlockInterpreter_withJavaUtilList_(this$0_, interpreter, arguments))) getNumber])) asLong];
  jlong other = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asLong];
  return new_SMSimiValue_Number_initWithLong_(JreURShift64(value, other));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getNumberClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_63 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_63;
}

@end

void SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl_63 *self, SMBaseClassesNativeImpl *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_63 *new_SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_63, initWithSMBaseClassesNativeImpl_, outer$)
}

SMBaseClassesNativeImpl_63 *create_SMBaseClassesNativeImpl_63_initWithSMBaseClassesNativeImpl_(SMBaseClassesNativeImpl *outer$) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_63, initWithSMBaseClassesNativeImpl_, outer$)
}

@implementation SMBaseClassesNativeImpl_64

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_64_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 0;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  SMSimiObjectImpl *self_ = (SMSimiObjectImpl *) cast_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:0])) getValue])) getObject], [SMSimiObjectImpl class]);
  NSString *message = [((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((SMSimiObjectImpl *) nil_chk(self_)) getWithNSString:@"message" withSMSimiEnvironment:[((id<SMBlockInterpreter>) nil_chk(interpreter)) getEnvironment]])) getValue])) getString];
  [interpreter raiseExceptionWithSMSimiException:new_SMSimiException_initWithSMSimiClass_withNSString_(self_->clazz_, message)];
  return nil;
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getExceptionClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_64 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_64;
}

@end

void SMBaseClassesNativeImpl_64_init(SMBaseClassesNativeImpl_64 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_64 *new_SMBaseClassesNativeImpl_64_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_64, init)
}

SMBaseClassesNativeImpl_64 *create_SMBaseClassesNativeImpl_64_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_64, init)
}

@implementation SMBaseClassesNativeImpl_65

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$
                                    withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)capture$0 {
  SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(self, outer$, capture$0);
  return self;
}

- (jint)arity {
  return 2;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionBiFunction_(this$0_, arguments, [((id<JavaUtilMap_Entry>) nil_chk(val$binary_)) getValue]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:withJavaUtilMap_Entry:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$binary_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/function/BiFunction<Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/Double;>;>;", "LSMBaseClassesNativeImpl;", "getGlobalsClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_65 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 2, 4, -1, 5, -1, -1 };
  return &_SMBaseClassesNativeImpl_65;
}

@end

void SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl_65 *self, SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) {
  self->this$0_ = outer$;
  self->val$binary_ = capture$0;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_65 *new_SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_65, initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_, outer$, capture$0)
}

SMBaseClassesNativeImpl_65 *create_SMBaseClassesNativeImpl_65_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_65, initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_, outer$, capture$0)
}

@implementation SMBaseClassesNativeImpl_66

- (instancetype __nonnull)initWithSMBaseClassesNativeImpl:(SMBaseClassesNativeImpl *)outer$
                                    withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)capture$0 {
  SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(self, outer$, capture$0);
  return self;
}

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  return SMBaseClassesNativeImpl_doMathWithJavaUtilList_withJavaUtilFunctionFunction_(this$0_, arguments, [((id<JavaUtilMap_Entry>) nil_chk(val$unary_)) getValue]);
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSMBaseClassesNativeImpl:withJavaUtilMap_Entry:);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LSMBaseClassesNativeImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$unary_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/function/Function<Ljava/lang/Double;Ljava/lang/Double;>;>;", "LSMBaseClassesNativeImpl;", "getGlobalsClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_66 = { "", "net.globulus.simi", ptrTable, methods, fields, 7, 0x8018, 3, 2, 4, -1, 5, -1, -1 };
  return &_SMBaseClassesNativeImpl_66;
}

@end

void SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl_66 *self, SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) {
  self->this$0_ = outer$;
  self->val$unary_ = capture$0;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_66 *new_SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_66, initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_, outer$, capture$0)
}

SMBaseClassesNativeImpl_66 *create_SMBaseClassesNativeImpl_66_initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_(SMBaseClassesNativeImpl *outer$, id<JavaUtilMap_Entry> capture$0) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_66, initWithSMBaseClassesNativeImpl_withJavaUtilMap_Entry_, outer$, capture$0)
}

@implementation SMBaseClassesNativeImpl_67

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  SMBaseClassesNativeImpl_67_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)arity {
  return 1;
}

- (id<SMSimiProperty>)callWithSMBlockInterpreter:(id<SMBlockInterpreter>)interpreter
                                withJavaUtilList:(id<JavaUtilList>)arguments
                                     withBoolean:(jboolean)rethrow {
  jdouble a = [((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<JavaUtilList>) nil_chk(arguments)) getWithInt:1])) getValue])) getNumber])) asDouble];
  return new_SMSimiValue_Number_initWithLong_(JavaLangMath_roundWithDouble_(a));
}

- (NSString *)toCodeWithInt:(jint)arg0
                withBoolean:(jboolean)arg1 {
  return SMSimiCallable_toCodeWithInt_withBoolean_(self, arg0, arg1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSMSimiProperty;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(arity);
  methods[2].selector = @selector(callWithSMBlockInterpreter:withJavaUtilList:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LSMBlockInterpreter;LJavaUtilList;Z", "(LBlockInterpreter;Ljava/util/List<LSimiProperty;>;Z)LSimiProperty;", "LSMBaseClassesNativeImpl;", "getGlobalsClass" };
  static const J2ObjcClassInfo _SMBaseClassesNativeImpl_67 = { "", "net.globulus.simi", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_SMBaseClassesNativeImpl_67;
}

@end

void SMBaseClassesNativeImpl_67_init(SMBaseClassesNativeImpl_67 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_67 *new_SMBaseClassesNativeImpl_67_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_67, init)
}

SMBaseClassesNativeImpl_67 *create_SMBaseClassesNativeImpl_67_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_67, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$1)

@implementation SMBaseClassesNativeImpl_$Lambda$1

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_powWithDouble_withDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue], [((JavaLangDouble *) nil_chk(b)) doubleValue]));
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$1 class]) {
    SMBaseClassesNativeImpl_$Lambda$1_instance = new_SMBaseClassesNativeImpl_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$1)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$1_init(SMBaseClassesNativeImpl_$Lambda$1 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$1 *new_SMBaseClassesNativeImpl_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$1, init)
}

SMBaseClassesNativeImpl_$Lambda$1 *create_SMBaseClassesNativeImpl_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$2)

@implementation SMBaseClassesNativeImpl_$Lambda$2

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_minWithDouble_withDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue], [((JavaLangDouble *) nil_chk(b)) doubleValue]));
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$2 class]) {
    SMBaseClassesNativeImpl_$Lambda$2_instance = new_SMBaseClassesNativeImpl_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$2)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$2_init(SMBaseClassesNativeImpl_$Lambda$2 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$2 *new_SMBaseClassesNativeImpl_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$2, init)
}

SMBaseClassesNativeImpl_$Lambda$2 *create_SMBaseClassesNativeImpl_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$3)

@implementation SMBaseClassesNativeImpl_$Lambda$3

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_maxWithDouble_withDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue], [((JavaLangDouble *) nil_chk(b)) doubleValue]));
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$3 class]) {
    SMBaseClassesNativeImpl_$Lambda$3_instance = new_SMBaseClassesNativeImpl_$Lambda$3_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$3)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$3_init(SMBaseClassesNativeImpl_$Lambda$3 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$3 *new_SMBaseClassesNativeImpl_$Lambda$3_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$3, init)
}

SMBaseClassesNativeImpl_$Lambda$3 *create_SMBaseClassesNativeImpl_$Lambda$3_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$3, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$4)

@implementation SMBaseClassesNativeImpl_$Lambda$4

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_atan2WithDouble_withDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue], [((JavaLangDouble *) nil_chk(b)) doubleValue]));
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$4 class]) {
    SMBaseClassesNativeImpl_$Lambda$4_instance = new_SMBaseClassesNativeImpl_$Lambda$4_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$4)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$4_init(SMBaseClassesNativeImpl_$Lambda$4 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$4 *new_SMBaseClassesNativeImpl_$Lambda$4_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$4, init)
}

SMBaseClassesNativeImpl_$Lambda$4 *create_SMBaseClassesNativeImpl_$Lambda$4_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$4, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$5)

@implementation SMBaseClassesNativeImpl_$Lambda$5

- (id)applyWithId:(JavaLangDouble *)a
           withId:(JavaLangDouble *)b {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_hypotWithDouble_withDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue], [((JavaLangDouble *) nil_chk(b)) doubleValue]));
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$5 class]) {
    SMBaseClassesNativeImpl_$Lambda$5_instance = new_SMBaseClassesNativeImpl_$Lambda$5_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$5)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$5_init(SMBaseClassesNativeImpl_$Lambda$5 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$5 *new_SMBaseClassesNativeImpl_$Lambda$5_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$5, init)
}

SMBaseClassesNativeImpl_$Lambda$5 *create_SMBaseClassesNativeImpl_$Lambda$5_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$5, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$6)

@implementation SMBaseClassesNativeImpl_$Lambda$6

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_absWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$6 class]) {
    SMBaseClassesNativeImpl_$Lambda$6_instance = new_SMBaseClassesNativeImpl_$Lambda$6_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$6)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$6_init(SMBaseClassesNativeImpl_$Lambda$6 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$6 *new_SMBaseClassesNativeImpl_$Lambda$6_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$6, init)
}

SMBaseClassesNativeImpl_$Lambda$6 *create_SMBaseClassesNativeImpl_$Lambda$6_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$6, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$7)

@implementation SMBaseClassesNativeImpl_$Lambda$7

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_acosWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$7 class]) {
    SMBaseClassesNativeImpl_$Lambda$7_instance = new_SMBaseClassesNativeImpl_$Lambda$7_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$7)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$7_init(SMBaseClassesNativeImpl_$Lambda$7 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$7 *new_SMBaseClassesNativeImpl_$Lambda$7_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$7, init)
}

SMBaseClassesNativeImpl_$Lambda$7 *create_SMBaseClassesNativeImpl_$Lambda$7_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$7, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$8)

@implementation SMBaseClassesNativeImpl_$Lambda$8

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_asinWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$8 class]) {
    SMBaseClassesNativeImpl_$Lambda$8_instance = new_SMBaseClassesNativeImpl_$Lambda$8_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$8)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$8_init(SMBaseClassesNativeImpl_$Lambda$8 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$8 *new_SMBaseClassesNativeImpl_$Lambda$8_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$8, init)
}

SMBaseClassesNativeImpl_$Lambda$8 *create_SMBaseClassesNativeImpl_$Lambda$8_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$8, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$9)

@implementation SMBaseClassesNativeImpl_$Lambda$9

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_atanWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$9 class]) {
    SMBaseClassesNativeImpl_$Lambda$9_instance = new_SMBaseClassesNativeImpl_$Lambda$9_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$9)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$9_init(SMBaseClassesNativeImpl_$Lambda$9 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$9 *new_SMBaseClassesNativeImpl_$Lambda$9_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$9, init)
}

SMBaseClassesNativeImpl_$Lambda$9 *create_SMBaseClassesNativeImpl_$Lambda$9_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$9, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$10)

@implementation SMBaseClassesNativeImpl_$Lambda$10

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_cbrtWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$10 class]) {
    SMBaseClassesNativeImpl_$Lambda$10_instance = new_SMBaseClassesNativeImpl_$Lambda$10_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$10)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$10_init(SMBaseClassesNativeImpl_$Lambda$10 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$10 *new_SMBaseClassesNativeImpl_$Lambda$10_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$10, init)
}

SMBaseClassesNativeImpl_$Lambda$10 *create_SMBaseClassesNativeImpl_$Lambda$10_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$10, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$11)

@implementation SMBaseClassesNativeImpl_$Lambda$11

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_ceilWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$11 class]) {
    SMBaseClassesNativeImpl_$Lambda$11_instance = new_SMBaseClassesNativeImpl_$Lambda$11_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$11)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$11_init(SMBaseClassesNativeImpl_$Lambda$11 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$11 *new_SMBaseClassesNativeImpl_$Lambda$11_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$11, init)
}

SMBaseClassesNativeImpl_$Lambda$11 *create_SMBaseClassesNativeImpl_$Lambda$11_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$11, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$12)

@implementation SMBaseClassesNativeImpl_$Lambda$12

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_cosWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$12 class]) {
    SMBaseClassesNativeImpl_$Lambda$12_instance = new_SMBaseClassesNativeImpl_$Lambda$12_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$12)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$12_init(SMBaseClassesNativeImpl_$Lambda$12 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$12 *new_SMBaseClassesNativeImpl_$Lambda$12_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$12, init)
}

SMBaseClassesNativeImpl_$Lambda$12 *create_SMBaseClassesNativeImpl_$Lambda$12_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$12, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$13)

@implementation SMBaseClassesNativeImpl_$Lambda$13

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_coshWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$13 class]) {
    SMBaseClassesNativeImpl_$Lambda$13_instance = new_SMBaseClassesNativeImpl_$Lambda$13_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$13)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$13_init(SMBaseClassesNativeImpl_$Lambda$13 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$13 *new_SMBaseClassesNativeImpl_$Lambda$13_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$13, init)
}

SMBaseClassesNativeImpl_$Lambda$13 *create_SMBaseClassesNativeImpl_$Lambda$13_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$13, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$14)

@implementation SMBaseClassesNativeImpl_$Lambda$14

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_expWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$14 class]) {
    SMBaseClassesNativeImpl_$Lambda$14_instance = new_SMBaseClassesNativeImpl_$Lambda$14_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$14)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$14_init(SMBaseClassesNativeImpl_$Lambda$14 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$14 *new_SMBaseClassesNativeImpl_$Lambda$14_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$14, init)
}

SMBaseClassesNativeImpl_$Lambda$14 *create_SMBaseClassesNativeImpl_$Lambda$14_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$14, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$15)

@implementation SMBaseClassesNativeImpl_$Lambda$15

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_floorWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$15 class]) {
    SMBaseClassesNativeImpl_$Lambda$15_instance = new_SMBaseClassesNativeImpl_$Lambda$15_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$15)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$15_init(SMBaseClassesNativeImpl_$Lambda$15 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$15 *new_SMBaseClassesNativeImpl_$Lambda$15_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$15, init)
}

SMBaseClassesNativeImpl_$Lambda$15 *create_SMBaseClassesNativeImpl_$Lambda$15_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$15, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$16)

@implementation SMBaseClassesNativeImpl_$Lambda$16

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_logWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$16 class]) {
    SMBaseClassesNativeImpl_$Lambda$16_instance = new_SMBaseClassesNativeImpl_$Lambda$16_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$16)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$16_init(SMBaseClassesNativeImpl_$Lambda$16 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$16 *new_SMBaseClassesNativeImpl_$Lambda$16_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$16, init)
}

SMBaseClassesNativeImpl_$Lambda$16 *create_SMBaseClassesNativeImpl_$Lambda$16_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$16, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$17)

@implementation SMBaseClassesNativeImpl_$Lambda$17

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_log10WithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$17 class]) {
    SMBaseClassesNativeImpl_$Lambda$17_instance = new_SMBaseClassesNativeImpl_$Lambda$17_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$17)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$17_init(SMBaseClassesNativeImpl_$Lambda$17 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$17 *new_SMBaseClassesNativeImpl_$Lambda$17_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$17, init)
}

SMBaseClassesNativeImpl_$Lambda$17 *create_SMBaseClassesNativeImpl_$Lambda$17_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$17, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$18)

@implementation SMBaseClassesNativeImpl_$Lambda$18

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_log1pWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$18 class]) {
    SMBaseClassesNativeImpl_$Lambda$18_instance = new_SMBaseClassesNativeImpl_$Lambda$18_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$18)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$18_init(SMBaseClassesNativeImpl_$Lambda$18 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$18 *new_SMBaseClassesNativeImpl_$Lambda$18_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$18, init)
}

SMBaseClassesNativeImpl_$Lambda$18 *create_SMBaseClassesNativeImpl_$Lambda$18_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$18, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$19)

@implementation SMBaseClassesNativeImpl_$Lambda$19

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_signumWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$19 class]) {
    SMBaseClassesNativeImpl_$Lambda$19_instance = new_SMBaseClassesNativeImpl_$Lambda$19_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$19)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$19_init(SMBaseClassesNativeImpl_$Lambda$19 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$19 *new_SMBaseClassesNativeImpl_$Lambda$19_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$19, init)
}

SMBaseClassesNativeImpl_$Lambda$19 *create_SMBaseClassesNativeImpl_$Lambda$19_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$19, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$20)

@implementation SMBaseClassesNativeImpl_$Lambda$20

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_sinWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$20 class]) {
    SMBaseClassesNativeImpl_$Lambda$20_instance = new_SMBaseClassesNativeImpl_$Lambda$20_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$20)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$20_init(SMBaseClassesNativeImpl_$Lambda$20 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$20 *new_SMBaseClassesNativeImpl_$Lambda$20_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$20, init)
}

SMBaseClassesNativeImpl_$Lambda$20 *create_SMBaseClassesNativeImpl_$Lambda$20_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$20, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$21)

@implementation SMBaseClassesNativeImpl_$Lambda$21

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_sinhWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$21 class]) {
    SMBaseClassesNativeImpl_$Lambda$21_instance = new_SMBaseClassesNativeImpl_$Lambda$21_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$21)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$21_init(SMBaseClassesNativeImpl_$Lambda$21 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$21 *new_SMBaseClassesNativeImpl_$Lambda$21_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$21, init)
}

SMBaseClassesNativeImpl_$Lambda$21 *create_SMBaseClassesNativeImpl_$Lambda$21_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$21, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$22)

@implementation SMBaseClassesNativeImpl_$Lambda$22

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_sqrtWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$22 class]) {
    SMBaseClassesNativeImpl_$Lambda$22_instance = new_SMBaseClassesNativeImpl_$Lambda$22_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$22)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$22_init(SMBaseClassesNativeImpl_$Lambda$22 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$22 *new_SMBaseClassesNativeImpl_$Lambda$22_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$22, init)
}

SMBaseClassesNativeImpl_$Lambda$22 *create_SMBaseClassesNativeImpl_$Lambda$22_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$22, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$23)

@implementation SMBaseClassesNativeImpl_$Lambda$23

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_tanWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$23 class]) {
    SMBaseClassesNativeImpl_$Lambda$23_instance = new_SMBaseClassesNativeImpl_$Lambda$23_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$23)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$23_init(SMBaseClassesNativeImpl_$Lambda$23 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$23 *new_SMBaseClassesNativeImpl_$Lambda$23_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$23, init)
}

SMBaseClassesNativeImpl_$Lambda$23 *create_SMBaseClassesNativeImpl_$Lambda$23_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$23, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$24)

@implementation SMBaseClassesNativeImpl_$Lambda$24

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_tanhWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$24 class]) {
    SMBaseClassesNativeImpl_$Lambda$24_instance = new_SMBaseClassesNativeImpl_$Lambda$24_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$24)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$24_init(SMBaseClassesNativeImpl_$Lambda$24 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$24 *new_SMBaseClassesNativeImpl_$Lambda$24_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$24, init)
}

SMBaseClassesNativeImpl_$Lambda$24 *create_SMBaseClassesNativeImpl_$Lambda$24_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$24, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$25)

@implementation SMBaseClassesNativeImpl_$Lambda$25

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_toDegreesWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$25 class]) {
    SMBaseClassesNativeImpl_$Lambda$25_instance = new_SMBaseClassesNativeImpl_$Lambda$25_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$25)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$25_init(SMBaseClassesNativeImpl_$Lambda$25 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$25 *new_SMBaseClassesNativeImpl_$Lambda$25_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$25, init)
}

SMBaseClassesNativeImpl_$Lambda$25 *create_SMBaseClassesNativeImpl_$Lambda$25_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$25, init)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$26)

@implementation SMBaseClassesNativeImpl_$Lambda$26

- (id)applyWithId:(JavaLangDouble *)a {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_toRadiansWithDouble_([((JavaLangDouble *) nil_chk(a)) doubleValue]));
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$26 class]) {
    SMBaseClassesNativeImpl_$Lambda$26_instance = new_SMBaseClassesNativeImpl_$Lambda$26_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$26)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$26_init(SMBaseClassesNativeImpl_$Lambda$26 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$26 *new_SMBaseClassesNativeImpl_$Lambda$26_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$26, init)
}

SMBaseClassesNativeImpl_$Lambda$26 *create_SMBaseClassesNativeImpl_$Lambda$26_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$26, init)
}

@implementation SMBaseClassesNativeImpl_$Lambda$27

- (jint)compareWithId:(SMSimiValue *)o1
               withId:(SMSimiValue *)o2 {
  return JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<SMSimiCallable>) nil_chk(val$comparator_)) callWithSMBlockInterpreter:val$interpreter_ withJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ o1, o2 } count:2 type:SMSimiProperty_class_()]) withBoolean:false])) getValue])) getNumber])) asLong]);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

@end

void SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(SMBaseClassesNativeImpl_$Lambda$27 *self, id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1) {
  self->val$comparator_ = capture$0;
  self->val$interpreter_ = capture$1;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$27 *new_SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$27, initWithSMSimiCallable_withSMBlockInterpreter_, capture$0, capture$1)
}

SMBaseClassesNativeImpl_$Lambda$27 *create_SMBaseClassesNativeImpl_$Lambda$27_initWithSMSimiCallable_withSMBlockInterpreter_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$27, initWithSMSimiCallable_withSMBlockInterpreter_, capture$0, capture$1)
}

J2OBJC_INITIALIZED_DEFN(SMBaseClassesNativeImpl_$Lambda$28)

@implementation SMBaseClassesNativeImpl_$Lambda$28

- (id)applyWithId:(id<JavaUtilMap_Entry>)a {
  return [((id<JavaUtilMap_Entry>) nil_chk(a)) getKey];
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [SMBaseClassesNativeImpl_$Lambda$28 class]) {
    SMBaseClassesNativeImpl_$Lambda$28_instance = new_SMBaseClassesNativeImpl_$Lambda$28_init();
    J2OBJC_SET_INITIALIZED(SMBaseClassesNativeImpl_$Lambda$28)
  }
}

@end

void SMBaseClassesNativeImpl_$Lambda$28_init(SMBaseClassesNativeImpl_$Lambda$28 *self) {
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$28 *new_SMBaseClassesNativeImpl_$Lambda$28_init() {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$28, init)
}

SMBaseClassesNativeImpl_$Lambda$28 *create_SMBaseClassesNativeImpl_$Lambda$28_init() {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$28, init)
}

@implementation SMBaseClassesNativeImpl_$Lambda$29

- (jint)compareWithId:(id<JavaUtilMap_Entry>)o1
               withId:(id<JavaUtilMap_Entry>)o2 {
  return JavaLangMath_toIntExactWithLong_([((SMSimiValue_Number *) nil_chk([((SMSimiValue *) nil_chk([((id<SMSimiProperty>) nil_chk([((id<SMSimiCallable>) nil_chk(val$comparator_)) callWithSMBlockInterpreter:val$interpreter_ withJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ create_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_decomposedPairWithSMSimiClassImpl_withSMSimiValue_withSMSimiValue_(val$objectClass_, create_SMSimiValue_String_initWithNSString_([((id<JavaUtilMap_Entry>) nil_chk(o1)) getKey]), [o1 getValue])), create_SMSimiValue_Object_initWithSMSimiObject_(SMSimiObjectImpl_decomposedPairWithSMSimiClassImpl_withSMSimiValue_withSMSimiValue_(val$objectClass_, create_SMSimiValue_String_initWithNSString_([((id<JavaUtilMap_Entry>) nil_chk(o2)) getKey]), [o2 getValue])) } count:2 type:SMSimiProperty_class_()]) withBoolean:false])) getValue])) getNumber])) asLong]);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

@end

void SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(SMBaseClassesNativeImpl_$Lambda$29 *self, id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1, SMSimiClassImpl *capture$2) {
  self->val$comparator_ = capture$0;
  self->val$interpreter_ = capture$1;
  self->val$objectClass_ = capture$2;
  NSObject_init(self);
}

SMBaseClassesNativeImpl_$Lambda$29 *new_SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1, SMSimiClassImpl *capture$2) {
  J2OBJC_NEW_IMPL(SMBaseClassesNativeImpl_$Lambda$29, initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_, capture$0, capture$1, capture$2)
}

SMBaseClassesNativeImpl_$Lambda$29 *create_SMBaseClassesNativeImpl_$Lambda$29_initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_(id<SMSimiCallable> capture$0, id<SMBlockInterpreter> capture$1, SMSimiClassImpl *capture$2) {
  J2OBJC_CREATE_IMPL(SMBaseClassesNativeImpl_$Lambda$29, initWithSMSimiCallable_withSMBlockInterpreter_withSMSimiClassImpl_, capture$0, capture$1, capture$2)
}
