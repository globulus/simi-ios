//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/Debugger.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetGlobulusSimiDebugger")
#ifdef RESTRICT_NetGlobulusSimiDebugger
#define INCLUDE_ALL_NetGlobulusSimiDebugger 0
#else
#define INCLUDE_ALL_NetGlobulusSimiDebugger 1
#endif
#undef RESTRICT_NetGlobulusSimiDebugger

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SMDebugger_) && (INCLUDE_ALL_NetGlobulusSimiDebugger || defined(INCLUDE_SMDebugger))
#define SMDebugger_

@class SMDebugger_Frame;
@class SMStmt;
@protocol SMDebugger_Evaluator;

@interface SMDebugger : NSObject

+ (NSString *)BREAKPOINT_LEXEME;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (void)popCall;

- (void)pushCallWithSMDebugger_Frame:(SMDebugger_Frame *)frame;

- (void)pushLineWithSMDebugger_Frame:(SMDebugger_Frame *)frame;

- (void)setEvaluatorWithSMDebugger_Evaluator:(id<SMDebugger_Evaluator>)evaluator;

- (void)triggerBreakpointWithSMStmt:(SMStmt *)stmt;

@end

J2OBJC_EMPTY_STATIC_INIT(SMDebugger)

inline NSString *SMDebugger_get_BREAKPOINT_LEXEME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *SMDebugger_BREAKPOINT_LEXEME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SMDebugger, BREAKPOINT_LEXEME, NSString *)

FOUNDATION_EXPORT void SMDebugger_init(SMDebugger *self);

FOUNDATION_EXPORT SMDebugger *new_SMDebugger_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMDebugger *create_SMDebugger_init(void);

J2OBJC_TYPE_LITERAL_HEADER(SMDebugger)

@compatibility_alias NetGlobulusSimiDebugger SMDebugger;

#endif

#if !defined (SMDebugger_Frame_) && (INCLUDE_ALL_NetGlobulusSimiDebugger || defined(INCLUDE_SMDebugger_Frame))
#define SMDebugger_Frame_

@class IOSObjectArray;
@class JavaLangInteger;
@class SMEnvironment;
@protocol SMCodifiable;

@interface SMDebugger_Frame : NSObject {
 @public
  SMEnvironment *environment_;
  id<SMCodifiable> line_;
  IOSObjectArray *before_;
  IOSObjectArray *after_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithSMEnvironment:(SMEnvironment *)environment
                               withSMCodifiable:(id<SMCodifiable>)line
                          withSMCodifiableArray:(IOSObjectArray *)before
                          withSMCodifiableArray:(IOSObjectArray *)after;

- (void)printWithJavaLangInteger:(JavaLangInteger *)index;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SMDebugger_Frame)

J2OBJC_FIELD_SETTER(SMDebugger_Frame, environment_, SMEnvironment *)
J2OBJC_FIELD_SETTER(SMDebugger_Frame, line_, id<SMCodifiable>)
J2OBJC_FIELD_SETTER(SMDebugger_Frame, before_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(SMDebugger_Frame, after_, IOSObjectArray *)

FOUNDATION_EXPORT void SMDebugger_Frame_initWithSMEnvironment_withSMCodifiable_withSMCodifiableArray_withSMCodifiableArray_(SMDebugger_Frame *self, SMEnvironment *environment, id<SMCodifiable> line, IOSObjectArray *before, IOSObjectArray *after);

FOUNDATION_EXPORT SMDebugger_Frame *new_SMDebugger_Frame_initWithSMEnvironment_withSMCodifiable_withSMCodifiableArray_withSMCodifiableArray_(SMEnvironment *environment, id<SMCodifiable> line, IOSObjectArray *before, IOSObjectArray *after) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SMDebugger_Frame *create_SMDebugger_Frame_initWithSMEnvironment_withSMCodifiable_withSMCodifiableArray_withSMCodifiableArray_(SMEnvironment *environment, id<SMCodifiable> line, IOSObjectArray *before, IOSObjectArray *after);

J2OBJC_TYPE_LITERAL_HEADER(SMDebugger_Frame)

#endif

#if !defined (SMDebugger_Evaluator_) && (INCLUDE_ALL_NetGlobulusSimiDebugger || defined(INCLUDE_SMDebugger_Evaluator))
#define SMDebugger_Evaluator_

@class SMEnvironment;

@protocol SMDebugger_Evaluator < JavaObject >

- (NSString *)evalWithNSString:(NSString *)input
             withSMEnvironment:(SMEnvironment *)environment;

- (SMEnvironment *)getGlobalEnvironment;

@end

J2OBJC_EMPTY_STATIC_INIT(SMDebugger_Evaluator)

J2OBJC_TYPE_LITERAL_HEADER(SMDebugger_Evaluator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetGlobulusSimiDebugger")
